[{"/home/jeff/Nextcloud/Development/battletech-tools/src/index.tsx":"1","/home/jeff/Nextcloud/Development/battletech-tools/src/serviceWorker.ts":"2","/home/jeff/Nextcloud/Development/battletech-tools/src/UI/AppRouter.tsx":"3","/home/jeff/Nextcloud/Development/battletech-tools/src/configVars.ts":"4","/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Classes/Alerts.ts":"5","/home/jeff/Nextcloud/Development/battletech-tools/src/Classes/AlphaStrikeForce.ts":"6","/home/jeff/Nextcloud/Development/battletech-tools/src/Classes/BattleMech.ts":"7","/home/jeff/Nextcloud/Development/battletech-tools/src/Classes/AlphaStrikeGroup.ts":"8","/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Pages/Error404.tsx":"9","/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Pages/Home.tsx":"10","/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Pages/About.tsx":"11","/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Pages/DevelopmentStatus.tsx":"12","/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Pages/Settings.tsx":"13","/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Components/SanitizedHTML.tsx":"14","/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Pages/MechCreator/_Router.tsx":"15","/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Pages/AlphaStrikeRoster/_Router.tsx":"16","/home/jeff/Nextcloud/Development/battletech-tools/src/Classes/AlphaStrikeUnit.ts":"17","/home/jeff/Nextcloud/Development/battletech-tools/src/utils.ts":"18","/home/jeff/Nextcloud/Development/battletech-tools/src/Data/mech-type-options.ts":"19","/home/jeff/Nextcloud/Development/battletech-tools/src/Data/tech-options.ts":"20","/home/jeff/Nextcloud/Development/battletech-tools/src/Data/era-options.ts":"21","/home/jeff/Nextcloud/Development/battletech-tools/src/Data/mech-armor-types.ts":"22","/home/jeff/Nextcloud/Development/battletech-tools/src/Data/mech-internal-structure-types.ts":"23","/home/jeff/Nextcloud/Development/battletech-tools/src/Data/mech-heat-sink-types.ts":"24","/home/jeff/Nextcloud/Development/battletech-tools/src/Data/mech-jump-jet-types.ts":"25","/home/jeff/Nextcloud/Development/battletech-tools/src/Data/mech-gyro-types.ts":"26","/home/jeff/Nextcloud/Development/battletech-tools/src/Data/mech-engine-options.ts":"27","/home/jeff/Nextcloud/Development/battletech-tools/src/Data/battlemechLocations.ts":"28","/home/jeff/Nextcloud/Development/battletech-tools/src/Data/mech-is-equipment.ts":"29","/home/jeff/Nextcloud/Development/battletech-tools/src/Data/mech-clan-equipment.ts":"30","/home/jeff/Nextcloud/Development/battletech-tools/src/Data/mech-engine-types.ts":"31","/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Components/UIPage.tsx":"32","/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Pages/MechCreator/Step2.tsx":"33","/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Pages/MechCreator/Step3.tsx":"34","/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Pages/MechCreator/Step4.tsx":"35","/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Pages/MechCreator/Step5.tsx":"36","/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Pages/MechCreator/Step6.tsx":"37","/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Pages/MechCreator/Exports.tsx":"38","/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Pages/AlphaStrikeRoster/Home.tsx":"39","/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Pages/AlphaStrikeRoster/InPlay.tsx":"40","/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Pages/MechCreator/Home.tsx":"41","/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Pages/MechCreator/Step1.tsx":"42","/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Pages/MechCreator/PrintRS.tsx":"43","/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Pages/MechCreator/Summary.tsx":"44","/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Components/MechCreatorStatusBar.tsx":"45","/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Components/AvailableEquipment.tsx":"46","/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Components/CriticalAllocationSection.tsx":"47","/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Components/TopMenu.tsx":"48","/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Components/BattleTechLogo.tsx":"49","/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Components/SVG/QuadArmorDiagramSVG.tsx":"50","/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Components/SVG/AlphaStrikeUnitSVG.tsx":"51","/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Components/SVG/BattleMechSVG.tsx":"52","/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Components/SVG/BipedArmorCircles.tsx":"53","/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Components/SVG/DamageCircleSVG.tsx":"54","/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Components/SVG/HeatSinksSVG.tsx":"55","/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Components/SVG/QuadRearArmorDiagramSVG.tsx":"56","/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Components/SVG/BipedRearArmorDiagramSVG.tsx":"57","/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Components/SVG/BipedArmorDiagramSVG.tsx":"58","/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Components/SVG/QuadInternalStructureDiagramSVG.tsx":"59","/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Components/SVG/QuadArmorCircles.tsx":"60","/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Components/SVG/CritAllocationTableSVG.tsx":"61","/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Components/SVG/BipedInternalStructureDiagramSVG.tsx":"62","/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Components/SVG/HeatTrackSVG.tsx":"63","/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Components/SVG/BattleMechHeatEffectsBoxSVG.tsx":"64","/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Components/SVG/QuadDamageTransferDiagramSVG.tsx":"65","/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Components/SVG/RecordSheetEquipmentTable.tsx":"66","/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Components/SVG/PilotHitTrackSVG.tsx":"67","/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Components/SVG/BipedDamageTransferDiagramSVG.tsx":"68","/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Components/SVG/RecordSheetGroupBoxSVG.tsx":"69","/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Components/SVG/DieSVG.tsx":"70","/home/jeff/Nextcloud/Development/battletech-tools/src/Data/mech-tonnages.ts":"71","/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Components/MechCreatorSideMenu.tsx":"72","/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Components/PrintablePage.tsx":"73","/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Components/UnallocatedEquipmentList.tsx":"74","/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Components/ShowAlerts.tsx":"75"},{"size":517,"mtime":1563493224486,"results":"76","hashOfConfig":"77"},{"size":5201,"mtime":1563493224486,"results":"78","hashOfConfig":"77"},{"size":13522,"mtime":1565038718000,"results":"79","hashOfConfig":"77"},{"size":366,"mtime":1565017401000,"results":"80","hashOfConfig":"77"},{"size":3883,"mtime":1563493224486,"results":"81","hashOfConfig":"77"},{"size":4732,"mtime":1563886085000,"results":"82","hashOfConfig":"77"},{"size":244641,"mtime":1565810705000,"results":"83","hashOfConfig":"77"},{"size":2657,"mtime":1564868702498,"results":"84","hashOfConfig":"77"},{"size":692,"mtime":1564274887000,"results":"85","hashOfConfig":"77"},{"size":999,"mtime":1564338817296,"results":"86","hashOfConfig":"77"},{"size":4181,"mtime":1564338817292,"results":"87","hashOfConfig":"77"},{"size":6332,"mtime":1565786551000,"results":"88","hashOfConfig":"77"},{"size":2107,"mtime":1565038458000,"results":"89","hashOfConfig":"77"},{"size":2652,"mtime":1563493224486,"results":"90","hashOfConfig":"77"},{"size":3451,"mtime":1564404589000,"results":"91","hashOfConfig":"77"},{"size":1297,"mtime":1563915317000,"results":"92","hashOfConfig":"77"},{"size":25661,"mtime":1605735733000,"results":"93","hashOfConfig":"77"},{"size":3978,"mtime":1563979960000,"results":"94","hashOfConfig":"77"},{"size":277,"mtime":1564338817292,"results":"95","hashOfConfig":"77"},{"size":285,"mtime":1564338817292,"results":"96","hashOfConfig":"77"},{"size":1477,"mtime":1564338817292,"results":"97","hashOfConfig":"77"},{"size":1400,"mtime":1564338817292,"results":"98","hashOfConfig":"77"},{"size":4322,"mtime":1564338817292,"results":"99","hashOfConfig":"77"},{"size":510,"mtime":1564338817292,"results":"100","hashOfConfig":"77"},{"size":611,"mtime":1564338817292,"results":"101","hashOfConfig":"77"},{"size":854,"mtime":1564338817292,"results":"102","hashOfConfig":"77"},{"size":12088,"mtime":1564338817292,"results":"103","hashOfConfig":"77"},{"size":1140,"mtime":1564338817292,"results":"104","hashOfConfig":"77"},{"size":98441,"mtime":1565798893000,"results":"105","hashOfConfig":"77"},{"size":13924,"mtime":1564338817292,"results":"106","hashOfConfig":"77"},{"size":1203,"mtime":1564338817292,"results":"107","hashOfConfig":"77"},{"size":801,"mtime":1564274841000,"results":"108","hashOfConfig":"77"},{"size":8838,"mtime":1565035097000,"results":"109","hashOfConfig":"77"},{"size":6354,"mtime":1565035097000,"results":"110","hashOfConfig":"77"},{"size":26311,"mtime":1565807348000,"results":"111","hashOfConfig":"77"},{"size":9278,"mtime":1565035097000,"results":"112","hashOfConfig":"77"},{"size":17182,"mtime":1565035097000,"results":"113","hashOfConfig":"77"},{"size":2492,"mtime":1565035097000,"results":"114","hashOfConfig":"77"},{"size":29683,"mtime":1607141735055,"results":"115","hashOfConfig":"77"},{"size":3945,"mtime":1564277523000,"results":"116","hashOfConfig":"77"},{"size":2773,"mtime":1564338817296,"results":"117","hashOfConfig":"77"},{"size":9528,"mtime":1565034958000,"results":"118","hashOfConfig":"77"},{"size":1005,"mtime":1565746511392,"results":"119","hashOfConfig":"77"},{"size":11769,"mtime":1565035097000,"results":"120","hashOfConfig":"77"},{"size":2099,"mtime":1565032623000,"results":"121","hashOfConfig":"77"},{"size":4299,"mtime":1564084689000,"results":"122","hashOfConfig":"77"},{"size":3974,"mtime":1564080944000,"results":"123","hashOfConfig":"77"},{"size":4633,"mtime":1565038676000,"results":"124","hashOfConfig":"77"},{"size":7043,"mtime":1565036651000,"results":"125","hashOfConfig":"77"},{"size":21688,"mtime":1564959336843,"results":"126","hashOfConfig":"77"},{"size":38376,"mtime":1607117135000,"results":"127","hashOfConfig":"77"},{"size":160460,"mtime":1565810721000,"results":"128","hashOfConfig":"77"},{"size":120151,"mtime":1565746341044,"results":"129","hashOfConfig":"77"},{"size":2487,"mtime":1565709043000,"results":"130","hashOfConfig":"77"},{"size":25446,"mtime":1565710540000,"results":"131","hashOfConfig":"77"},{"size":3916,"mtime":1564960648825,"results":"132","hashOfConfig":"77"},{"size":6364,"mtime":1565008979000,"results":"133","hashOfConfig":"77"},{"size":31365,"mtime":1564960353990,"results":"134","hashOfConfig":"77"},{"size":34121,"mtime":1564960982111,"results":"135","hashOfConfig":"77"},{"size":126580,"mtime":1565720044000,"results":"136","hashOfConfig":"77"},{"size":8058,"mtime":1564955117795,"results":"137","hashOfConfig":"77"},{"size":30633,"mtime":1564960932623,"results":"138","hashOfConfig":"77"},{"size":5979,"mtime":1564948871840,"results":"139","hashOfConfig":"77"},{"size":12147,"mtime":1564955117811,"results":"140","hashOfConfig":"77"},{"size":21306,"mtime":1564183667899,"results":"141","hashOfConfig":"77"},{"size":9087,"mtime":1565008979000,"results":"142","hashOfConfig":"77"},{"size":5179,"mtime":1564949125794,"results":"143","hashOfConfig":"77"},{"size":25404,"mtime":1564183667899,"results":"144","hashOfConfig":"77"},{"size":3364,"mtime":1564366026845,"results":"145","hashOfConfig":"77"},{"size":9899,"mtime":1564949283691,"results":"146","hashOfConfig":"77"},{"size":1036,"mtime":1563916957000,"results":"147","hashOfConfig":"77"},{"size":4408,"mtime":1564074161000,"results":"148","hashOfConfig":"77"},{"size":1573,"mtime":1564405678000,"results":"149","hashOfConfig":"77"},{"size":1899,"mtime":1564080944000,"results":"150","hashOfConfig":"77"},{"size":5373,"mtime":1563493224486,"results":"151","hashOfConfig":"77"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},"1khcik6",{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"154"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/jeff/Nextcloud/Development/battletech-tools/src/index.tsx",[],["304","305"],"/home/jeff/Nextcloud/Development/battletech-tools/src/serviceWorker.ts",[],"/home/jeff/Nextcloud/Development/battletech-tools/src/UI/AppRouter.tsx",[],"/home/jeff/Nextcloud/Development/battletech-tools/src/configVars.ts",[],"/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Classes/Alerts.ts",[],"/home/jeff/Nextcloud/Development/battletech-tools/src/Classes/AlphaStrikeForce.ts",[],"/home/jeff/Nextcloud/Development/battletech-tools/src/Classes/BattleMech.ts",[],"/home/jeff/Nextcloud/Development/battletech-tools/src/Classes/AlphaStrikeGroup.ts",[],"/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Pages/Error404.tsx",[],"/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Pages/Home.tsx",[],"/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Pages/About.tsx",[],"/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Pages/DevelopmentStatus.tsx",[],"/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Pages/Settings.tsx",[],"/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Components/SanitizedHTML.tsx",[],"/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Pages/MechCreator/_Router.tsx",[],"/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Pages/AlphaStrikeRoster/_Router.tsx",[],"/home/jeff/Nextcloud/Development/battletech-tools/src/Classes/AlphaStrikeUnit.ts",[],"/home/jeff/Nextcloud/Development/battletech-tools/src/utils.ts",[],"/home/jeff/Nextcloud/Development/battletech-tools/src/Data/mech-type-options.ts",[],"/home/jeff/Nextcloud/Development/battletech-tools/src/Data/tech-options.ts",[],"/home/jeff/Nextcloud/Development/battletech-tools/src/Data/era-options.ts",[],"/home/jeff/Nextcloud/Development/battletech-tools/src/Data/mech-armor-types.ts",[],"/home/jeff/Nextcloud/Development/battletech-tools/src/Data/mech-internal-structure-types.ts",[],"/home/jeff/Nextcloud/Development/battletech-tools/src/Data/mech-heat-sink-types.ts",[],"/home/jeff/Nextcloud/Development/battletech-tools/src/Data/mech-jump-jet-types.ts",[],"/home/jeff/Nextcloud/Development/battletech-tools/src/Data/mech-gyro-types.ts",[],"/home/jeff/Nextcloud/Development/battletech-tools/src/Data/mech-engine-options.ts",[],"/home/jeff/Nextcloud/Development/battletech-tools/src/Data/battlemechLocations.ts",[],"/home/jeff/Nextcloud/Development/battletech-tools/src/Data/mech-is-equipment.ts",[],"/home/jeff/Nextcloud/Development/battletech-tools/src/Data/mech-clan-equipment.ts",[],"/home/jeff/Nextcloud/Development/battletech-tools/src/Data/mech-engine-types.ts",[],"/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Components/UIPage.tsx",[],"/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Pages/MechCreator/Step2.tsx",[],"/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Pages/MechCreator/Step3.tsx",[],"/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Pages/MechCreator/Step4.tsx",[],"/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Pages/MechCreator/Step5.tsx",[],"/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Pages/MechCreator/Step6.tsx",[],"/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Pages/MechCreator/Exports.tsx",[],"/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Pages/AlphaStrikeRoster/Home.tsx",[],"/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Pages/AlphaStrikeRoster/InPlay.tsx",[],"/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Pages/MechCreator/Home.tsx",[],"/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Pages/MechCreator/Step1.tsx",[],"/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Pages/MechCreator/PrintRS.tsx",[],"/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Pages/MechCreator/Summary.tsx",[],"/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Components/MechCreatorStatusBar.tsx",[],"/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Components/AvailableEquipment.tsx",[],"/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Components/CriticalAllocationSection.tsx",[],"/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Components/TopMenu.tsx",[],"/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Components/BattleTechLogo.tsx",[],"/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Components/SVG/QuadArmorDiagramSVG.tsx",[],"/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Components/SVG/AlphaStrikeUnitSVG.tsx",[],"/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Components/SVG/BattleMechSVG.tsx",["306","307","308","309","310","311","312","313","314","315"],"\nimport React from 'react';\nimport { BattleMech } from '../../../Classes/BattleMech';\nimport DieSVG from './DieSVG';\nimport RecordSheetGroupBoxSVG from './RecordSheetGroupBoxSVG';\nimport PilotHitTrackSVG from './PilotHitTrackSVG';\nimport BattleTechLogo from '../BattleTechLogo';\nimport RecordSheetEquipmentTable from './RecordSheetEquipmentTable';\nimport BipedDamageTransferDiagramSVG from './BipedDamageTransferDiagramSVG';\nimport QuadDamageTransferDiagramSVG from './QuadDamageTransferDiagramSVG';\nimport HeatTrackSVG from './HeatTrackSVG';\nimport BattleMechHeatEffectsBoxSVG from './BattleMechHeatEffectsBoxSVG';\nimport CritAllocationTableSVG from './CritAllocationTableSVG';\nimport BipedInternalStructureDiagramSVG from './BipedInternalStructureDiagramSVG';\nimport QuadInternalStructureDiagramSVG from './QuadInternalStructureDiagramSVG';\nimport BipedArmorDiagramSVG from './BipedArmorDiagramSVG';\nimport QuadArmorDiagramSVG from './QuadArmorDiagramSVG';\nimport BipedRearArmorDiagramSVG from './BipedRearArmorDiagramSVG';\nimport QuadRearArmorDiagramSVG from './QuadRearArmorDiagramSVG';\nimport HeatSinksSVG from './HeatSinksSVG';\nimport DamageCircleSVG from './DamageCircleSVG';\nimport QuadArmorCircles from './QuadArmorCircles';\nimport BipedArmorCircles from './BipedArmorCircles';\n\nexport default class BattleMechSVG extends React.Component<IBattleMechSVGProps, IBattleMechSVGState> {\n    bgColor = \"rgb(255,255,255)\";\n    strokeColor = \"rgb(0,0,0)\";\n    // landscape: boolean = false;\n    inPlay: boolean = false;\n    docWidth = 2000;\n    docHeight = 2600;\n\n    colorTan = \"#fdfde3\";\n\n\n    armorBoxLeft = 1240\n    armorBoxWidth = 745\n    armorBoxTop = 10\n\n\n    isBoxLeft = 1250;\n    isBoxWidth =655;\n    isBoxTop = 1250;\n\n    isQuadCenterAdjust = 0;\n\n    constructor(props: IBattleMechSVGProps) {\n        super(props);\n\n        this.state = {\n        }\n        if( this.props.bgColor ) {\n            this.bgColor = this.props.bgColor;\n        }\n        if( this.props.strokeColor ) {\n            this.strokeColor = this.props.strokeColor;\n        }\n        // if( this.props.landscape ) {\n        //     this.landscape = this.props.landscape;\n        // }\n        if( this.props.inPlay ) {\n            this.inPlay = this.props.inPlay;\n        }\n\n        this.toggleISBubble = this.toggleISBubble.bind(this);\n        // this.toggleArmorBubble = this.toggleArmorBubble.bind(this);\n    }\n\n    toggleISBubble( shortLoc: string, indexNumnber: number) {\n\t\tif( this.props.inPlay ) {\n\t\t\tthis.props.mechData.toggleISBubble(shortLoc, indexNumnber);\n\t\t}\n    }\n\n\n\n    render() {\n        let generalDataBoxX = 10;\n        let generalDataBoxY = 10;\n\n        let pilotBoxX = 725;\n        let pilotBoxY = 160;\n\n        let eraString = this.props.mechData.getEra().name;\n        let eraArray = eraString.split(\"(\");\n        let eraLine1 = eraArray[0];\n        let eraLine2 = \"\";\n        if( eraArray[1] ) {\n            eraLine2 = eraArray[1];\n            eraLine2 = eraLine2.replace(\")\", \"\");\n            eraLine2 = eraLine2.replace(\"(\", \"\");\n        }\n        eraLine1 = eraLine1.trim();\n        eraLine2 = eraLine2.trim();\n\n        let battleValue = this.props.mechData.getBattleValue().toString();\n        if( battleValue !== this.props.mechData.getPilotAdjustedBattleValue().toString() )\n            battleValue = battleValue + \" (\" + this.props.mechData.getPilotAdjustedBattleValue() + \")\";\n\n        let critBoxTop = 1250;\n        let critBoxLeft = 10;\n        let critBoxWidth = 1225;\n        let damageTransferWidth = 250;\n\n        let critCol1Start = 125;\n        let critCol2Start = 513;\n        let critCol3Start = 925;\n\n        return (\n        <>\n        <svg\n            version=\"1.1\"\n            x={0}\n            y={0}\n            viewBox={\"0 0 \" + this.docWidth  + \" \" + this.docHeight }\n            xmlns=\"http://www.w3.org/2000/svg\"\n        >\n            <g>\n\n                <rect\n                    x={0}\n                    y={0}\n                    width={this.docWidth}\n                    height={this.docHeight}\n                    fill={this.bgColor}\n                />\n\n                <RecordSheetGroupBoxSVG\n                    width={700}\n                    height={400}\n                    xLoc={generalDataBoxX}\n                    yLoc={generalDataBoxY}\n                    title=\"'Mech Data\"\n                    bgColor={this.bgColor}\n                    strokeColor={this.strokeColor}\n                >\n                    <text\n                        x={10 + generalDataBoxX}\n                        y={80 + generalDataBoxY}\n                        textAnchor=\"start\"\n                        fontFamily=\"sans-serif\"\n                        fill={this.strokeColor}\n                        style={{fontWeight: 700}}\n                        fontSize={30}\n                    >\n                        Type:\n                    </text>\n\n\n                    <text\n                        x={10 + generalDataBoxX}\n                        y={120 + generalDataBoxY}\n                        textAnchor=\"start\"\n                        fontFamily=\"sans-serif\"\n                        fill={this.strokeColor}\n                        style={{fontWeight: 500}}\n                        fontSize={35}\n                    >\n                        {this.props.mechData.getName()}\n                    </text>\n\n\n\n                    {/* // Movement */}\n                    <text\n                        x={generalDataBoxX + 15}\n                        y={generalDataBoxY + 160}\n                        textAnchor=\"start\"\n                        fontFamily=\"sans-serif\"\n                        fill={this.strokeColor}\n                        style={{fontWeight: 700}}\n                        fontSize={30}\n                    >\n                        Movement Points\n                    </text>\n\n                    {/* // Walk */}\n                    <text\n                        x={generalDataBoxX + 220}\n                        y={generalDataBoxY + 210}\n                        textAnchor=\"end\"\n                        fontFamily=\"sans-serif\"\n                        fill={this.strokeColor}\n                        style={{fontWeight: 700}}\n                        fontSize={30}\n                    >\n                        Walking:\n                    </text>\n                    <text\n                        x={generalDataBoxX + 240}\n                        y={generalDataBoxY + 210}\n                        textAnchor=\"start\" fontFamily=\"sans-serif\"\n                        fill={this.strokeColor}\n                        style={{fontWeight: 500}}\n                        fontSize={30}\n                    >\n                        {this.props.mechData.getWalkSpeed()}\n                    </text>\n                    <DieSVG\n                        posY={ generalDataBoxY + 210 - 25}\n                        posX={generalDataBoxX + 20}\n                        strokeColor=\"#000000\"\n                        bgColor=\"#ffffff\"\n                        pipColor=\"#000000\"\n                        width={30}\n                        numberPips={1}\n                    />\n\n                    {/* // Run */}\n                    <text\n                        x={generalDataBoxX + 220}\n                        y={generalDataBoxY + 245}\n                        textAnchor=\"end\" fontFamily=\"sans-serif\"\n                        fill={this.strokeColor}\n                        style={{fontWeight: 700}}\n                        fontSize={30}\n                    >\n                        Running\n                    </text>\n                    <text\n                    x={generalDataBoxX + 240}\n                    y={generalDataBoxY + 245}\n                    textAnchor=\"start\"\n                    fontFamily=\"sans-serif\"\n                    fill={this.strokeColor}\n                    style={{fontWeight: 500}}\n                    fontSize={30}\n                    >\n                        {this.props.mechData.getRunSpeed()}\n                    </text>\n\n                    <DieSVG\n                        posY={ generalDataBoxY + 245 - 25}\n                        posX={generalDataBoxX + 20}\n                        strokeColor=\"#000000\"\n                        bgColor=\"#000000\"\n                        pipColor=\"#ffffff\"\n                        width={30}\n                        numberPips={2}\n                    />\n                    {/* // Jump */}\n                    <text\n                        x={generalDataBoxX + 220}\n                        y={generalDataBoxY + 280}\n                        textAnchor=\"end\"\n                        fontFamily=\"sans-serif\"\n                        fill={this.strokeColor}\n                        style={{fontWeight: 700}}\n                        fontSize={30}\n                    >\n                        Jumping\n                    </text>\n                    <text\n                        x={generalDataBoxX + 240}\n                        y={generalDataBoxY + 280}\n                        textAnchor=\"start\"\n                        fontFamily=\"sans-serif\"\n                        fill={this.strokeColor}\n                        style={{fontWeight: 500}}\n                        fontSize={30}\n                    >\n                        {this.props.mechData.getJumpSpeed()}\n                    </text>\n\n                    <DieSVG\n                        posY={ generalDataBoxY + 280 - 25}\n                        posX={generalDataBoxX + 20}\n                        strokeColor=\"#cc0000\"\n                        bgColor=\"#cc0000\"\n                        pipColor=\"#ffffff\"\n                        width={30}\n                        numberPips={3}\n                    />\n\n\n                {/* // Tonnage */}\n                <text\n                    x={generalDataBoxX + 340}\n                    y={generalDataBoxY + 160}\n                    textAnchor=\"start\"\n                    fontFamily=\"sans-serif\"\n                    fill={this.strokeColor}\n                    style={{fontWeight: 700}}\n                    fontSize={25}>\n                    Tonnage:\n                </text>\n                <text\n                    x={generalDataBoxX + 665}\n                    y={generalDataBoxY + 160}\n                    textAnchor=\"end\"\n                    fontFamily=\"sans-serif\"\n                    fill={this.strokeColor}\n                    style={{fontWeight: 500}}\n                    fontSize={25}\n                    >\n                        {this.props.mechData.getTonnage()}\n                    </text>\n\n                // Tech Base\n                <text\n                    x={generalDataBoxX + 340}\n                    y={generalDataBoxY + 205}\n                    textAnchor=\"start\" fontFamily=\"sans-serif\"\n                    fill={this.strokeColor} style={{fontWeight: 700}}\n                    fontSize={25}\n                >\n                    Tech Base:\n                </text>\n                <text\n                    x={generalDataBoxX + 665}\n                    y={generalDataBoxY + 225}\n                    textAnchor=\"end\" fontFamily=\"sans-serif\"\n                    fill={this.strokeColor} style={{fontWeight: 500}}\n                    fontSize={25}\n                >\n                    {this.props.mechData.getTech().name}\n                </text>\n\n                <text\n\n                    x={generalDataBoxX + 340}\n                    y={generalDataBoxY + 255}\n                    textAnchor=\"start\"\n                    fontFamily=\"sans-serif\"\n                    fill={this.strokeColor}\n                    style={{fontWeight: 700}}\n                    fontSize={25}\n                >\n                    Era:\n                </text>\n\n                <text\n                    x={generalDataBoxX + 665}\n                    y={generalDataBoxY + 280}\n                    textAnchor=\"end\"\n                    fontFamily=\"sans-serif\"\n                    fill={this.strokeColor}\n                    style={{fontWeight: 500}}\n                    fontSize={20}\n                >{eraLine1}</text>\n                <text\n                    x={generalDataBoxX + 665}\n                    y={generalDataBoxY + 300}\n                    textAnchor=\"end\"\n                    fontFamily=\"sans-serif\"\n                    fill={this.strokeColor}\n                    style={{fontWeight: 500}}\n                    fontSize={20}\n                >{eraLine2}</text>\n\n\n                {/* // Cost */}\n                <text\n                    x={generalDataBoxX + 15}\n                    y={generalDataBoxY + 350}\n                    textAnchor=\"start\"\n                    fontFamily=\"sans-serif\"\n                    fill={this.strokeColor}\n                    style={{fontWeight: 700}}\n                    fontSize={30}\n                    >\n                        Cost (CBills)\n                    </text>\n                <text\n                    x={generalDataBoxX + 15}\n                    y={generalDataBoxY + 380}\n                    textAnchor=\"start\"\n                    fontFamily=\"sans-serif\"\n                    fill={this.strokeColor}\n                    style={{fontWeight: 500}}\n                    fontSize={25  }\n                >\n                    {this.props.mechData.getCBillCost()}\n                </text>\n\t            {/* // BV */}\n                <text\n                    x={generalDataBoxX + 340}\n                    y={generalDataBoxY + 350}\n                    textAnchor=\"start\"\n                    fontFamily=\"sans-serif\"\n                    fill={this.strokeColor}\n                    style={{fontWeight: 700}}\n                    fontSize={30}\n                >\n                    BattleValue (BV2)\n                </text>\n\n\n            <text\n                x={generalDataBoxX + 340}\n                y={generalDataBoxY + 380}\n                textAnchor=\"start\"\n                fontFamily=\"sans-serif\"\n                fill={this.strokeColor}\n                style={{fontWeight: 500}}\n                fontSize={25}\n            >\n                {battleValue}\n            </text>\n\n                </RecordSheetGroupBoxSVG>\n\n\n\n\n\n    <text\n        x={this.docWidth / 2 - 25}\n        y={80}\n        textAnchor=\"middle\"\n        fontFamily=\"sans-serif\"\n        fill={this.strokeColor}\n        style={{fontWeight: 700}}\n        fontSize={65}\n    >\n        BATTLEMECH\n    </text>\n    <text\n        x={this.docWidth / 2 - 25}\n        y={120}\n        textAnchor=\"middle\"\n        fontFamily=\"sans-serif\"\n        fill={this.strokeColor}\n        style={{fontWeight: 700}}\n        fontSize={35}\n    >\n        Record Sheet\n    </text>\n\n\n    <RecordSheetGroupBoxSVG\n        width={500}\n        height={250}\n        xLoc={pilotBoxX}\n        yLoc={pilotBoxY}\n        title=\"Warrior Data\"\n        bgColor={this.bgColor}\n        strokeColor={this.strokeColor}\n    >\n        \t{/* // Name/Type */}\n            <text\n                x={pilotBoxX + 10}\n                y={pilotBoxY + 80}\n                textAnchor=\"start\"\n                fontFamily=\"sans-serif\"\n                fill={this.strokeColor}\n                style={{fontWeight: 500}}\n                fontSize={25}\n            >\n                {this.props.mechData.getPilot().name}\n            </text>\n\n\t// Piloting\n            <text\n                x={pilotBoxX + 450}\n                y={pilotBoxY + 120}\n                textAnchor=\"end\"\n                fontFamily=\"sans-serif\"\n                fill={this.strokeColor}\n                style={{fontWeight: 500}}\n                fontSize={35}\n            >\n                Piloting: {this.props.mechData.getPilot().piloting}\n            </text>\n\n\t        // Gunnery\n            <text\n                x={pilotBoxX + 450}\n                y={pilotBoxY + 160}\n                textAnchor=\"end\"\n                fontFamily=\"sans-serif\"\n                fill={this.strokeColor}\n                style={{fontWeight: 500}}\n                fontSize={35}\n            >\n                Gunnery: {this.props.mechData.getPilot().gunnery}\n            </text>\n\n            <PilotHitTrackSVG\n                width={500}\n                height={250}\n                xLoc={pilotBoxX + 100}\n                yLoc={pilotBoxY + 200}\n                bgColor={this.bgColor}\n                strokeColor={this.strokeColor}\n                pilot={this.props.mechData.getPilot()}\n            />\n\n    </RecordSheetGroupBoxSVG>\n\n\n    <RecordSheetEquipmentTable\n        width={1215}\n        height={770}\n        xLoc={10}\n        yLoc={440}\n        mechData={this.props.mechData}\n    />\n\n\n    <RecordSheetGroupBoxSVG\n        width={this.armorBoxWidth}\n        height={1200}\n        xLoc={this.armorBoxLeft}\n        yLoc={this.armorBoxTop}\n        title=\"Armor Diagram\"\n    >\n    {this.props.mechData.getMechType().tag === \"biped\" ? (\n        <>\n            <BipedArmorDiagramSVG\n                xLoc={1263}\n                yLoc={-10}\n                width={700}\n            />\n\n            <BipedRearArmorDiagramSVG\n                xLoc={1413}\n                yLoc={875}\n                width={400}\n            />\n\n\n\n        {/* Main Armor Labels */}\n\t\t<text x={this.armorBoxLeft + this.armorBoxWidth / 2} y={this.armorBoxTop + 70} textAnchor=\"middle\" fontFamily=\"sans-serif\" fill={this.strokeColor} style={{fontWeight: 700}} fontSize={20}>HEAD [{this.props.mechData.getArmorAllocation().head }]</text>\n\n\t\t<text x={this.armorBoxLeft + this.armorBoxWidth / 2 - 55} y={this.armorBoxTop + 95} textAnchor=\"end\" fontFamily=\"sans-serif\" fill={this.strokeColor} style={{fontWeight: 700}} fontSize={20}>LEFT TORSO</text>\n\t\t<text x={this.armorBoxLeft + this.armorBoxWidth / 2 - 85} y={this.armorBoxTop + 115} textAnchor=\"end\" fontFamily=\"sans-serif\" fill={this.strokeColor} style={{fontWeight: 700}} fontSize={20}>[{this.props.mechData.getArmorAllocation().leftTorso }]</text>\n\n\t\t<text x={this.armorBoxLeft + this.armorBoxWidth / 2 + 55} y={this.armorBoxTop + 95} textAnchor=\"start\" fontFamily=\"sans-serif\" fill={this.strokeColor} style={{fontWeight: 700}} fontSize={20}>RIGHT TORSO</text>\n\t\t<text x={this.armorBoxLeft + this.armorBoxWidth / 2 + 85} y={this.armorBoxTop + 115} textAnchor=\"start\" fontFamily=\"sans-serif\" fill={this.strokeColor} style={{fontWeight: 700}} fontSize={20}>[{this.props.mechData.getArmorAllocation().rightTorso }]</text>\n\n\n\t\t<text x={this.armorBoxLeft +  20} y={this.armorBoxTop + 620} textAnchor=\"start\" fontFamily=\"sans-serif\" fill={this.strokeColor} style={{fontWeight: 700}} fontSize={20}>LEFT</text>\n\t\t<text x={this.armorBoxLeft +  20} y={this.armorBoxTop + 640} textAnchor=\"start\" fontFamily=\"sans-serif\" fill={this.strokeColor} style={{fontWeight: 700}} fontSize={20}>ARM [{this.props.mechData.getArmorAllocation().leftArm }]</text>\n\n\t\t<text x={this.armorBoxLeft + this.armorBoxWidth - 40} y={this.armorBoxTop + 620} textAnchor=\"end\" fontFamily=\"sans-serif\" fill={this.strokeColor} style={{fontWeight: 700}} fontSize={20}>RIGHT</text>\n\t\t<text x={this.armorBoxLeft + this.armorBoxWidth - 40} y={this.armorBoxTop + 640} textAnchor=\"end\" fontFamily=\"sans-serif\" fill={this.strokeColor} style={{fontWeight: 700}} fontSize={20}>ARM [{this.props.mechData.getArmorAllocation().rightArm }]</text>\n\n\t\t<text x={this.armorBoxLeft +  20} y={this.armorBoxTop + 890} textAnchor=\"start\" fontFamily=\"sans-serif\" fill={this.strokeColor} style={{fontWeight: 700}} fontSize={20}>LEFT</text>\n\t\t<text x={this.armorBoxLeft +  20} y={this.armorBoxTop + 910} textAnchor=\"start\" fontFamily=\"sans-serif\" fill={this.strokeColor} style={{fontWeight: 700}} fontSize={20}>LEG [{this.props.mechData.getArmorAllocation().leftLeg }]</text>\n\n\t\t<text x={this.armorBoxLeft + this.armorBoxWidth - 20} y={this.armorBoxTop + 890} textAnchor=\"end\" fontFamily=\"sans-serif\" fill={this.strokeColor} style={{fontWeight: 700}} fontSize={20}>RIGHT</text>\n\t\t<text x={this.armorBoxLeft + this.armorBoxWidth - 20} y={this.armorBoxTop + 910} textAnchor=\"end\" fontFamily=\"sans-serif\" fill={this.strokeColor} style={{fontWeight: 700}} fontSize={20}>LEG [{this.props.mechData.getArmorAllocation().rightLeg }]</text>\n\n\t\t<text x={this.armorBoxLeft + this.armorBoxWidth / 2  } y={this.armorBoxTop + 600} textAnchor=\"middle\" fontFamily=\"sans-serif\" fill={this.strokeColor} style={{fontWeight: 700}} fontSize={20}>CENTER</text>\n\t\t<text x={this.armorBoxLeft + this.armorBoxWidth / 2 } y={this.armorBoxTop + 620} textAnchor=\"middle\" fontFamily=\"sans-serif\" fill={this.strokeColor} style={{fontWeight: 700}} fontSize={20}>TORSO</text>\n\t\t<text x={this.armorBoxLeft + this.armorBoxWidth / 2 } y={this.armorBoxTop + 640} textAnchor=\"middle\" fontFamily=\"sans-serif\" fill={this.strokeColor} style={{fontWeight: 700}} fontSize={20}>[{this.props.mechData.getArmorAllocation().centerTorso })</text>\n\n\t\t<text x={this.armorBoxLeft + this.armorBoxWidth / 2 } y={this.armorBoxTop + 1215} textAnchor=\"middle\" fontFamily=\"sans-serif\" fill={this.strokeColor} style={{fontWeight: 700}} fontSize={20}>CENTER TORSO (REAR) [{this.props.mechData.getArmorAllocation().centerTorsoRear }]</text>\n\n\t\t<text x={this.armorBoxLeft + this.armorBoxWidth / 2 - 190} y={this.armorBoxTop + 1090} textAnchor=\"end\" fontFamily=\"sans-serif\" fill={this.strokeColor} style={{fontWeight: 700}} fontSize={20}>LEFT TORSO</text>\n\t\t<text x={this.armorBoxLeft + this.armorBoxWidth / 2 - 190} y={this.armorBoxTop + 1110} textAnchor=\"end\" fontFamily=\"sans-serif\" fill={this.strokeColor} style={{fontWeight: 700}} fontSize={20}>(REAR) [{this.props.mechData.getArmorAllocation().leftTorsoRear }]</text>\n\n\t\t<text x={this.armorBoxLeft + this.armorBoxWidth / 2 + 190} y={this.armorBoxTop + 1090} textAnchor=\"start\" fontFamily=\"sans-serif\" fill={this.strokeColor} style={{fontWeight: 700}} fontSize={20}>RIGHT TORSO</text>\n\t\t<text x={this.armorBoxLeft + this.armorBoxWidth / 2 + 190} y={this.armorBoxTop + 1110} textAnchor=\"start\" fontFamily=\"sans-serif\" fill={this.strokeColor} style={{fontWeight: 700}} fontSize={20}>(REAR) [{this.props.mechData.getArmorAllocation().rightTorsoRear }]</text>\n            <BipedArmorCircles\n                armorBoxLeft={this.armorBoxLeft}\n                armorBoxWidth={this.armorBoxWidth}\n                armorBoxTop={this.armorBoxTop}\n                inPlay={this.props.inPlay}\n                mechData={this.props.mechData}\n            />\n        </>\n    ) : (\n        <>\n\n            <QuadArmorDiagramSVG\n                xLoc={this.armorBoxLeft + 55}\n                yLoc={this.armorBoxTop + 50}\n                width={640}\n            />\n\n            <QuadRearArmorDiagramSVG\n                xLoc={this.armorBoxLeft + 170}\n                yLoc={this.armorBoxTop + 970}\n                width={400}\n            />\n\n\n        // Main Armor Labels\n\t\t<text x={this.armorBoxLeft + this.armorBoxWidth / 2 } y={this.armorBoxTop + 125} textAnchor=\"middle\" fontFamily=\"sans-serif\" fill={this.strokeColor} style={{fontWeight: 700}} fontSize={20}>HEAD [{ this.props.mechData.getArmorAllocation().head }]</text>\n\n\t\t<text x={this.armorBoxLeft + this.armorBoxWidth / 2 - 95} y={this.armorBoxTop + 105} textAnchor=\"end\" fontFamily=\"sans-serif\" fill={this.strokeColor} style={{fontWeight: 700}} fontSize={20}>LEFT TORSO</text>\n\t\t<text x={this.armorBoxLeft + this.armorBoxWidth / 2 - 125 } y={this.armorBoxTop + 125} textAnchor=\"end\" fontFamily=\"sans-serif\" fill={this.strokeColor} style={{fontWeight: 700}} fontSize={20}>[{ this.props.mechData.getArmorAllocation().leftTorso }]</text>\n\n\t\t<text x={this.armorBoxLeft + this.armorBoxWidth / 2 + 95 } y={this.armorBoxTop + 105} textAnchor=\"start\" fontFamily=\"sans-serif\" fill={this.strokeColor} style={{fontWeight: 700}} fontSize={20}>RIGHT TORSO</text>\n\t\t<text x={this.armorBoxLeft + this.armorBoxWidth / 2 + 125 } y={this.armorBoxTop + 125} textAnchor=\"start\" fontFamily=\"sans-serif\" fill={this.strokeColor} style={{fontWeight: 700}} fontSize={20}>[{ this.props.mechData.getArmorAllocation().rightTorso }]</text>\n\n\t\t<text x={this.armorBoxLeft +  this.armorBoxWidth / 2 - 280 } y={this.armorBoxTop + 970} textAnchor=\"start\" fontFamily=\"sans-serif\" fill={this.strokeColor} style={{fontWeight: 700}} fontSize={20}>FRONT</text>\n\t\t<text x={this.armorBoxLeft +  this.armorBoxWidth / 2 - 280 } y={this.armorBoxTop + 990} textAnchor=\"start\" fontFamily=\"sans-serif\" fill={this.strokeColor} style={{fontWeight: 700}} fontSize={20}>LEFT</text>\n\t\t<text x={this.armorBoxLeft +  this.armorBoxWidth / 2 - 280 } y={this.armorBoxTop + 1010} textAnchor=\"start\" fontFamily=\"sans-serif\" fill={this.strokeColor} style={{fontWeight: 700}} fontSize={20}>LEG [{ this.props.mechData.getArmorAllocation().leftArm }]</text>\n\n\t\t<text x={this.armorBoxLeft + this.armorBoxWidth / 2 + 280 } y={this.armorBoxTop + 970} textAnchor=\"end\" fontFamily=\"sans-serif\" fill={this.strokeColor} style={{fontWeight: 700}} fontSize={20}>FRONT</text>\n\t\t<text x={this.armorBoxLeft + this.armorBoxWidth / 2 + 280 } y={this.armorBoxTop + 990} textAnchor=\"end\" fontFamily=\"sans-serif\" fill={this.strokeColor} style={{fontWeight: 700}} fontSize={20}>RIGHT</text>\n\t\t<text x={this.armorBoxLeft + this.armorBoxWidth / 2 + 280 } y={this.armorBoxTop + 1010} textAnchor=\"end\" fontFamily=\"sans-serif\" fill={this.strokeColor} style={{fontWeight: 700}} fontSize={20}>LEG [{ this.props.mechData.getArmorAllocation().rightArm }]</text>\n\n\t\t<text x={this.armorBoxLeft +  this.armorBoxWidth / 2 - 110 } y={this.armorBoxTop + 935} textAnchor=\"start\" fontFamily=\"sans-serif\" fill={this.strokeColor} style={{fontWeight: 700}} fontSize={20}>REAR</text>\n\t\t<text x={this.armorBoxLeft +  this.armorBoxWidth / 2 - 110 } y={this.armorBoxTop + 955} textAnchor=\"start\" fontFamily=\"sans-serif\" fill={this.strokeColor} style={{fontWeight: 700}} fontSize={20}>LEFT</text>\n\t\t<text x={this.armorBoxLeft +  this.armorBoxWidth / 2 - 110 } y={this.armorBoxTop + 975} textAnchor=\"start\" fontFamily=\"sans-serif\" fill={this.strokeColor} style={{fontWeight: 700}} fontSize={20}>LEG [{ this.props.mechData.getArmorAllocation().leftLeg }]</text>\n\n\t\t<text x={this.armorBoxLeft + this.armorBoxWidth / 2 + 110 } y={this.armorBoxTop + 935} textAnchor=\"end\" fontFamily=\"sans-serif\" fill={this.strokeColor} style={{fontWeight: 700}} fontSize={20}>REAR</text>\n\t\t<text x={this.armorBoxLeft + this.armorBoxWidth / 2 + 110 } y={this.armorBoxTop + 955} textAnchor=\"end\" fontFamily=\"sans-serif\" fill={this.strokeColor} style={{fontWeight: 700}} fontSize={20}>RIGHT</text>\n\t\t<text x={this.armorBoxLeft + this.armorBoxWidth / 2 + 110 } y={this.armorBoxTop + 975} textAnchor=\"end\" fontFamily=\"sans-serif\" fill={this.strokeColor} style={{fontWeight: 700}} fontSize={20}>LEG [{ this.props.mechData.getArmorAllocation().rightLeg }]</text>\n\n\t\t<text x={this.armorBoxLeft + this.armorBoxWidth / 2 + 10  } y={this.armorBoxTop + 600} textAnchor=\"middle\" fontFamily=\"sans-serif\" fill={this.strokeColor} style={{fontWeight: 700}} fontSize={17}>CENTER</text>\n\t\t<text x={this.armorBoxLeft + this.armorBoxWidth / 2 + 10  } y={this.armorBoxTop + 620} textAnchor=\"middle\" fontFamily=\"sans-serif\" fill={this.strokeColor} style={{fontWeight: 700}} fontSize={17}>TORSO</text>\n\t\t<text x={this.armorBoxLeft + this.armorBoxWidth / 2 + 10  } y={this.armorBoxTop + 640} textAnchor=\"middle\" fontFamily=\"sans-serif\" fill={this.strokeColor} style={{fontWeight: 700}} fontSize={17}>[{ this.props.mechData.getArmorAllocation().centerTorso })</text>\n\n\t\t<text x={this.armorBoxLeft + this.armorBoxWidth / 2  } y={this.armorBoxTop + 1210} textAnchor=\"middle\" fontFamily=\"sans-serif\" fill={this.strokeColor} style={{fontWeight: 700}} fontSize={20}>CENTER TORSO (REAR) [{ this.props.mechData.getArmorAllocation().centerTorsoRear }]</text>\n\n\t\t<text x={this.armorBoxLeft + this.armorBoxWidth / 2 - 190 } y={this.armorBoxTop + 1090} textAnchor=\"end\" fontFamily=\"sans-serif\" fill={this.strokeColor} style={{fontWeight: 700}} fontSize={20}>LEFT TORSO</text>\n\t\t<text x={this.armorBoxLeft + this.armorBoxWidth / 2 - 190 } y={this.armorBoxTop + 1110} textAnchor=\"end\" fontFamily=\"sans-serif\" fill={this.strokeColor} style={{fontWeight: 700}} fontSize={20}>(REAR) [{ this.props.mechData.getArmorAllocation().leftTorsoRear }]</text>\n\n\t\t<text x={this.armorBoxLeft + this.armorBoxWidth / 2 + 190 } y={this.armorBoxTop + 1090} textAnchor=\"start\" fontFamily=\"sans-serif\" fill={this.strokeColor} style={{fontWeight: 700}} fontSize={20}>RIGHT TORSO</text>\n\t\t<text x={this.armorBoxLeft + this.armorBoxWidth / 2 + 190 } y={this.armorBoxTop + 1110} textAnchor=\"start\" fontFamily=\"sans-serif\" fill={this.strokeColor} style={{fontWeight: 700}} fontSize={20}>(REAR) [{ this.props.mechData.getArmorAllocation().rightTorsoRear }]</text>\n\n            <QuadArmorCircles\n                armorBoxLeft={this.armorBoxLeft}\n                armorBoxWidth={this.armorBoxWidth}\n                armorBoxTop={this.armorBoxTop}\n                inPlay={this.props.inPlay}\n                mechData={this.props.mechData}\n            />\n        </>\n    )}\n    </RecordSheetGroupBoxSVG>\n\n\n    <RecordSheetGroupBoxSVG\n        width={this.isBoxWidth}\n        height={600}\n        xLoc={this.isBoxLeft}\n        yLoc={this.isBoxTop}\n        title=\"Internal Structure\"\n    >\n    {this.props.mechData.getMechType().tag === \"biped\" ? (\n        <>\n            <BipedInternalStructureDiagramSVG\n                xLoc={1350}\n                yLoc={1275}\n                width={420}\n            />\n\n\n        {/* // Main Structure Labels */}\n\t\t<text x={this.isBoxLeft + this.isBoxWidth / 2} y={this.isBoxTop + 55} textAnchor=\"middle\" fontFamily=\"sans-serif\" fill={this.strokeColor} style={{fontWeight: 700}} fontSize={15}>HEAD [{this.props.mechData.getInternalStructure().head }]</text>\n\n\t\t<text x={this.isBoxLeft + this.isBoxWidth / 2 - 65} y={this.isBoxTop + 85} textAnchor=\"end\" fontFamily=\"sans-serif\" fill={this.strokeColor} style={{fontWeight: 700}} fontSize={15}>LEFT TORSO</text>\n\t\t<text x={this.isBoxLeft + this.isBoxWidth / 2 - 65} y={this.isBoxTop + 105} textAnchor=\"end\" fontFamily=\"sans-serif\" fill={this.strokeColor} style={{fontWeight: 700}} fontSize={15}>[{this.props.mechData.getInternalStructure().leftTorso }]</text>\n\n\t\t<text x={this.isBoxLeft + this.isBoxWidth / 2 + 65} y={this.isBoxTop + 85} textAnchor=\"start\" fontFamily=\"sans-serif\" fill={this.strokeColor} style={{fontWeight: 700}} fontSize={15}>RIGHT TORSO</text>\n\t\t<text x={this.isBoxLeft + this.isBoxWidth / 2 + 65} y={this.isBoxTop + 105} textAnchor=\"start\" fontFamily=\"sans-serif\" fill={this.strokeColor} style={{fontWeight: 700}} fontSize={15}>[{this.props.mechData.getInternalStructure().rightTorso }]</text>\n\n\n\t\t<text x={this.isBoxLeft +  this.isBoxWidth / 2 - 200} y={this.isBoxTop + 310} textAnchor=\"end\" fontFamily=\"sans-serif\" fill={this.strokeColor} style={{fontWeight: 700}} fontSize={15}>LEFT</text>\n\t\t<text x={this.isBoxLeft +  this.isBoxWidth / 2 - 200} y={this.isBoxTop + 330} textAnchor=\"end\" fontFamily=\"sans-serif\" fill={this.strokeColor} style={{fontWeight: 700}} fontSize={15}>ARM [{this.props.mechData.getInternalStructure().leftArm }]</text>\n\n\t\t<text x={this.isBoxLeft + this.isBoxWidth / 2 + 200} y={this.isBoxTop + 310} textAnchor=\"start\" fontFamily=\"sans-serif\" fill={this.strokeColor} style={{fontWeight: 700}} fontSize={15}>RIGHT</text>\n\t\t<text x={this.isBoxLeft + this.isBoxWidth / 2 + 200} y={this.isBoxTop + 330} textAnchor=\"start\" fontFamily=\"sans-serif\" fill={this.strokeColor} style={{fontWeight: 700}} fontSize={15}>ARM [{this.props.mechData.getInternalStructure().rightArm }]</text>\n\n\t\t<text x={this.isBoxLeft +  this.isBoxWidth / 2 - 150} y={this.isBoxTop + 570} textAnchor=\"end\" fontFamily=\"sans-serif\" fill={this.strokeColor} style={{fontWeight: 700}} fontSize={15}>LEFT</text>\n\t\t<text x={this.isBoxLeft +  this.isBoxWidth / 2 - 150} y={this.isBoxTop + 590} textAnchor=\"end\" fontFamily=\"sans-serif\" fill={this.strokeColor} style={{fontWeight: 700}} fontSize={15}>LEG [{this.props.mechData.getInternalStructure().leftLeg }]</text>\n\n\t\t<text x={this.isBoxLeft + this.isBoxWidth / 2 + 150} y={this.isBoxTop + 570} textAnchor=\"start\" fontFamily=\"sans-serif\" fill={this.strokeColor} style={{fontWeight: 700}} fontSize={15}>RIGHT</text>\n\t\t<text x={this.isBoxLeft + this.isBoxWidth / 2 + 150} y={this.isBoxTop + 590} textAnchor=\"start\" fontFamily=\"sans-serif\" fill={this.strokeColor} style={{fontWeight: 700}} fontSize={15}>LEG [{this.props.mechData.getInternalStructure().rightLeg }]</text>\n\n\t\t<text x={this.isBoxLeft + this.isBoxWidth / 2 } y={this.isBoxTop + 400} textAnchor=\"middle\" fontFamily=\"sans-serif\" fill={this.strokeColor} style={{fontWeight: 700}} fontSize={15}>CENTER</text>\n\t\t<text x={this.isBoxLeft + this.isBoxWidth / 2 } y={this.isBoxTop + 420} textAnchor=\"middle\" fontFamily=\"sans-serif\" fill={this.strokeColor} style={{fontWeight: 700}} fontSize={15}>TORSO</text>\n\t\t<text x={this.isBoxLeft + this.isBoxWidth / 2 } y={this.isBoxTop + 440} textAnchor=\"middle\" fontFamily=\"sans-serif\" fill={this.strokeColor} style={{fontWeight: 700}} fontSize={15}>[{this.props.mechData.getInternalStructure().centerTorso })</text>\n\n\n        {/* Head IS */}\n        {this.props.mechData.getInternalStructure().head > 0 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 15 } yLoc={this.isBoxTop + 120} radius={10} inPlay={this.props.inPlay} clickLocation=\"hd\" clickIndex={0} clickFunction={this.toggleISBubble}/></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().head > 1 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 15 } yLoc={this.isBoxTop + 120} radius={10} inPlay={this.props.inPlay} clickLocation=\"hd\" clickIndex={1} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().head > 2 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2} yLoc={this.isBoxTop + 140} radius={10} inPlay={this.props.inPlay} clickLocation=\"hd\" clickIndex={2} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n\n\n        {/* Left Arm IS */}\n        {this.props.mechData.getInternalStructure().leftArm > 0 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 135} yLoc={this.isBoxTop + 150} radius={10} inPlay={this.props.inPlay} clickLocation=\"la\" clickIndex={0} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().leftArm > 1 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 137} yLoc={this.isBoxTop + 165} radius={10} inPlay={this.props.inPlay} clickLocation=\"la\" clickIndex={1} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().leftArm > 2 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 140} yLoc={this.isBoxTop + 180} radius={10} inPlay={this.props.inPlay} clickLocation=\"la\" clickIndex={2} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().leftArm > 3 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 142} yLoc={this.isBoxTop + 195} radius={10} inPlay={this.props.inPlay} clickLocation=\"la\" clickIndex={3} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().leftArm > 4 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 145} yLoc={this.isBoxTop + 210} radius={10} inPlay={this.props.inPlay} clickLocation=\"la\" clickIndex={4} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n\n        {this.props.mechData.getInternalStructure().leftArm > 5 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 147} yLoc={this.isBoxTop + 235} radius={10} inPlay={this.props.inPlay} clickLocation=\"la\" clickIndex={5} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().leftArm > 6 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 148} yLoc={this.isBoxTop + 250} radius={10} inPlay={this.props.inPlay} clickLocation=\"la\" clickIndex={6} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().leftArm > 7 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 149} yLoc={this.isBoxTop + 265} radius={10} inPlay={this.props.inPlay} clickLocation=\"la\" clickIndex={7} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().leftArm > 8 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 150} yLoc={this.isBoxTop + 280} radius={10} inPlay={this.props.inPlay} clickLocation=\"la\" clickIndex={8} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().leftArm > 9 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 151} yLoc={this.isBoxTop + 295} radius={10} inPlay={this.props.inPlay} clickLocation=\"la\" clickIndex={9} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n\n\n        {this.props.mechData.getInternalStructure().leftArm > 10 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 152} yLoc={this.isBoxTop + 150} radius={10} inPlay={this.props.inPlay} clickLocation=\"la\" clickIndex={10} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().leftArm > 11 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 155} yLoc={this.isBoxTop + 165} radius={10} inPlay={this.props.inPlay} clickLocation=\"la\" clickIndex={11} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().leftArm > 12 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 158} yLoc={this.isBoxTop + 180} radius={10} inPlay={this.props.inPlay} clickLocation=\"la\" clickIndex={12} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().leftArm > 13 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 160} yLoc={this.isBoxTop + 195} radius={10} inPlay={this.props.inPlay} clickLocation=\"la\" clickIndex={13} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().leftArm > 14 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 163} yLoc={this.isBoxTop + 210} radius={10} inPlay={this.props.inPlay} clickLocation=\"la\" clickIndex={14} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n\n        {this.props.mechData.getInternalStructure().leftArm > 15 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 154} yLoc={this.isBoxTop + 315} radius={10} inPlay={this.props.inPlay} clickLocation=\"la\" clickIndex={15} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().leftArm > 16 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 157} yLoc={this.isBoxTop + 330} radius={10} inPlay={this.props.inPlay} clickLocation=\"la\" clickIndex={16} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().leftArm > 17 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 160} yLoc={this.isBoxTop + 345} radius={10} inPlay={this.props.inPlay} clickLocation=\"la\" clickIndex={17} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().leftArm > 18 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 162} yLoc={this.isBoxTop + 360} radius={10} inPlay={this.props.inPlay} clickLocation=\"la\" clickIndex={18} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().leftArm > 19 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 165} yLoc={this.isBoxTop + 375} radius={10} inPlay={this.props.inPlay} clickLocation=\"la\" clickIndex={19} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n\n\n\n        {/* Right Arm IS */}\n        {this.props.mechData.getInternalStructure().rightArm > 0 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 135} yLoc={this.isBoxTop + 150} radius={10} inPlay={this.props.inPlay} clickLocation=\"ra\" clickIndex={0} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().rightArm > 1 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 137} yLoc={this.isBoxTop + 165} radius={10} inPlay={this.props.inPlay} clickLocation=\"ra\" clickIndex={1} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().rightArm > 2 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 140} yLoc={this.isBoxTop + 180} radius={10} inPlay={this.props.inPlay} clickLocation=\"ra\" clickIndex={2} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().rightArm > 3 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 142} yLoc={this.isBoxTop + 195} radius={10} inPlay={this.props.inPlay} clickLocation=\"ra\" clickIndex={3} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().rightArm > 4 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 145} yLoc={this.isBoxTop + 210} radius={10} inPlay={this.props.inPlay} clickLocation=\"ra\" clickIndex={4} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n\n        {this.props.mechData.getInternalStructure().rightArm > 5 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 147} yLoc={this.isBoxTop + 235} radius={10} inPlay={this.props.inPlay} clickLocation=\"ra\" clickIndex={5} clickFunction={this.toggleISBubble}  /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().rightArm > 6 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 148} yLoc={this.isBoxTop + 250} radius={10} inPlay={this.props.inPlay} clickLocation=\"ra\" clickIndex={6} clickFunction={this.toggleISBubble}  /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().rightArm > 7 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 149} yLoc={this.isBoxTop + 265} radius={10} inPlay={this.props.inPlay} clickLocation=\"ra\" clickIndex={7} clickFunction={this.toggleISBubble}  /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().rightArm > 8 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 150} yLoc={this.isBoxTop + 280} radius={10} inPlay={this.props.inPlay} clickLocation=\"ra\" clickIndex={8} clickFunction={this.toggleISBubble}  /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().rightArm > 9 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 151} yLoc={this.isBoxTop + 295} radius={10} inPlay={this.props.inPlay} clickLocation=\"ra\" clickIndex={9} clickFunction={this.toggleISBubble}  /></>) : (<></>)}\n\n\n        {this.props.mechData.getInternalStructure().rightArm > 10 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 152} yLoc={this.isBoxTop + 150} radius={10} inPlay={this.props.inPlay} clickLocation=\"ra\" clickIndex={10} clickFunction={this.toggleISBubble}  /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().rightArm > 11 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 155} yLoc={this.isBoxTop + 165} radius={10} inPlay={this.props.inPlay} clickLocation=\"ra\" clickIndex={11} clickFunction={this.toggleISBubble}  /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().rightArm > 12 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 158} yLoc={this.isBoxTop + 180} radius={10} inPlay={this.props.inPlay} clickLocation=\"ra\" clickIndex={12} clickFunction={this.toggleISBubble}  /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().rightArm > 13 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 160} yLoc={this.isBoxTop + 195} radius={10} inPlay={this.props.inPlay} clickLocation=\"ra\" clickIndex={13} clickFunction={this.toggleISBubble}  /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().rightArm > 14 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 163} yLoc={this.isBoxTop + 210} radius={10} inPlay={this.props.inPlay} clickLocation=\"ra\" clickIndex={14} clickFunction={this.toggleISBubble}  /></>) : (<></>)}\n\n        {this.props.mechData.getInternalStructure().rightArm > 15 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 154} yLoc={this.isBoxTop + 315} radius={10} inPlay={this.props.inPlay} clickLocation=\"ra\" clickIndex={15} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().rightArm > 16 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 157} yLoc={this.isBoxTop + 330} radius={10} inPlay={this.props.inPlay} clickLocation=\"ra\" clickIndex={16} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().rightArm > 17 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 160} yLoc={this.isBoxTop + 345} radius={10} inPlay={this.props.inPlay} clickLocation=\"ra\" clickIndex={17} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().rightArm > 18 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 162} yLoc={this.isBoxTop + 360} radius={10} inPlay={this.props.inPlay} clickLocation=\"ra\" clickIndex={18} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().rightArm > 19 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 165} yLoc={this.isBoxTop + 375} radius={10} inPlay={this.props.inPlay} clickLocation=\"ra\" clickIndex={19} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n\n\n        {/* Center Torso IS */}\n        {this.props.mechData.getInternalStructure().centerTorso > 0 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 0} yLoc={this.isBoxTop + 175} radius={10} inPlay={this.props.inPlay} clickLocation=\"ct\" clickIndex={0} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().centerTorso > 1 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 0} yLoc={this.isBoxTop + 190} radius={10} inPlay={this.props.inPlay} clickLocation=\"ct\" clickIndex={1} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().centerTorso > 2 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 0} yLoc={this.isBoxTop + 205} radius={10} inPlay={this.props.inPlay} clickLocation=\"ct\" clickIndex={2} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().centerTorso > 3 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 0} yLoc={this.isBoxTop + 220} radius={10} inPlay={this.props.inPlay} clickLocation=\"ct\" clickIndex={3} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().centerTorso > 4 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 0} yLoc={this.isBoxTop + 235} radius={10} inPlay={this.props.inPlay} clickLocation=\"ct\" clickIndex={4} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n\n\n        {this.props.mechData.getInternalStructure().centerTorso > 5 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 0} yLoc={this.isBoxTop + 255} radius={10} inPlay={this.props.inPlay} clickLocation=\"ct\" clickIndex={5} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().centerTorso > 6 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 0} yLoc={this.isBoxTop + 270} radius={10} inPlay={this.props.inPlay} clickLocation=\"ct\" clickIndex={6} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().centerTorso > 7 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 0} yLoc={this.isBoxTop + 285} radius={10} inPlay={this.props.inPlay} clickLocation=\"ct\" clickIndex={7} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().centerTorso > 8 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 0} yLoc={this.isBoxTop + 300} radius={10} inPlay={this.props.inPlay} clickLocation=\"ct\" clickIndex={8} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().centerTorso > 9 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 0} yLoc={this.isBoxTop + 315} radius={10} inPlay={this.props.inPlay} clickLocation=\"ct\" clickIndex={9} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n\n\n        {this.props.mechData.getInternalStructure().centerTorso > 10 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 20} yLoc={this.isBoxTop + 175} radius={10} inPlay={this.props.inPlay} clickLocation=\"ct\" clickIndex={10} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().centerTorso > 11 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 20} yLoc={this.isBoxTop + 190} radius={10} inPlay={this.props.inPlay} clickLocation=\"ct\" clickIndex={11} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().centerTorso > 12 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 20} yLoc={this.isBoxTop + 205} radius={10} inPlay={this.props.inPlay} clickLocation=\"ct\" clickIndex={12} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().centerTorso > 13 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 20} yLoc={this.isBoxTop + 220} radius={10} inPlay={this.props.inPlay} clickLocation=\"ct\" clickIndex={13} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().centerTorso > 14 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 20} yLoc={this.isBoxTop + 235} radius={10} inPlay={this.props.inPlay} clickLocation=\"ct\" clickIndex={14} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n\n\n        {this.props.mechData.getInternalStructure().centerTorso > 15 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 20} yLoc={this.isBoxTop + 175} radius={10} inPlay={this.props.inPlay} clickLocation=\"ct\" clickIndex={15} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().centerTorso > 16 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 20} yLoc={this.isBoxTop + 190} radius={10} inPlay={this.props.inPlay} clickLocation=\"ct\" clickIndex={16} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().centerTorso > 17 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 20} yLoc={this.isBoxTop + 205} radius={10} inPlay={this.props.inPlay} clickLocation=\"ct\" clickIndex={17} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().centerTorso > 18 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 20} yLoc={this.isBoxTop + 220} radius={10} inPlay={this.props.inPlay} clickLocation=\"ct\" clickIndex={18} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().centerTorso > 19 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 20} yLoc={this.isBoxTop + 235} radius={10} inPlay={this.props.inPlay} clickLocation=\"ct\" clickIndex={19} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n\n\n        {this.props.mechData.getInternalStructure().centerTorso > 20 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 20} yLoc={this.isBoxTop + 255} radius={10} inPlay={this.props.inPlay} clickLocation=\"ct\" clickIndex={20} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().centerTorso > 21 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 20} yLoc={this.isBoxTop + 270} radius={10} inPlay={this.props.inPlay} clickLocation=\"ct\" clickIndex={21} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().centerTorso > 22 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 20} yLoc={this.isBoxTop + 285} radius={10} inPlay={this.props.inPlay} clickLocation=\"ct\" clickIndex={22} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().centerTorso > 23 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 20} yLoc={this.isBoxTop + 300} radius={10} inPlay={this.props.inPlay} clickLocation=\"ct\" clickIndex={23} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().centerTorso > 24 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 20} yLoc={this.isBoxTop + 315} radius={10} inPlay={this.props.inPlay} clickLocation=\"ct\" clickIndex={24} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n\n        {this.props.mechData.getInternalStructure().centerTorso > 25 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 20} yLoc={this.isBoxTop + 255} radius={10} inPlay={this.props.inPlay} clickLocation=\"ct\" clickIndex={25} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().centerTorso > 26 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 20} yLoc={this.isBoxTop + 270} radius={10} inPlay={this.props.inPlay} clickLocation=\"ct\" clickIndex={26} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().centerTorso > 27 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 20} yLoc={this.isBoxTop + 285} radius={10} inPlay={this.props.inPlay} clickLocation=\"ct\" clickIndex={27} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().centerTorso > 28 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 20} yLoc={this.isBoxTop + 300} radius={10} inPlay={this.props.inPlay} clickLocation=\"ct\" clickIndex={28} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().centerTorso > 29 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 20} yLoc={this.isBoxTop + 315} radius={10} inPlay={this.props.inPlay} clickLocation=\"ct\" clickIndex={29} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n\n        {this.props.mechData.getInternalStructure().centerTorso > 31 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 20} yLoc={this.isBoxTop + 335} radius={10} inPlay={this.props.inPlay} clickLocation=\"ct\" clickIndex={31} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().centerTorso > 30 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 0} yLoc={this.isBoxTop + 335} radius={10} inPlay={this.props.inPlay} clickLocation=\"ct\" clickIndex={30} clickFunction={this.toggleISBubble}/></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().centerTorso > 32 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 20} yLoc={this.isBoxTop + 335} radius={10} inPlay={this.props.inPlay} clickLocation=\"ct\" clickIndex={32} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n\n\n        {/* Left Torso IS */}\n        {this.props.mechData.getInternalStructure().leftTorso > 0 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 50} yLoc={this.isBoxTop + 145} radius={10} inPlay={this.props.inPlay} clickLocation=\"lt\" clickIndex={0} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().leftTorso > 1 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 50} yLoc={this.isBoxTop + 160} radius={10} inPlay={this.props.inPlay} clickLocation=\"lt\" clickIndex={1} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().leftTorso > 2 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 50} yLoc={this.isBoxTop + 175} radius={10} inPlay={this.props.inPlay} clickLocation=\"lt\" clickIndex={2} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().leftTorso > 3 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 50} yLoc={this.isBoxTop + 190} radius={10} inPlay={this.props.inPlay} clickLocation=\"lt\" clickIndex={3} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().leftTorso > 4 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 50} yLoc={this.isBoxTop + 205} radius={10} inPlay={this.props.inPlay} clickLocation=\"lt\" clickIndex={4} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n\n        {this.props.mechData.getInternalStructure().leftTorso > 5 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 70} yLoc={this.isBoxTop + 145} radius={10} inPlay={this.props.inPlay} clickLocation=\"lt\" clickIndex={5} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().leftTorso > 6 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 70} yLoc={this.isBoxTop + 160} radius={10} inPlay={this.props.inPlay} clickLocation=\"lt\" clickIndex={6} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().leftTorso > 7 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 70} yLoc={this.isBoxTop + 175} radius={10} inPlay={this.props.inPlay} clickLocation=\"lt\" clickIndex={7} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().leftTorso > 8 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 70} yLoc={this.isBoxTop + 190} radius={10} inPlay={this.props.inPlay} clickLocation=\"lt\" clickIndex={8} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().leftTorso > 9 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 70} yLoc={this.isBoxTop + 205} radius={10} inPlay={this.props.inPlay} clickLocation=\"lt\" clickIndex={9} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n\n        {this.props.mechData.getInternalStructure().leftTorso > 10 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 90} yLoc={this.isBoxTop + 145} radius={10} inPlay={this.props.inPlay} clickLocation=\"lt\" clickIndex={10} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().leftTorso > 11 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 90} yLoc={this.isBoxTop + 160} radius={10} inPlay={this.props.inPlay} clickLocation=\"lt\" clickIndex={11} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().leftTorso > 12 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 90} yLoc={this.isBoxTop + 175} radius={10} inPlay={this.props.inPlay} clickLocation=\"lt\" clickIndex={12} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().leftTorso > 13 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 90} yLoc={this.isBoxTop + 190} radius={10} inPlay={this.props.inPlay} clickLocation=\"lt\" clickIndex={13} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().leftTorso > 14 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 90} yLoc={this.isBoxTop + 205} radius={10} inPlay={this.props.inPlay} clickLocation=\"lt\" clickIndex={14} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n\n        {this.props.mechData.getInternalStructure().leftTorso > 15 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 53} yLoc={this.isBoxTop + 230} radius={10} inPlay={this.props.inPlay} clickLocation=\"lt\" clickIndex={15} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().leftTorso > 16 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 52} yLoc={this.isBoxTop + 245} radius={10} inPlay={this.props.inPlay} clickLocation=\"lt\" clickIndex={16} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().leftTorso > 17 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 50} yLoc={this.isBoxTop + 260} radius={10} inPlay={this.props.inPlay} clickLocation=\"lt\" clickIndex={17} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().leftTorso > 18 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 49} yLoc={this.isBoxTop + 275} radius={10} inPlay={this.props.inPlay} clickLocation=\"lt\" clickIndex={18} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().leftTorso > 19 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 48} yLoc={this.isBoxTop + 290} radius={10} inPlay={this.props.inPlay} clickLocation=\"lt\" clickIndex={19} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n\n        {this.props.mechData.getInternalStructure().leftTorso > 20 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 50} yLoc={this.isBoxTop + 310} radius={10} inPlay={this.props.inPlay} clickLocation=\"lt\" clickIndex={20} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().leftTorso > 21 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 70} yLoc={this.isBoxTop + 310} radius={10} inPlay={this.props.inPlay} clickLocation=\"lt\" clickIndex={21} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().leftTorso > 22 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 50} yLoc={this.isBoxTop + 325} radius={10} inPlay={this.props.inPlay} clickLocation=\"lt\" clickIndex={22} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().leftTorso > 23 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 70} yLoc={this.isBoxTop + 325} radius={10} inPlay={this.props.inPlay} clickLocation=\"lt\" clickIndex={23} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().leftTorso > 24 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 90} yLoc={this.isBoxTop + 325} radius={10} inPlay={this.props.inPlay} clickLocation=\"lt\" clickIndex={24} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n\n\n        {/* Right Torso IS */}\n        {this.props.mechData.getInternalStructure().rightTorso > 0 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 50} yLoc={this.isBoxTop + 145} radius={10} inPlay={this.props.inPlay} clickLocation=\"rt\" clickIndex={0} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().rightTorso > 1 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 50} yLoc={this.isBoxTop + 160} radius={10} inPlay={this.props.inPlay} clickLocation=\"rt\" clickIndex={1} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().rightTorso > 2 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 50} yLoc={this.isBoxTop + 175} radius={10} inPlay={this.props.inPlay} clickLocation=\"rt\" clickIndex={2} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().rightTorso > 3 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 50} yLoc={this.isBoxTop + 190} radius={10} inPlay={this.props.inPlay} clickLocation=\"rt\" clickIndex={3} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().rightTorso > 4 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 50} yLoc={this.isBoxTop + 205} radius={10} inPlay={this.props.inPlay} clickLocation=\"rt\" clickIndex={4} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n\n        {this.props.mechData.getInternalStructure().rightTorso > 5 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 70} yLoc={this.isBoxTop + 145} radius={10} inPlay={this.props.inPlay} clickLocation=\"rt\" clickIndex={5} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().rightTorso > 6 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 70} yLoc={this.isBoxTop + 160} radius={10} inPlay={this.props.inPlay} clickLocation=\"rt\" clickIndex={6} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().rightTorso > 7 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 70} yLoc={this.isBoxTop + 175} radius={10} inPlay={this.props.inPlay} clickLocation=\"rt\" clickIndex={7} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().rightTorso > 8 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 70} yLoc={this.isBoxTop + 190} radius={10} inPlay={this.props.inPlay} clickLocation=\"rt\" clickIndex={8} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().rightTorso > 9 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 70} yLoc={this.isBoxTop + 205} radius={10} inPlay={this.props.inPlay} clickLocation=\"rt\" clickIndex={9} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n\n        {this.props.mechData.getInternalStructure().rightTorso > 10 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 90} yLoc={this.isBoxTop + 145} radius={10} inPlay={this.props.inPlay} clickLocation=\"rt\" clickIndex={10} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().rightTorso > 11 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 90} yLoc={this.isBoxTop + 160} radius={10} inPlay={this.props.inPlay} clickLocation=\"rt\" clickIndex={11} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().rightTorso > 12 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 90} yLoc={this.isBoxTop + 175} radius={10} inPlay={this.props.inPlay} clickLocation=\"rt\" clickIndex={12} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().rightTorso > 13 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 90} yLoc={this.isBoxTop + 190} radius={10} inPlay={this.props.inPlay} clickLocation=\"rt\" clickIndex={13} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().rightTorso > 14 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 90} yLoc={this.isBoxTop + 205} radius={10} inPlay={this.props.inPlay} clickLocation=\"rt\" clickIndex={14} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n\n        {this.props.mechData.getInternalStructure().rightTorso > 15 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 53} yLoc={this.isBoxTop + 230} radius={10} inPlay={this.props.inPlay} clickLocation=\"rt\" clickIndex={15} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().rightTorso > 16 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 52} yLoc={this.isBoxTop + 245} radius={10} inPlay={this.props.inPlay} clickLocation=\"rt\" clickIndex={16} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().rightTorso > 17 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 50} yLoc={this.isBoxTop + 260} radius={10} inPlay={this.props.inPlay} clickLocation=\"rt\" clickIndex={17} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().rightTorso > 18 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 49} yLoc={this.isBoxTop + 275} radius={10} inPlay={this.props.inPlay} clickLocation=\"rt\" clickIndex={18} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().rightTorso > 19 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 48} yLoc={this.isBoxTop + 290} radius={10} inPlay={this.props.inPlay} clickLocation=\"rt\" clickIndex={19} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n\n        {this.props.mechData.getInternalStructure().rightTorso > 20 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 50} yLoc={this.isBoxTop + 310} radius={10} inPlay={this.props.inPlay} clickLocation=\"rt\" clickIndex={20} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().rightTorso > 21 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 70} yLoc={this.isBoxTop + 310} radius={10} inPlay={this.props.inPlay} clickLocation=\"rt\" clickIndex={21} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().rightTorso > 22 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 50} yLoc={this.isBoxTop + 325} radius={10} inPlay={this.props.inPlay} clickLocation=\"rt\" clickIndex={22} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().rightTorso > 23 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 70} yLoc={this.isBoxTop + 325} radius={10} inPlay={this.props.inPlay} clickLocation=\"rt\" clickIndex={23} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().rightTorso > 24 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 90} yLoc={this.isBoxTop + 325} radius={10} inPlay={this.props.inPlay} clickLocation=\"rt\" clickIndex={24} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n\n\n\n\n        {/* Left Leg IS */}\n        {this.props.mechData.getInternalStructure().leftLeg > 0 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 53} yLoc={this.isBoxTop + 340} radius={10} inPlay={this.props.inPlay} clickLocation=\"ll\" clickIndex={0} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().leftLeg > 1 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 55} yLoc={this.isBoxTop + 355} radius={10} inPlay={this.props.inPlay} clickLocation=\"ll\" clickIndex={1} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().leftLeg > 2 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 57} yLoc={this.isBoxTop + 370} radius={10} inPlay={this.props.inPlay} clickLocation=\"ll\" clickIndex={2} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().leftLeg > 3 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 59} yLoc={this.isBoxTop + 385} radius={10} inPlay={this.props.inPlay} clickLocation=\"ll\" clickIndex={3} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().leftLeg > 4 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 60} yLoc={this.isBoxTop + 400} radius={10} inPlay={this.props.inPlay} clickLocation=\"ll\" clickIndex={4} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n\n        {this.props.mechData.getInternalStructure().leftLeg > 5 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 68} yLoc={this.isBoxTop + 420} radius={10} inPlay={this.props.inPlay} clickLocation=\"ll\" clickIndex={5} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().leftLeg > 6 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 70} yLoc={this.isBoxTop + 435} radius={10} inPlay={this.props.inPlay} clickLocation=\"ll\" clickIndex={6} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().leftLeg > 7 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 72} yLoc={this.isBoxTop + 450} radius={10} inPlay={this.props.inPlay} clickLocation=\"ll\" clickIndex={7} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().leftLeg > 8 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 74} yLoc={this.isBoxTop + 465} radius={10} inPlay={this.props.inPlay} clickLocation=\"ll\" clickIndex={8} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().leftLeg > 9 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 76} yLoc={this.isBoxTop + 480} radius={10} inPlay={this.props.inPlay} clickLocation=\"ll\" clickIndex={9} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n\n\n        {this.props.mechData.getInternalStructure().leftLeg > 10 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 73} yLoc={this.isBoxTop + 340} radius={10} inPlay={this.props.inPlay} clickLocation=\"ll\" clickIndex={10} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().leftLeg > 11 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 75} yLoc={this.isBoxTop + 355} radius={10} inPlay={this.props.inPlay} clickLocation=\"ll\" clickIndex={11} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().leftLeg > 12 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 77} yLoc={this.isBoxTop + 370} radius={10} inPlay={this.props.inPlay} clickLocation=\"ll\" clickIndex={12} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().leftLeg > 13 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 79} yLoc={this.isBoxTop + 385} radius={10} inPlay={this.props.inPlay} clickLocation=\"ll\" clickIndex={13} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().leftLeg > 14 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 80} yLoc={this.isBoxTop + 400} radius={10} inPlay={this.props.inPlay} clickLocation=\"ll\" clickIndex={14} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n\n        {this.props.mechData.getInternalStructure().leftLeg > 15 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 88} yLoc={this.isBoxTop + 420} radius={10} inPlay={this.props.inPlay} clickLocation=\"ll\" clickIndex={15} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().leftLeg > 16 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 90} yLoc={this.isBoxTop + 435} radius={10} inPlay={this.props.inPlay} clickLocation=\"ll\" clickIndex={16} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().leftLeg > 17 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 92} yLoc={this.isBoxTop + 450} radius={10} inPlay={this.props.inPlay} clickLocation=\"ll\" clickIndex={17} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().leftLeg > 18 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 94} yLoc={this.isBoxTop + 465} radius={10} inPlay={this.props.inPlay} clickLocation=\"ll\" clickIndex={18} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().leftLeg > 19 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 96} yLoc={this.isBoxTop + 480} radius={10} inPlay={this.props.inPlay} clickLocation=\"ll\" clickIndex={19} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n\n        {this.props.mechData.getInternalStructure().leftLeg > 20 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 80} yLoc={this.isBoxTop + 500} radius={10} inPlay={this.props.inPlay} clickLocation=\"ll\" clickIndex={20} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().leftLeg > 21 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 82} yLoc={this.isBoxTop + 515} radius={10} inPlay={this.props.inPlay} clickLocation=\"ll\" clickIndex={21} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().leftLeg > 22 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 84} yLoc={this.isBoxTop + 530} radius={10} inPlay={this.props.inPlay} clickLocation=\"ll\" clickIndex={22} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().leftLeg > 23 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 86} yLoc={this.isBoxTop + 545} radius={10} inPlay={this.props.inPlay} clickLocation=\"ll\" clickIndex={23} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().leftLeg > 24 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 88} yLoc={this.isBoxTop + 560} radius={10} inPlay={this.props.inPlay} clickLocation=\"ll\" clickIndex={24} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n\n        {this.props.mechData.getInternalStructure().leftLeg > 25 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 100} yLoc={this.isBoxTop + 500} radius={10} inPlay={this.props.inPlay} clickLocation=\"ll\" clickIndex={25} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().leftLeg > 26 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 102} yLoc={this.isBoxTop + 515} radius={10} inPlay={this.props.inPlay} clickLocation=\"ll\" clickIndex={26} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().leftLeg > 27 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 104} yLoc={this.isBoxTop + 530} radius={10} inPlay={this.props.inPlay} clickLocation=\"ll\" clickIndex={27} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().leftLeg > 28 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 106} yLoc={this.isBoxTop + 545} radius={10} inPlay={this.props.inPlay} clickLocation=\"ll\" clickIndex={28} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().leftLeg > 29 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 108} yLoc={this.isBoxTop + 560} radius={10} inPlay={this.props.inPlay} clickLocation=\"ll\" clickIndex={29} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n\n\n\n        {/* Right Leg IS */}\n        {this.props.mechData.getInternalStructure().rightLeg > 0 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 53} yLoc={this.isBoxTop + 340} radius={10} inPlay={this.props.inPlay} clickLocation=\"rl\" clickIndex={0} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().rightLeg > 1 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 55} yLoc={this.isBoxTop + 355} radius={10} inPlay={this.props.inPlay} clickLocation=\"rl\" clickIndex={1} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().rightLeg > 2 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 57} yLoc={this.isBoxTop + 370} radius={10} inPlay={this.props.inPlay} clickLocation=\"rl\" clickIndex={2} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().rightLeg > 3 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 59} yLoc={this.isBoxTop + 385} radius={10} inPlay={this.props.inPlay} clickLocation=\"rl\" clickIndex={3} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().rightLeg > 4 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 60} yLoc={this.isBoxTop + 400} radius={10} inPlay={this.props.inPlay} clickLocation=\"rl\" clickIndex={4} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n\n        {this.props.mechData.getInternalStructure().rightLeg > 5 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 68} yLoc={this.isBoxTop + 420} radius={10} inPlay={this.props.inPlay} clickLocation=\"rl\" clickIndex={5} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().rightLeg > 6 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 70} yLoc={this.isBoxTop + 435} radius={10} inPlay={this.props.inPlay} clickLocation=\"rl\" clickIndex={6} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().rightLeg > 7 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 72} yLoc={this.isBoxTop + 450} radius={10} inPlay={this.props.inPlay} clickLocation=\"rl\" clickIndex={7} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().rightLeg > 8 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 74} yLoc={this.isBoxTop + 465} radius={10} inPlay={this.props.inPlay} clickLocation=\"rl\" clickIndex={8} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().rightLeg > 9 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 76} yLoc={this.isBoxTop + 480} radius={10} inPlay={this.props.inPlay} clickLocation=\"rl\" clickIndex={9} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n\n        {this.props.mechData.getInternalStructure().rightLeg > 10 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 73} yLoc={this.isBoxTop + 340} radius={10} inPlay={this.props.inPlay} clickLocation=\"rl\" clickIndex={10} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().rightLeg > 11 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 75} yLoc={this.isBoxTop + 355} radius={10} inPlay={this.props.inPlay} clickLocation=\"rl\" clickIndex={11} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().rightLeg > 12 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 77} yLoc={this.isBoxTop + 370} radius={10} inPlay={this.props.inPlay} clickLocation=\"rl\" clickIndex={12} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().rightLeg > 13 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 79} yLoc={this.isBoxTop + 385} radius={10} inPlay={this.props.inPlay} clickLocation=\"rl\" clickIndex={13} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().rightLeg > 14 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 80} yLoc={this.isBoxTop + 400} radius={10} inPlay={this.props.inPlay} clickLocation=\"rl\" clickIndex={14} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n\n        {this.props.mechData.getInternalStructure().rightLeg > 15 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 88} yLoc={this.isBoxTop + 420} radius={10} inPlay={this.props.inPlay} clickLocation=\"rl\" clickIndex={15} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().rightLeg > 16 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 90} yLoc={this.isBoxTop + 435} radius={10} inPlay={this.props.inPlay} clickLocation=\"rl\" clickIndex={16} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().rightLeg > 17 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 92} yLoc={this.isBoxTop + 450} radius={10} inPlay={this.props.inPlay} clickLocation=\"rl\" clickIndex={17} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().rightLeg > 18 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 94} yLoc={this.isBoxTop + 465} radius={10} inPlay={this.props.inPlay} clickLocation=\"rl\" clickIndex={18} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().rightLeg > 19 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 96} yLoc={this.isBoxTop + 480} radius={10} inPlay={this.props.inPlay} clickLocation=\"rl\" clickIndex={19} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n\n        {this.props.mechData.getInternalStructure().rightLeg > 20 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 80} yLoc={this.isBoxTop + 500} radius={10} inPlay={this.props.inPlay} clickLocation=\"rl\" clickIndex={20} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().rightLeg > 21 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 82} yLoc={this.isBoxTop + 515} radius={10} inPlay={this.props.inPlay} clickLocation=\"rl\" clickIndex={21} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().rightLeg > 22 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 84} yLoc={this.isBoxTop + 530} radius={10} inPlay={this.props.inPlay} clickLocation=\"rl\" clickIndex={22} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().rightLeg > 23 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 86} yLoc={this.isBoxTop + 545} radius={10} inPlay={this.props.inPlay} clickLocation=\"rl\" clickIndex={23} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().rightLeg > 24 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 88} yLoc={this.isBoxTop + 560} radius={10} inPlay={this.props.inPlay} clickLocation=\"rl\" clickIndex={24} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n\n        {this.props.mechData.getInternalStructure().rightLeg > 25 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 100} yLoc={this.isBoxTop + 500} radius={10} inPlay={this.props.inPlay} clickLocation=\"rl\" clickIndex={25} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().rightLeg > 26 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 102} yLoc={this.isBoxTop + 515} radius={10} inPlay={this.props.inPlay} clickLocation=\"rl\" clickIndex={26} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().rightLeg > 27 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 104} yLoc={this.isBoxTop + 530} radius={10} inPlay={this.props.inPlay} clickLocation=\"rl\" clickIndex={27} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().rightLeg > 28 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 106} yLoc={this.isBoxTop + 545} radius={10} inPlay={this.props.inPlay} clickLocation=\"rl\" clickIndex={28} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().rightLeg > 29 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 108} yLoc={this.isBoxTop + 560} radius={10} inPlay={this.props.inPlay} clickLocation=\"rl\" clickIndex={29} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n\n\n        </>\n    ) : (\n        <>\n            <QuadInternalStructureDiagramSVG\n                xLoc={1386}\n                yLoc={1295}\n                width={380}\n            />\n\n            <text x={ this.isBoxLeft + this.isQuadCenterAdjust + this.isBoxWidth / 2 } y={this.isBoxTop + 60} textAnchor=\"middle\" fontFamily=\"sans-serif\" fill={this.strokeColor} style={{fontWeight: 700}} fontSize={15}>HEAD [{ this.props.mechData.getInternalStructure().head }]</text>\n\n            <text x={ this.isBoxLeft + this.isQuadCenterAdjust + this.isBoxWidth / 2 - 65 - 115} y={this.isBoxTop + 105} textAnchor=\"end\" fontFamily=\"sans-serif\" fill={this.strokeColor} style={{fontWeight: 700}} fontSize={15}>LEFT TORSO</text>\n            <text x={ this.isBoxLeft + this.isQuadCenterAdjust + this.isBoxWidth / 2 - 95 - 115 } y={this.isBoxTop + 125} textAnchor=\"end\" fontFamily=\"sans-serif\" fill={this.strokeColor} style={{fontWeight: 700}} fontSize={15}>[{ this.props.mechData.getInternalStructure().leftTorso }]</text>\n\n            <text x={ this.isBoxLeft + this.isQuadCenterAdjust + this.isBoxWidth / 2 + 65 + 115 } y={this.isBoxTop + 105} textAnchor=\"start\" fontFamily=\"sans-serif\" fill={this.strokeColor} style={{fontWeight: 700}} fontSize={15}>RIGHT TORSO</text>\n            <text x={ this.isBoxLeft + this.isQuadCenterAdjust + this.isBoxWidth / 2 + 95 + 115 } y={this.isBoxTop + 125} textAnchor=\"start\" fontFamily=\"sans-serif\" fill={this.strokeColor} style={{fontWeight: 700}} fontSize={15}>[{ this.props.mechData.getInternalStructure().rightTorso }]</text>\n\n            <text x={ this.isBoxLeft + this.isQuadCenterAdjust +  this.isBoxWidth / 2 - 280 } y={this.isBoxTop + 540} textAnchor=\"start\" fontFamily=\"sans-serif\" fill={this.strokeColor} style={{fontWeight: 700}} fontSize={15}>FRONT</text>\n            <text x={ this.isBoxLeft + this.isQuadCenterAdjust +  this.isBoxWidth / 2 - 280 } y={this.isBoxTop + 560} textAnchor=\"start\" fontFamily=\"sans-serif\" fill={this.strokeColor} style={{fontWeight: 700}} fontSize={15}>LEFT</text>\n            <text x={ this.isBoxLeft + this.isQuadCenterAdjust +  this.isBoxWidth / 2 - 280 } y={this.isBoxTop + 580} textAnchor=\"start\" fontFamily=\"sans-serif\" fill={this.strokeColor} style={{fontWeight: 700}} fontSize={15}>LEG [{ this.props.mechData.getInternalStructure().leftArm }]</text>\n\n            <text x={ this.isBoxLeft + this.isQuadCenterAdjust + this.isBoxWidth / 2 + 280 } y={this.isBoxTop + 540} textAnchor=\"end\" fontFamily=\"sans-serif\" fill={this.strokeColor} style={{fontWeight: 700}} fontSize={15}>FRONT</text>\n            <text x={ this.isBoxLeft + this.isQuadCenterAdjust + this.isBoxWidth / 2 + 280 } y={this.isBoxTop + 560} textAnchor=\"end\" fontFamily=\"sans-serif\" fill={this.strokeColor} style={{fontWeight: 700}} fontSize={15}>RIGHT</text>\n            <text x={ this.isBoxLeft + this.isQuadCenterAdjust + this.isBoxWidth / 2 + 280 } y={this.isBoxTop + 580} textAnchor=\"end\" fontFamily=\"sans-serif\" fill={this.strokeColor} style={{fontWeight: 700}} fontSize={15}>LEG [{ this.props.mechData.getInternalStructure().rightArm }]</text>\n\n            <text x={ this.isBoxLeft + this.isQuadCenterAdjust +  this.isBoxWidth / 2 - 80 } y={this.isBoxTop + 570} textAnchor=\"start\" fontFamily=\"sans-serif\" fill={this.strokeColor} style={{fontWeight: 700}} fontSize={15}>REAR</text>\n            <text x={ this.isBoxLeft + this.isQuadCenterAdjust +  this.isBoxWidth / 2 - 80 } y={this.isBoxTop + 590} textAnchor=\"start\" fontFamily=\"sans-serif\" fill={this.strokeColor} style={{fontWeight: 700}} fontSize={15}>LEFT</text>\n            <text x={ this.isBoxLeft + this.isQuadCenterAdjust +  this.isBoxWidth / 2 - 80 } y={this.isBoxTop + 610} textAnchor=\"start\" fontFamily=\"sans-serif\" fill={this.strokeColor} style={{fontWeight: 700}} fontSize={15}>LEG [{ this.props.mechData.getInternalStructure().leftLeg }]</text>\n\n            <text x={ this.isBoxLeft + this.isQuadCenterAdjust + this.isBoxWidth / 2 + 80 } y={this.isBoxTop + 570} textAnchor=\"end\" fontFamily=\"sans-serif\" fill={this.strokeColor} style={{fontWeight: 700}} fontSize={15}>REAR</text>\n            <text x={ this.isBoxLeft + this.isQuadCenterAdjust + this.isBoxWidth / 2 + 80 } y={this.isBoxTop + 590} textAnchor=\"end\" fontFamily=\"sans-serif\" fill={this.strokeColor} style={{fontWeight: 700}} fontSize={15}>RIGHT</text>\n            <text x={ this.isBoxLeft + this.isQuadCenterAdjust + this.isBoxWidth / 2 + 80 } y={this.isBoxTop + 610} textAnchor=\"end\" fontFamily=\"sans-serif\" fill={this.strokeColor} style={{fontWeight: 700}} fontSize={15}>LEG [{ this.props.mechData.getInternalStructure().rightLeg }]</text>\n\n            <text x={ this.isBoxLeft + this.isQuadCenterAdjust + this.isBoxWidth / 2  } y={this.isBoxTop + 360} textAnchor=\"middle\" fontFamily=\"sans-serif\" fill={this.strokeColor} style={{fontWeight: 700}} fontSize={13}>CENTER</text>\n            <text x={ this.isBoxLeft + this.isQuadCenterAdjust + this.isBoxWidth / 2  } y={this.isBoxTop + 380} textAnchor=\"middle\" fontFamily=\"sans-serif\" fill={this.strokeColor} style={{fontWeight: 700}} fontSize={13}>TORSO</text>\n            <text x={ this.isBoxLeft + this.isQuadCenterAdjust + this.isBoxWidth / 2  } y={this.isBoxTop + 400} textAnchor=\"middle\" fontFamily=\"sans-serif\" fill={this.strokeColor} style={{fontWeight: 700}} fontSize={13}>[{ this.props.mechData.getInternalStructure().centerTorso })</text>\n\n\n            {/* Head IS */}\n            {this.props.mechData.getInternalStructure().head > 0 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 15 } yLoc={this.isBoxTop + 105} radius={10} inPlay={this.props.inPlay} clickLocation=\"hd\" clickIndex={0} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n            {this.props.mechData.getInternalStructure().head > 1 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 15 } yLoc={this.isBoxTop + 105} radius={10} inPlay={this.props.inPlay} clickLocation=\"hd\" clickIndex={1} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n            {this.props.mechData.getInternalStructure().head > 2 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2} yLoc={this.isBoxTop + 125} radius={10} inPlay={this.props.inPlay} clickLocation=\"hd\" clickIndex={2} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n\n\n\n\n        {/* Center Torso IS */}\n\n\n        {this.props.mechData.getInternalStructure().centerTorso > 0 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 40} yLoc={this.isBoxTop + 170} radius={10} inPlay={this.props.inPlay} clickLocation=\"ct\" clickIndex={0} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().centerTorso > 1 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 20} yLoc={this.isBoxTop + 170} radius={10} inPlay={this.props.inPlay} clickLocation=\"ct\" clickIndex={1} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().centerTorso > 2 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 0} yLoc={this.isBoxTop + 170} radius={10} inPlay={this.props.inPlay}  clickLocation=\"ct\" clickIndex={2} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().centerTorso > 3 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 20} yLoc={this.isBoxTop + 170} radius={10} inPlay={this.props.inPlay} clickLocation=\"ct\" clickIndex={3} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().centerTorso > 4 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 40} yLoc={this.isBoxTop + 170} radius={10} inPlay={this.props.inPlay} clickLocation=\"ct\" clickIndex={4} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n\n        {this.props.mechData.getInternalStructure().centerTorso > 5 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 40} yLoc={this.isBoxTop + 185} radius={10} inPlay={this.props.inPlay} clickLocation=\"ct\" clickIndex={5} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().centerTorso > 6 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 20} yLoc={this.isBoxTop + 185} radius={10} inPlay={this.props.inPlay} clickLocation=\"ct\" clickIndex={6} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().centerTorso > 7 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 0} yLoc={this.isBoxTop + 185} radius={10} inPlay={this.props.inPlay}  clickLocation=\"ct\" clickIndex={7} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().centerTorso > 8 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 20} yLoc={this.isBoxTop + 185} radius={10} inPlay={this.props.inPlay} clickLocation=\"ct\" clickIndex={8} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().centerTorso > 9 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 40} yLoc={this.isBoxTop + 185} radius={10} inPlay={this.props.inPlay} clickLocation=\"ct\" clickIndex={9} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n\n\n        {this.props.mechData.getInternalStructure().centerTorso > 10 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 40} yLoc={this.isBoxTop + 200} radius={10} inPlay={this.props.inPlay} clickLocation=\"ct\" clickIndex={10} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().centerTorso > 11 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 20} yLoc={this.isBoxTop + 200} radius={10} inPlay={this.props.inPlay} clickLocation=\"ct\" clickIndex={11} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().centerTorso > 12 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 0} yLoc={this.isBoxTop + 200} radius={10} inPlay={this.props.inPlay}  clickLocation=\"ct\" clickIndex={12} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().centerTorso > 13 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 20} yLoc={this.isBoxTop + 200} radius={10} inPlay={this.props.inPlay} clickLocation=\"ct\" clickIndex={13} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().centerTorso > 14 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 40} yLoc={this.isBoxTop + 200} radius={10} inPlay={this.props.inPlay} clickLocation=\"ct\" clickIndex={14} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n\n        {this.props.mechData.getInternalStructure().centerTorso > 15 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 40} yLoc={this.isBoxTop + 215} radius={10} inPlay={this.props.inPlay} clickLocation=\"ct\" clickIndex={15} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().centerTorso > 16 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 20} yLoc={this.isBoxTop + 215} radius={10} inPlay={this.props.inPlay} clickLocation=\"ct\" clickIndex={16} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().centerTorso > 17 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 0} yLoc={this.isBoxTop + 215} radius={10} inPlay={this.props.inPlay}  clickLocation=\"ct\" clickIndex={17} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().centerTorso > 18 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 20} yLoc={this.isBoxTop + 215} radius={10} inPlay={this.props.inPlay} clickLocation=\"ct\" clickIndex={18} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().centerTorso > 19 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 40} yLoc={this.isBoxTop + 215} radius={10} inPlay={this.props.inPlay} clickLocation=\"ct\" clickIndex={19} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n\n        {this.props.mechData.getInternalStructure().centerTorso > 20 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 40} yLoc={this.isBoxTop + 230} radius={10} inPlay={this.props.inPlay} clickLocation=\"ct\" clickIndex={20} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().centerTorso > 21 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 20} yLoc={this.isBoxTop + 230} radius={10} inPlay={this.props.inPlay} clickLocation=\"ct\" clickIndex={21} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().centerTorso > 22 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 0} yLoc={this.isBoxTop + 230} radius={10} inPlay={this.props.inPlay}  clickLocation=\"ct\" clickIndex={22} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().centerTorso > 23 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 20} yLoc={this.isBoxTop + 230} radius={10} inPlay={this.props.inPlay} clickLocation=\"ct\" clickIndex={23} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().centerTorso > 24 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 40} yLoc={this.isBoxTop + 230} radius={10} inPlay={this.props.inPlay} clickLocation=\"ct\" clickIndex={24} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n\n\n        {this.props.mechData.getInternalStructure().centerTorso > 25 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 27} yLoc={this.isBoxTop + 250} radius={10} inPlay={this.props.inPlay} clickLocation=\"ct\" clickIndex={25} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().centerTorso > 26 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 9} yLoc={this.isBoxTop + 250} radius={10} inPlay={this.props.inPlay}  clickLocation=\"ct\" clickIndex={26} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().centerTorso > 27 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 9} yLoc={this.isBoxTop + 250} radius={10} inPlay={this.props.inPlay}  clickLocation=\"ct\" clickIndex={27} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().centerTorso > 28 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 27} yLoc={this.isBoxTop + 250} radius={10} inPlay={this.props.inPlay} clickLocation=\"ct\" clickIndex={28} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n\n        {this.props.mechData.getInternalStructure().centerTorso > 29 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 27} yLoc={this.isBoxTop + 265} radius={10} inPlay={this.props.inPlay} clickLocation=\"ct\" clickIndex={29} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().centerTorso > 30 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 9} yLoc={this.isBoxTop + 265} radius={10} inPlay={this.props.inPlay}  clickLocation=\"ct\" clickIndex={30} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().centerTorso > 31 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 9} yLoc={this.isBoxTop + 265} radius={10} inPlay={this.props.inPlay}  clickLocation=\"ct\" clickIndex={31} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().centerTorso > 32 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 27} yLoc={this.isBoxTop + 265} radius={10} inPlay={this.props.inPlay} clickLocation=\"ct\" clickIndex={32} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n\n        {this.props.mechData.getInternalStructure().centerTorso > 33 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 27} yLoc={this.isBoxTop + 280} radius={10} inPlay={this.props.inPlay} clickLocation=\"ct\" clickIndex={33} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().centerTorso > 34 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 9} yLoc={this.isBoxTop + 280} radius={10} inPlay={this.props.inPlay}  clickLocation=\"ct\" clickIndex={34} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().centerTorso > 35 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 9} yLoc={this.isBoxTop + 280} radius={10} inPlay={this.props.inPlay}  clickLocation=\"ct\" clickIndex={35} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().centerTorso > 36 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 27} yLoc={this.isBoxTop + 280} radius={10} inPlay={this.props.inPlay} clickLocation=\"ct\" clickIndex={36} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n\n\n            {/* Right Rear Leg IS */}\n            {this.props.mechData.getInternalStructure().rightLeg > 0 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 55} yLoc={this.isBoxTop + 340} radius={10} inPlay={this.props.inPlay} clickLocation=\"rl\" clickIndex={0} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n            {this.props.mechData.getInternalStructure().rightLeg > 1 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 55} yLoc={this.isBoxTop + 355} radius={10} inPlay={this.props.inPlay} clickLocation=\"rl\" clickIndex={1} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n            {this.props.mechData.getInternalStructure().rightLeg > 2 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 55} yLoc={this.isBoxTop + 370} radius={10} inPlay={this.props.inPlay} clickLocation=\"rl\" clickIndex={2} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n            {this.props.mechData.getInternalStructure().rightLeg > 3 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 55} yLoc={this.isBoxTop + 385} radius={10} inPlay={this.props.inPlay} clickLocation=\"rl\" clickIndex={3} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n            {this.props.mechData.getInternalStructure().rightLeg > 4 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 55} yLoc={this.isBoxTop + 400} radius={10} inPlay={this.props.inPlay} clickLocation=\"rl\" clickIndex={4} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n\n            {this.props.mechData.getInternalStructure().rightLeg > 5 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 55} yLoc={this.isBoxTop + 420} radius={10} inPlay={this.props.inPlay} clickLocation=\"rl\" clickIndex={5} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n            {this.props.mechData.getInternalStructure().rightLeg > 6 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 55} yLoc={this.isBoxTop + 435} radius={10} inPlay={this.props.inPlay} clickLocation=\"rl\" clickIndex={6} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n            {this.props.mechData.getInternalStructure().rightLeg > 7 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 55} yLoc={this.isBoxTop + 450} radius={10} inPlay={this.props.inPlay} clickLocation=\"rl\" clickIndex={7} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n            {this.props.mechData.getInternalStructure().rightLeg > 8 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 55} yLoc={this.isBoxTop + 465} radius={10} inPlay={this.props.inPlay} clickLocation=\"rl\" clickIndex={8} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n            {this.props.mechData.getInternalStructure().rightLeg > 9 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 55} yLoc={this.isBoxTop + 480} radius={10} inPlay={this.props.inPlay} clickLocation=\"rl\" clickIndex={9} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n\n            {this.props.mechData.getInternalStructure().rightLeg > 10 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 75} yLoc={this.isBoxTop + 340} radius={10} inPlay={this.props.inPlay} clickLocation=\"rl\" clickIndex={10} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n            {this.props.mechData.getInternalStructure().rightLeg > 11 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 75} yLoc={this.isBoxTop + 355} radius={10} inPlay={this.props.inPlay} clickLocation=\"rl\" clickIndex={11} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n            {this.props.mechData.getInternalStructure().rightLeg > 12 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 75} yLoc={this.isBoxTop + 370} radius={10} inPlay={this.props.inPlay} clickLocation=\"rl\" clickIndex={12} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n            {this.props.mechData.getInternalStructure().rightLeg > 13 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 75} yLoc={this.isBoxTop + 385} radius={10} inPlay={this.props.inPlay} clickLocation=\"rl\" clickIndex={13} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n            {this.props.mechData.getInternalStructure().rightLeg > 14 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 75} yLoc={this.isBoxTop + 400} radius={10} inPlay={this.props.inPlay} clickLocation=\"rl\" clickIndex={14} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n\n            {this.props.mechData.getInternalStructure().rightLeg > 15 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 75} yLoc={this.isBoxTop + 420} radius={10} inPlay={this.props.inPlay} clickLocation=\"rl\" clickIndex={15} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n            {this.props.mechData.getInternalStructure().rightLeg > 16 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 75} yLoc={this.isBoxTop + 435} radius={10} inPlay={this.props.inPlay} clickLocation=\"rl\" clickIndex={16} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n            {this.props.mechData.getInternalStructure().rightLeg > 17 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 75} yLoc={this.isBoxTop + 450} radius={10} inPlay={this.props.inPlay} clickLocation=\"rl\" clickIndex={17} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n            {this.props.mechData.getInternalStructure().rightLeg > 18 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 75} yLoc={this.isBoxTop + 465} radius={10} inPlay={this.props.inPlay} clickLocation=\"rl\" clickIndex={18} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n            {this.props.mechData.getInternalStructure().rightLeg > 19 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 75} yLoc={this.isBoxTop + 480} radius={10} inPlay={this.props.inPlay} clickLocation=\"rl\" clickIndex={19} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n\n            {this.props.mechData.getInternalStructure().rightLeg > 20 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 55} yLoc={this.isBoxTop + 500} radius={10} inPlay={this.props.inPlay} clickLocation=\"rl\" clickIndex={20} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n            {this.props.mechData.getInternalStructure().rightLeg > 21 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 55} yLoc={this.isBoxTop + 515} radius={10} inPlay={this.props.inPlay} clickLocation=\"rl\" clickIndex={21} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n            {this.props.mechData.getInternalStructure().rightLeg > 22 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 55} yLoc={this.isBoxTop + 530} radius={10} inPlay={this.props.inPlay} clickLocation=\"rl\" clickIndex={22} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n            {this.props.mechData.getInternalStructure().rightLeg > 23 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 55} yLoc={this.isBoxTop + 545} radius={10} inPlay={this.props.inPlay} clickLocation=\"rl\" clickIndex={23} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n            {this.props.mechData.getInternalStructure().rightLeg > 24 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 55} yLoc={this.isBoxTop + 560} radius={10} inPlay={this.props.inPlay} clickLocation=\"rl\" clickIndex={24} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n\n            {this.props.mechData.getInternalStructure().rightLeg > 25 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 75} yLoc={this.isBoxTop + 500} radius={10} inPlay={this.props.inPlay} clickLocation=\"rl\" clickIndex={25} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n            {this.props.mechData.getInternalStructure().rightLeg > 26 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 75} yLoc={this.isBoxTop + 515} radius={10} inPlay={this.props.inPlay} clickLocation=\"rl\" clickIndex={26} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n            {this.props.mechData.getInternalStructure().rightLeg > 27 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 75} yLoc={this.isBoxTop + 530} radius={10} inPlay={this.props.inPlay} clickLocation=\"rl\" clickIndex={27} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n            {this.props.mechData.getInternalStructure().rightLeg > 28 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 75} yLoc={this.isBoxTop + 545} radius={10} inPlay={this.props.inPlay} clickLocation=\"rl\" clickIndex={28} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n            {this.props.mechData.getInternalStructure().rightLeg > 29 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 75} yLoc={this.isBoxTop + 560} radius={10} inPlay={this.props.inPlay} clickLocation=\"rl\" clickIndex={29} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n\n            {/* Right Rear Leg IS */}\n            {this.props.mechData.getInternalStructure().leftLeg > 0 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 55} yLoc={this.isBoxTop + 340} radius={10} inPlay={this.props.inPlay} clickLocation=\"ll\" clickIndex={0} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n            {this.props.mechData.getInternalStructure().leftLeg > 1 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 55} yLoc={this.isBoxTop + 355} radius={10} inPlay={this.props.inPlay} clickLocation=\"ll\" clickIndex={1} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n            {this.props.mechData.getInternalStructure().leftLeg > 2 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 55} yLoc={this.isBoxTop + 370} radius={10} inPlay={this.props.inPlay} clickLocation=\"ll\" clickIndex={2} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n            {this.props.mechData.getInternalStructure().leftLeg > 3 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 55} yLoc={this.isBoxTop + 385} radius={10} inPlay={this.props.inPlay} clickLocation=\"ll\" clickIndex={3} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n            {this.props.mechData.getInternalStructure().leftLeg > 4 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 55} yLoc={this.isBoxTop + 400} radius={10} inPlay={this.props.inPlay} clickLocation=\"ll\" clickIndex={4} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n\n            {this.props.mechData.getInternalStructure().leftLeg > 5 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 55} yLoc={this.isBoxTop + 420} radius={10} inPlay={this.props.inPlay} clickLocation=\"ll\" clickIndex={5} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n            {this.props.mechData.getInternalStructure().leftLeg > 6 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 55} yLoc={this.isBoxTop + 435} radius={10} inPlay={this.props.inPlay} clickLocation=\"ll\" clickIndex={6} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n            {this.props.mechData.getInternalStructure().leftLeg > 7 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 55} yLoc={this.isBoxTop + 450} radius={10} inPlay={this.props.inPlay} clickLocation=\"ll\" clickIndex={7} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n            {this.props.mechData.getInternalStructure().leftLeg > 8 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 55} yLoc={this.isBoxTop + 465} radius={10} inPlay={this.props.inPlay} clickLocation=\"ll\" clickIndex={8} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n            {this.props.mechData.getInternalStructure().leftLeg > 9 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 55} yLoc={this.isBoxTop + 480} radius={10} inPlay={this.props.inPlay} clickLocation=\"ll\" clickIndex={9} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n\n            {this.props.mechData.getInternalStructure().leftLeg > 10 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 75} yLoc={this.isBoxTop + 340} radius={10} inPlay={this.props.inPlay}clickLocation=\"ll\" clickIndex={10} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n            {this.props.mechData.getInternalStructure().leftLeg > 11 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 75} yLoc={this.isBoxTop + 355} radius={10} inPlay={this.props.inPlay}clickLocation=\"ll\" clickIndex={11} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n            {this.props.mechData.getInternalStructure().leftLeg > 12 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 75} yLoc={this.isBoxTop + 370} radius={10} inPlay={this.props.inPlay}clickLocation=\"ll\" clickIndex={12} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n            {this.props.mechData.getInternalStructure().leftLeg > 13 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 75} yLoc={this.isBoxTop + 385} radius={10} inPlay={this.props.inPlay}clickLocation=\"ll\" clickIndex={13} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n            {this.props.mechData.getInternalStructure().leftLeg > 14 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 75} yLoc={this.isBoxTop + 400} radius={10} inPlay={this.props.inPlay}clickLocation=\"ll\" clickIndex={14} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n\n            {this.props.mechData.getInternalStructure().leftLeg > 15 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 75} yLoc={this.isBoxTop + 420} radius={10} inPlay={this.props.inPlay} clickLocation=\"ll\" clickIndex={15} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n            {this.props.mechData.getInternalStructure().leftLeg > 16 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 75} yLoc={this.isBoxTop + 435} radius={10} inPlay={this.props.inPlay} clickLocation=\"ll\" clickIndex={16} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n            {this.props.mechData.getInternalStructure().leftLeg > 17 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 75} yLoc={this.isBoxTop + 450} radius={10} inPlay={this.props.inPlay} clickLocation=\"ll\" clickIndex={17} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n            {this.props.mechData.getInternalStructure().leftLeg > 18 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 75} yLoc={this.isBoxTop + 465} radius={10} inPlay={this.props.inPlay} clickLocation=\"ll\" clickIndex={18} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n            {this.props.mechData.getInternalStructure().leftLeg > 19 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 75} yLoc={this.isBoxTop + 480} radius={10} inPlay={this.props.inPlay} clickLocation=\"ll\" clickIndex={19} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n\n            {this.props.mechData.getInternalStructure().leftLeg > 20 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 55} yLoc={this.isBoxTop + 500} radius={10} inPlay={this.props.inPlay} clickLocation=\"ll\" clickIndex={20} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n            {this.props.mechData.getInternalStructure().leftLeg > 21 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 55} yLoc={this.isBoxTop + 515} radius={10} inPlay={this.props.inPlay} clickLocation=\"ll\" clickIndex={21} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n            {this.props.mechData.getInternalStructure().leftLeg > 22 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 55} yLoc={this.isBoxTop + 530} radius={10} inPlay={this.props.inPlay} clickLocation=\"ll\" clickIndex={22} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n            {this.props.mechData.getInternalStructure().leftLeg > 23 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 55} yLoc={this.isBoxTop + 545} radius={10} inPlay={this.props.inPlay} clickLocation=\"ll\" clickIndex={23} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n            {this.props.mechData.getInternalStructure().leftLeg > 24 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 55} yLoc={this.isBoxTop + 560} radius={10} inPlay={this.props.inPlay} clickLocation=\"ll\" clickIndex={24} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n\n            {this.props.mechData.getInternalStructure().leftLeg > 25 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 75} yLoc={this.isBoxTop + 500} radius={10} inPlay={this.props.inPlay} clickLocation=\"ll\" clickIndex={25} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n            {this.props.mechData.getInternalStructure().leftLeg > 26 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 75} yLoc={this.isBoxTop + 515} radius={10} inPlay={this.props.inPlay} clickLocation=\"ll\" clickIndex={26} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n            {this.props.mechData.getInternalStructure().leftLeg > 27 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 75} yLoc={this.isBoxTop + 530} radius={10} inPlay={this.props.inPlay} clickLocation=\"ll\" clickIndex={27} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n            {this.props.mechData.getInternalStructure().leftLeg > 28 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 75} yLoc={this.isBoxTop + 545} radius={10} inPlay={this.props.inPlay} clickLocation=\"ll\" clickIndex={28} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n            {this.props.mechData.getInternalStructure().leftLeg > 29 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 75} yLoc={this.isBoxTop + 560} radius={10} inPlay={this.props.inPlay} clickLocation=\"ll\" clickIndex={29} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n\n\n\n            {/* Right Front Leg IS */}\n            {this.props.mechData.getInternalStructure().rightArm > 0 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 115} yLoc={this.isBoxTop + 260} radius={10} inPlay={this.props.inPlay} clickLocation=\"ra\" clickIndex={0} clickFunction={this.toggleISBubble}  /></>) : (<></>)}\n            {this.props.mechData.getInternalStructure().rightArm > 1 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 115} yLoc={this.isBoxTop + 275} radius={10} inPlay={this.props.inPlay} clickLocation=\"ra\" clickIndex={1} clickFunction={this.toggleISBubble}  /></>) : (<></>)}\n            {this.props.mechData.getInternalStructure().rightArm > 2 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 115} yLoc={this.isBoxTop + 290} radius={10} inPlay={this.props.inPlay} clickLocation=\"ra\" clickIndex={2} clickFunction={this.toggleISBubble}  /></>) : (<></>)}\n            {this.props.mechData.getInternalStructure().rightArm > 3 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 115} yLoc={this.isBoxTop + 305} radius={10} inPlay={this.props.inPlay} clickLocation=\"ra\" clickIndex={3} clickFunction={this.toggleISBubble}  /></>) : (<></>)}\n            {this.props.mechData.getInternalStructure().rightArm > 4 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 115} yLoc={this.isBoxTop + 320} radius={10} inPlay={this.props.inPlay} clickLocation=\"ra\" clickIndex={4} clickFunction={this.toggleISBubble}  /></>) : (<></>)}\n\n            {this.props.mechData.getInternalStructure().rightArm > 5 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 120} yLoc={this.isBoxTop + 340} radius={10} inPlay={this.props.inPlay} clickLocation=\"ra\" clickIndex={5} clickFunction={this.toggleISBubble}  /></>) : (<></>)}\n            {this.props.mechData.getInternalStructure().rightArm > 6 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 120} yLoc={this.isBoxTop + 355} radius={10} inPlay={this.props.inPlay} clickLocation=\"ra\" clickIndex={6} clickFunction={this.toggleISBubble}  /></>) : (<></>)}\n            {this.props.mechData.getInternalStructure().rightArm > 7 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 120} yLoc={this.isBoxTop + 370} radius={10} inPlay={this.props.inPlay} clickLocation=\"ra\" clickIndex={7} clickFunction={this.toggleISBubble}  /></>) : (<></>)}\n            {this.props.mechData.getInternalStructure().rightArm > 8 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 120} yLoc={this.isBoxTop + 385} radius={10} inPlay={this.props.inPlay} clickLocation=\"ra\" clickIndex={8} clickFunction={this.toggleISBubble}  /></>) : (<></>)}\n            {this.props.mechData.getInternalStructure().rightArm > 9 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 120} yLoc={this.isBoxTop + 400} radius={10} inPlay={this.props.inPlay} clickLocation=\"ra\" clickIndex={9} clickFunction={this.toggleISBubble}  /></>) : (<></>)}\n\n            {this.props.mechData.getInternalStructure().rightArm > 10 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 130} yLoc={this.isBoxTop + 420} radius={10} inPlay={this.props.inPlay} clickLocation=\"ra\" clickIndex={10} clickFunction={this.toggleISBubble}  /></>) : (<></>)}\n            {this.props.mechData.getInternalStructure().rightArm > 11 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 130} yLoc={this.isBoxTop + 435} radius={10} inPlay={this.props.inPlay} clickLocation=\"ra\" clickIndex={11} clickFunction={this.toggleISBubble}  /></>) : (<></>)}\n            {this.props.mechData.getInternalStructure().rightArm > 12 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 130} yLoc={this.isBoxTop + 450} radius={10} inPlay={this.props.inPlay} clickLocation=\"ra\" clickIndex={12} clickFunction={this.toggleISBubble}  /></>) : (<></>)}\n            {this.props.mechData.getInternalStructure().rightArm > 13 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 130} yLoc={this.isBoxTop + 465} radius={10} inPlay={this.props.inPlay} clickLocation=\"ra\" clickIndex={13} clickFunction={this.toggleISBubble}  /></>) : (<></>)}\n            {this.props.mechData.getInternalStructure().rightArm > 14 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 130} yLoc={this.isBoxTop + 480} radius={10} inPlay={this.props.inPlay} clickLocation=\"ra\" clickIndex={14} clickFunction={this.toggleISBubble}  /></>) : (<></>)}\n\n            {this.props.mechData.getInternalStructure().rightArm > 15 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 130} yLoc={this.isBoxTop + 500} radius={10} inPlay={this.props.inPlay} clickLocation=\"ra\" clickIndex={15} clickFunction={this.toggleISBubble}  /></>) : (<></>)}\n            {this.props.mechData.getInternalStructure().rightArm > 16 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 130} yLoc={this.isBoxTop + 515} radius={10} inPlay={this.props.inPlay} clickLocation=\"ra\" clickIndex={16} clickFunction={this.toggleISBubble}  /></>) : (<></>)}\n            {this.props.mechData.getInternalStructure().rightArm > 17 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 130} yLoc={this.isBoxTop + 530} radius={10} inPlay={this.props.inPlay} clickLocation=\"ra\" clickIndex={17} clickFunction={this.toggleISBubble}  /></>) : (<></>)}\n            {this.props.mechData.getInternalStructure().rightArm > 18 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 130} yLoc={this.isBoxTop + 545} radius={10} inPlay={this.props.inPlay} clickLocation=\"ra\" clickIndex={18} clickFunction={this.toggleISBubble}  /></>) : (<></>)}\n            {this.props.mechData.getInternalStructure().rightArm > 19 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 130} yLoc={this.isBoxTop + 560} radius={10} inPlay={this.props.inPlay} clickLocation=\"ra\" clickIndex={19} clickFunction={this.toggleISBubble}  /></>) : (<></>)}\n\n            {this.props.mechData.getInternalStructure().rightArm > 20 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 150} yLoc={this.isBoxTop + 560} radius={10} inPlay={this.props.inPlay} clickLocation=\"ra\" clickIndex={20} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n            {this.props.mechData.getInternalStructure().rightArm > 21 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 150} yLoc={this.isBoxTop + 545} radius={10} inPlay={this.props.inPlay} clickLocation=\"ra\" clickIndex={21} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n            {this.props.mechData.getInternalStructure().rightArm > 22 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 150} yLoc={this.isBoxTop + 530} radius={10} inPlay={this.props.inPlay} clickLocation=\"ra\" clickIndex={22} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n            {this.props.mechData.getInternalStructure().rightArm > 23 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 150} yLoc={this.isBoxTop + 515} radius={10} inPlay={this.props.inPlay} clickLocation=\"ra\" clickIndex={23} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n            {this.props.mechData.getInternalStructure().rightArm > 24 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 150} yLoc={this.isBoxTop + 500} radius={10} inPlay={this.props.inPlay} clickLocation=\"ra\" clickIndex={24} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n\n\n\n            {/* Left Front Leg IS */}\n            {this.props.mechData.getInternalStructure().leftArm > 0 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 115} yLoc={this.isBoxTop + 260} radius={10} inPlay={this.props.inPlay} clickLocation=\"la\" clickIndex={0} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n            {this.props.mechData.getInternalStructure().leftArm > 1 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 115} yLoc={this.isBoxTop + 275} radius={10} inPlay={this.props.inPlay} clickLocation=\"la\" clickIndex={1} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n            {this.props.mechData.getInternalStructure().leftArm > 2 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 115} yLoc={this.isBoxTop + 290} radius={10} inPlay={this.props.inPlay} clickLocation=\"la\" clickIndex={2} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n            {this.props.mechData.getInternalStructure().leftArm > 3 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 115} yLoc={this.isBoxTop + 305} radius={10} inPlay={this.props.inPlay} clickLocation=\"la\" clickIndex={3} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n            {this.props.mechData.getInternalStructure().leftArm > 4 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 115} yLoc={this.isBoxTop + 320} radius={10} inPlay={this.props.inPlay} clickLocation=\"la\" clickIndex={4} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n\n            {this.props.mechData.getInternalStructure().leftArm > 5 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 120} yLoc={this.isBoxTop + 340} radius={10} inPlay={this.props.inPlay} clickLocation=\"la\" clickIndex={5} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n            {this.props.mechData.getInternalStructure().leftArm > 6 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 120} yLoc={this.isBoxTop + 355} radius={10} inPlay={this.props.inPlay} clickLocation=\"la\" clickIndex={6} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n            {this.props.mechData.getInternalStructure().leftArm > 7 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 120} yLoc={this.isBoxTop + 370} radius={10} inPlay={this.props.inPlay} clickLocation=\"la\" clickIndex={7} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n            {this.props.mechData.getInternalStructure().leftArm > 8 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 120} yLoc={this.isBoxTop + 385} radius={10} inPlay={this.props.inPlay} clickLocation=\"la\" clickIndex={8} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n            {this.props.mechData.getInternalStructure().leftArm > 9 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 120} yLoc={this.isBoxTop + 400} radius={10} inPlay={this.props.inPlay} clickLocation=\"la\" clickIndex={9} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n\n            {this.props.mechData.getInternalStructure().leftArm > 10 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 130} yLoc={this.isBoxTop + 420} radius={10} inPlay={this.props.inPlay} clickLocation=\"la\" clickIndex={10} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n            {this.props.mechData.getInternalStructure().leftArm > 11 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 130} yLoc={this.isBoxTop + 435} radius={10} inPlay={this.props.inPlay} clickLocation=\"la\" clickIndex={11} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n            {this.props.mechData.getInternalStructure().leftArm > 12 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 130} yLoc={this.isBoxTop + 450} radius={10} inPlay={this.props.inPlay} clickLocation=\"la\" clickIndex={12} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n            {this.props.mechData.getInternalStructure().leftArm > 13 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 130} yLoc={this.isBoxTop + 465} radius={10} inPlay={this.props.inPlay} clickLocation=\"la\" clickIndex={13} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n            {this.props.mechData.getInternalStructure().leftArm > 14 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 130} yLoc={this.isBoxTop + 480} radius={10} inPlay={this.props.inPlay} clickLocation=\"la\" clickIndex={14} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n\n            {this.props.mechData.getInternalStructure().leftArm > 15 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 130} yLoc={this.isBoxTop + 500} radius={10} inPlay={this.props.inPlay} clickLocation=\"la\" clickIndex={15} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n            {this.props.mechData.getInternalStructure().leftArm > 16 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 130} yLoc={this.isBoxTop + 515} radius={10} inPlay={this.props.inPlay} clickLocation=\"la\" clickIndex={16} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n            {this.props.mechData.getInternalStructure().leftArm > 17 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 130} yLoc={this.isBoxTop + 530} radius={10} inPlay={this.props.inPlay} clickLocation=\"la\" clickIndex={17} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n            {this.props.mechData.getInternalStructure().leftArm > 18 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 130} yLoc={this.isBoxTop + 545} radius={10} inPlay={this.props.inPlay} clickLocation=\"la\" clickIndex={18} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n            {this.props.mechData.getInternalStructure().leftArm > 19 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 130} yLoc={this.isBoxTop + 560} radius={10} inPlay={this.props.inPlay} clickLocation=\"la\" clickIndex={19} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n\n            {this.props.mechData.getInternalStructure().leftArm > 20 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 150} yLoc={this.isBoxTop + 560} radius={10} inPlay={this.props.inPlay} clickLocation=\"la\" clickIndex={20} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n            {this.props.mechData.getInternalStructure().leftArm > 21 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 150} yLoc={this.isBoxTop + 545} radius={10} inPlay={this.props.inPlay} clickLocation=\"la\" clickIndex={21} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n            {this.props.mechData.getInternalStructure().leftArm > 22 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 150} yLoc={this.isBoxTop + 530} radius={10} inPlay={this.props.inPlay} clickLocation=\"la\" clickIndex={22} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n            {this.props.mechData.getInternalStructure().leftArm > 23 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 150} yLoc={this.isBoxTop + 515} radius={10} inPlay={this.props.inPlay} clickLocation=\"la\" clickIndex={23} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n            {this.props.mechData.getInternalStructure().leftArm > 24 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 150} yLoc={this.isBoxTop + 500} radius={10} inPlay={this.props.inPlay} clickLocation=\"la\" clickIndex={24} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n\n\n        {/* Right Torso IS */}\n        {this.props.mechData.getInternalStructure().rightTorso > 0 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 70} yLoc={this.isBoxTop + 105} radius={10} inPlay={this.props.inPlay} clickLocation=\"rt\" clickIndex={0} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().rightTorso > 1 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 70} yLoc={this.isBoxTop + 120} radius={10} inPlay={this.props.inPlay} clickLocation=\"rt\" clickIndex={1} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().rightTorso > 2 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 70} yLoc={this.isBoxTop + 135} radius={10} inPlay={this.props.inPlay} clickLocation=\"rt\" clickIndex={2} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().rightTorso > 3 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 70} yLoc={this.isBoxTop + 150} radius={10} inPlay={this.props.inPlay} clickLocation=\"rt\" clickIndex={3} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().rightTorso > 4 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 70} yLoc={this.isBoxTop + 165} radius={10} inPlay={this.props.inPlay} clickLocation=\"rt\" clickIndex={4} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n\n        {this.props.mechData.getInternalStructure().rightTorso > 5 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 90} yLoc={this.isBoxTop + 105} radius={10} inPlay={this.props.inPlay} clickLocation=\"rt\" clickIndex={5} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().rightTorso > 6 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 90} yLoc={this.isBoxTop + 120} radius={10} inPlay={this.props.inPlay} clickLocation=\"rt\" clickIndex={6} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().rightTorso > 7 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 90} yLoc={this.isBoxTop + 135} radius={10} inPlay={this.props.inPlay} clickLocation=\"rt\" clickIndex={7} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().rightTorso > 8 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 90} yLoc={this.isBoxTop + 150} radius={10} inPlay={this.props.inPlay} clickLocation=\"rt\" clickIndex={8} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().rightTorso > 9 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 90} yLoc={this.isBoxTop + 165} radius={10} inPlay={this.props.inPlay} clickLocation=\"rt\" clickIndex={9} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n\n        {this.props.mechData.getInternalStructure().rightTorso > 10 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 110} yLoc={this.isBoxTop + 105} radius={10} inPlay={this.props.inPlay} clickLocation=\"rt\" clickIndex={10} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().rightTorso > 11 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 110} yLoc={this.isBoxTop + 120} radius={10} inPlay={this.props.inPlay} clickLocation=\"rt\" clickIndex={11} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().rightTorso > 12 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 110} yLoc={this.isBoxTop + 135} radius={10} inPlay={this.props.inPlay} clickLocation=\"rt\" clickIndex={12} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().rightTorso > 13 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 110} yLoc={this.isBoxTop + 150} radius={10} inPlay={this.props.inPlay} clickLocation=\"rt\" clickIndex={13} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().rightTorso > 14 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 110} yLoc={this.isBoxTop + 165} radius={10} inPlay={this.props.inPlay} clickLocation=\"rt\" clickIndex={14} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n\n        {this.props.mechData.getInternalStructure().rightTorso > 15 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 70} yLoc={this.isBoxTop + 185} radius={10} inPlay={this.props.inPlay} clickLocation=\"rt\" clickIndex={15} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().rightTorso > 16 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 70} yLoc={this.isBoxTop + 200} radius={10} inPlay={this.props.inPlay} clickLocation=\"rt\" clickIndex={16} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().rightTorso > 17 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 70} yLoc={this.isBoxTop + 215} radius={10} inPlay={this.props.inPlay} clickLocation=\"rt\" clickIndex={17} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().rightTorso > 18 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 70} yLoc={this.isBoxTop + 230} radius={10} inPlay={this.props.inPlay} clickLocation=\"rt\" clickIndex={18} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n\n        {this.props.mechData.getInternalStructure().rightTorso > 19 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 90} yLoc={this.isBoxTop + 185} radius={10} inPlay={this.props.inPlay} clickLocation=\"rt\" clickIndex={19} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().rightTorso > 20 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 90} yLoc={this.isBoxTop + 200} radius={10} inPlay={this.props.inPlay} clickLocation=\"rt\" clickIndex={20} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().rightTorso > 21 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 90} yLoc={this.isBoxTop + 215} radius={10} inPlay={this.props.inPlay} clickLocation=\"rt\" clickIndex={21} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().rightTorso > 22 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 + 90} yLoc={this.isBoxTop + 230} radius={10} inPlay={this.props.inPlay} clickLocation=\"rt\" clickIndex={22} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n\n\n        {/* Left Torso IS */}\n        {this.props.mechData.getInternalStructure().leftTorso > 0 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 70} yLoc={this.isBoxTop + 105} radius={10} inPlay={this.props.inPlay} clickLocation=\"lt\" clickIndex={0} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().leftTorso > 1 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 70} yLoc={this.isBoxTop + 120} radius={10} inPlay={this.props.inPlay} clickLocation=\"lt\" clickIndex={1} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().leftTorso > 2 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 70} yLoc={this.isBoxTop + 135} radius={10} inPlay={this.props.inPlay} clickLocation=\"lt\" clickIndex={2} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().leftTorso > 3 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 70} yLoc={this.isBoxTop + 150} radius={10} inPlay={this.props.inPlay} clickLocation=\"lt\" clickIndex={3} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().leftTorso > 4 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 70} yLoc={this.isBoxTop + 165} radius={10} inPlay={this.props.inPlay} clickLocation=\"lt\" clickIndex={4} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n\n        {this.props.mechData.getInternalStructure().leftTorso > 5 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 90} yLoc={this.isBoxTop + 105} radius={10} inPlay={this.props.inPlay} clickLocation=\"lt\" clickIndex={5} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().leftTorso > 6 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 90} yLoc={this.isBoxTop + 120} radius={10} inPlay={this.props.inPlay} clickLocation=\"lt\" clickIndex={6} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().leftTorso > 7 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 90} yLoc={this.isBoxTop + 135} radius={10} inPlay={this.props.inPlay} clickLocation=\"lt\" clickIndex={7} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().leftTorso > 8 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 90} yLoc={this.isBoxTop + 150} radius={10} inPlay={this.props.inPlay} clickLocation=\"lt\" clickIndex={8} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().leftTorso > 9 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 90} yLoc={this.isBoxTop + 165} radius={10} inPlay={this.props.inPlay} clickLocation=\"lt\" clickIndex={9} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n\n        {this.props.mechData.getInternalStructure().leftTorso > 10 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 110} yLoc={this.isBoxTop + 105} radius={10} inPlay={this.props.inPlay} clickLocation=\"lt\" clickIndex={10} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().leftTorso > 11 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 110} yLoc={this.isBoxTop + 120} radius={10} inPlay={this.props.inPlay} clickLocation=\"lt\" clickIndex={11} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().leftTorso > 12 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 110} yLoc={this.isBoxTop + 135} radius={10} inPlay={this.props.inPlay} clickLocation=\"lt\" clickIndex={12} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().leftTorso > 13 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 110} yLoc={this.isBoxTop + 150} radius={10} inPlay={this.props.inPlay} clickLocation=\"lt\" clickIndex={13} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().leftTorso > 14 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 110} yLoc={this.isBoxTop + 165} radius={10} inPlay={this.props.inPlay} clickLocation=\"lt\" clickIndex={14} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n\n        {this.props.mechData.getInternalStructure().leftTorso > 15 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 70} yLoc={this.isBoxTop + 185} radius={10} inPlay={this.props.inPlay} clickLocation=\"lt\" clickIndex={15} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().leftTorso > 16 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 70} yLoc={this.isBoxTop + 200} radius={10} inPlay={this.props.inPlay} clickLocation=\"lt\" clickIndex={16} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().leftTorso > 17 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 70} yLoc={this.isBoxTop + 215} radius={10} inPlay={this.props.inPlay} clickLocation=\"lt\" clickIndex={17} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().leftTorso > 18 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 70} yLoc={this.isBoxTop + 230} radius={10} inPlay={this.props.inPlay} clickLocation=\"lt\" clickIndex={18} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n\n        {this.props.mechData.getInternalStructure().leftTorso > 19 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 90} yLoc={this.isBoxTop + 185} radius={10} inPlay={this.props.inPlay} clickLocation=\"lt\" clickIndex={19} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().leftTorso > 20 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 90} yLoc={this.isBoxTop + 200} radius={10} inPlay={this.props.inPlay} clickLocation=\"lt\" clickIndex={20} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().leftTorso > 21 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 90} yLoc={this.isBoxTop + 215} radius={10} inPlay={this.props.inPlay} clickLocation=\"lt\" clickIndex={21} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n        {this.props.mechData.getInternalStructure().leftTorso > 22 ? (<><DamageCircleSVG xLoc={this.isBoxLeft + this.isBoxWidth / 2 - 90} yLoc={this.isBoxTop + 230} radius={10} inPlay={this.props.inPlay} clickLocation=\"lt\" clickIndex={22} clickFunction={this.toggleISBubble} /></>) : (<></>)}\n\n\n        </>\n    )}\n    </RecordSheetGroupBoxSVG>\n\n\n    <RecordSheetGroupBoxSVG\n        width={critBoxWidth}\n        height={1215}\n        xLoc={critBoxLeft}\n        yLoc={critBoxTop}\n        title=\"Critical Hit Table\"\n    >\n\n// Left Arm\n        <text\n            x={critBoxLeft + critCol1Start}\n            y={critBoxTop + 100}\n            textAnchor=\"start\"\n            fontFamily=\"sans-serif\"\n            fill={this.strokeColor}\n            style={{fontWeight: 700}}\n            fontSize={30}\n        >\n            {this.props.mechData.getMechType().tag === \"biped\" ? (\n                <>LEFT ARM</>\n            ) : (\n                <>LEFT FRONT LEG</>\n            )}\n        </text>\n\n        <CritAllocationTableSVG\n            strokeColor={this.strokeColor}\n            critData={this.props.mechData.getCriticals().leftArm}\n            inPlay={this.inPlay}\n            xLoc={critBoxLeft + critCol1Start}\n            yLoc={critBoxTop + 140}\n        />\n\t// Head\n        <text\n            x={critBoxLeft + critCol2Start}\n            y={(critBoxTop + 100)}\n            textAnchor=\"start\"\n            fontFamily=\"sans-serif\"\n            fill={this.strokeColor}\n            style={{fontWeight: 700}}\n            fontSize={30}\n        >\n                HEAD\n        </text>\n        <CritAllocationTableSVG\n            strokeColor={this.strokeColor}\n            critData={this.props.mechData.getCriticals().head}\n            inPlay={this.inPlay}\n            xLoc={critBoxLeft + critCol2Start}\n            yLoc={critBoxTop + 140}\n        />\n\n        <text\n            x={critBoxLeft + critCol3Start}\n            y={critBoxTop + 100}\n            textAnchor=\"start\"\n            fontFamily=\"sans-serif\"\n            fill={this.strokeColor}\n            style={{fontWeight: 700}}\n            fontSize={30}\n        >\n            {this.props.mechData.getMechType().tag === \"biped\" ? (\n                <>RIGHT ARM</>\n            ) : (\n                <>RIGHT FRONT LEG</>\n            )}\n        </text>\n        <CritAllocationTableSVG\n            strokeColor={this.strokeColor}\n            critData={this.props.mechData.getCriticals().rightArm}\n            inPlay={this.inPlay}\n            xLoc={critBoxLeft + critCol3Start}\n            yLoc={critBoxTop + 140}\n        />\n\n        <text\n            x={critBoxLeft + critCol1Start}\n            y={critBoxTop + 550}\n            textAnchor=\"start\"\n            fontFamily=\"sans-serif\"\n            fill={this.strokeColor}\n            style={{fontWeight: 700}}\n            fontSize={30\n        }>\n            LEFT TORSO\n        </text>\n        <CritAllocationTableSVG\n            strokeColor={this.strokeColor}\n            critData={this.props.mechData.getCriticals().leftTorso}\n            inPlay={this.inPlay}\n            xLoc={critBoxLeft + critCol1Start}\n            yLoc={critBoxTop + 575}\n\n        />\n\n\t// Center Torso\n        <text\n            x={critBoxLeft + critCol2Start}\n            y={critBoxTop + 350}\n            textAnchor=\"start\"\n            fontFamily=\"sans-serif\"\n            fill={this.strokeColor}\n            style={{fontWeight: 700}}\n            fontSize={30}\n        >\n            CENTER TORSO\n        </text>\n        <CritAllocationTableSVG\n            strokeColor={this.strokeColor}\n            critData={this.props.mechData.getCriticals().centerTorso}\n            inPlay={this.inPlay}\n            xLoc={critBoxLeft + critCol2Start}\n            yLoc={critBoxTop + 375}\n\n        />\n\n\t// Right Torso\n        <text\n            x={critBoxLeft + critCol3Start}\n            y={critBoxTop + 550}\n            textAnchor=\"start\"\n            fontFamily=\"sans-serif\"\n            fill={this.strokeColor}\n            style={{fontWeight: 700}}\n            fontSize={30}\n        >\n            RIGHT TORSO\n        </text>\n\n        <CritAllocationTableSVG\n            strokeColor={this.strokeColor}\n            critData={this.props.mechData.getCriticals().rightTorso}\n            inPlay={this.inPlay}\n            xLoc={critBoxLeft + critCol3Start}\n            yLoc={critBoxTop + 575}\n        />\n\n\t// Left Leg\n        <text\n            x={critBoxLeft + critCol1Start}\n            y={critBoxTop + 1010}\n            textAnchor=\"start\"\n            fontFamily=\"sans-serif\"\n            fill={this.strokeColor}\n            style={{fontWeight: 700}}\n            fontSize={30}\n        >\n            {this.props.mechData.getMechType().tag === \"biped\" ? (\n                <>LEFT LEG</>\n            ) : (\n                <>LEFT REAR LEG</>\n            )}\n        </text>\n\n        <CritAllocationTableSVG\n            strokeColor={this.strokeColor}\n            critData={this.props.mechData.getCriticals().leftLeg}\n            inPlay={this.inPlay}\n            xLoc={critBoxLeft + critCol1Start}\n            yLoc={critBoxTop + 1050}\n        />\n        // Right Leg\n        <text\n            x={critBoxLeft + critCol3Start}\n            y={critBoxTop + 1010}\n            textAnchor=\"start\"\n            fontFamily=\"sans-serif\"\n            fill={this.strokeColor}\n            style={{fontWeight: 700}}\n            fontSize={30}\n        >\n            {this.props.mechData.getMechType().tag === \"biped\" ? (\n                <>RIGHT LEG</>\n            ) : (\n                <>RIGHT REAR LEG</>\n            )}\n        </text>\n        <CritAllocationTableSVG\n            strokeColor={this.strokeColor}\n            critData={this.props.mechData.getCriticals().rightLeg}\n            inPlay={this.inPlay}\n            xLoc={critBoxLeft + critCol3Start}\n            yLoc={critBoxTop + 1050}\n        />\n\n\n    {this.props.mechData.getMechType().tag === \"biped\" ? (\n        <>\n            <BipedDamageTransferDiagramSVG\n                xLoc={critBoxLeft + critBoxWidth / 2 - damageTransferWidth / 2}\n                yLoc={critBoxTop + 820}\n                width={damageTransferWidth}\n                strokeColor={this.strokeColor}\n            />\n            <text\n                x={critBoxLeft + critBoxWidth / 2}\n                y={critBoxTop + 1200}\n                textAnchor=\"middle\"\n                fontFamily=\"sans-serif\"\n                fill={this.strokeColor}\n                style={{fontWeight: 700}}\n                fontSize={25}\n            >\n                DAMAGE TRANSFER\n            </text>\n            <text\n                x={critBoxLeft + critBoxWidth / 2}\n                y={critBoxTop + 1220}\n                textAnchor=\"middle\"\n                fontFamily=\"sans-serif\"\n                fill={this.strokeColor}\n                style={{fontWeight: 700}}\n                fontSize={25}\n            >\n                DIAGRAM\n            </text>\n        </>\n    ) : (\n        <>\n            <QuadDamageTransferDiagramSVG\n                xLoc={critBoxLeft + critBoxWidth / 2 - damageTransferWidth / 2}\n                yLoc={critBoxTop + 820}\n                width={damageTransferWidth}\n                strokeColor={this.strokeColor}\n            />\n            <text\n                x={critBoxLeft + critBoxWidth / 2}\n                y={critBoxTop + 1200}\n                textAnchor=\"middle\"\n                fontFamily=\"sans-serif\"\n                fill={this.strokeColor}\n                style={{fontWeight: 700}}\n                fontSize={25}\n            >\n                DAMAGE TRANSFER\n            </text>\n            <text\n                x={critBoxLeft + critBoxWidth / 2}\n                y={critBoxTop + 1220}\n                textAnchor=\"middle\"\n                fontFamily=\"sans-serif\"\n                fill={this.strokeColor}\n                style={{fontWeight: 700}}\n                fontSize={25}\n            >\n                DIAGRAM\n            </text>\n        </>\n    )}\n    </RecordSheetGroupBoxSVG>\n\n    <BattleMechHeatEffectsBoxSVG\n        yLoc={1885}\n        xLoc={1240}\n        height={575}\n        width={435}\n        mechData={this.props.mechData}\n        inPlay={this.props.inPlay}\n    >\n    </BattleMechHeatEffectsBoxSVG>\n\n    {/* <RecordSheetGroupBoxSVG\n        yLoc={1885}\n        xLoc={1690}\n        height={575}\n        width={205}\n        title=\"Sinks\"\n    >\n    </RecordSheetGroupBoxSVG> */}\n    <HeatSinksSVG\n        yLoc={1885}\n        xLoc={1690}\n        height={575}\n        width={205}\n        mechData={this.props.mechData}\n        inPlay={this.props.inPlay}\n    >\n\n    </HeatSinksSVG>\n\n    <HeatTrackSVG\n        xLoc={this.docWidth - 80}\n        yLoc={1260}\n    />\n\n\t{/* // Classic Battletech Logo on bottom. */}\n    <rect\n        x={0}\n        y={this.docHeight - 100}\n        width={2000}\n        height={100}\n        fill={this.strokeColor}\n    />\n    <BattleTechLogo\n        yLoc={this.docHeight - 85}\n        xLoc={1500}\n        width={500}\n    />\n    {/* <text\n        x={20}\n        y={this.docHeight - 25}\n        textAnchor=\"start\"\n        fontFamily=\"sans-serif\"\n        fill={this.colorTan}\n        style={{fontWeight: 700}}\n        fontSize={60}\n    >\n    CLASSIC BATTLETECH\n    </text> */}\n    <text\n        x={20}\n        y={this.docHeight - 55}\n        textAnchor=\"start\"\n        fontFamily=\"sans-serif\"\n        fill={this.colorTan}\n        style={{fontWeight: 700}}\n        fontSize={20}\n    >\n    Created with Gauthic's Battletech Tools\n    </text>\n    <text\n        x={20}\n        y={this.docHeight - 25}\n        textAnchor=\"start\"\n        fontFamily=\"sans-serif\"\n        fill={this.colorTan}\n        style={{fontWeight: 700}}\n        fontSize={20}\n    >\n    https://jdgwf.github.io/battletech-tools/\n    </text>\n            </g>\n        </svg>\n        </>\n        )\n\n    }\n\n}\n\n\ninterface IBattleMechSVGProps {\n    bgColor?: string;\n    strokeColor?: string;\n    mechData: BattleMech;\n    inPlay?: boolean;\n    // landscape?: boolean;\n    // itemIDField\n}\n\ninterface IBattleMechSVGState {\n}","/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Components/SVG/BipedArmorCircles.tsx",[],"/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Components/SVG/DamageCircleSVG.tsx",[],"/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Components/SVG/HeatSinksSVG.tsx",[],"/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Components/SVG/QuadRearArmorDiagramSVG.tsx",[],"/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Components/SVG/BipedRearArmorDiagramSVG.tsx",[],"/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Components/SVG/BipedArmorDiagramSVG.tsx",[],"/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Components/SVG/QuadInternalStructureDiagramSVG.tsx",[],"/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Components/SVG/QuadArmorCircles.tsx",[],"/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Components/SVG/CritAllocationTableSVG.tsx",[],"/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Components/SVG/BipedInternalStructureDiagramSVG.tsx",[],"/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Components/SVG/HeatTrackSVG.tsx",[],"/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Components/SVG/BattleMechHeatEffectsBoxSVG.tsx",[],"/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Components/SVG/QuadDamageTransferDiagramSVG.tsx",[],"/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Components/SVG/RecordSheetEquipmentTable.tsx",[],"/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Components/SVG/PilotHitTrackSVG.tsx",[],"/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Components/SVG/BipedDamageTransferDiagramSVG.tsx",[],"/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Components/SVG/RecordSheetGroupBoxSVG.tsx",[],"/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Components/SVG/DieSVG.tsx",[],"/home/jeff/Nextcloud/Development/battletech-tools/src/Data/mech-tonnages.ts",[],"/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Components/MechCreatorSideMenu.tsx",[],"/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Components/PrintablePage.tsx",[],"/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Components/UnallocatedEquipmentList.tsx",[],"/home/jeff/Nextcloud/Development/battletech-tools/src/UI/Components/ShowAlerts.tsx",[],{"ruleId":"316","replacedBy":"317"},{"ruleId":"318","replacedBy":"319"},{"ruleId":"320","severity":1,"message":"321","line":297,"column":28,"nodeType":"322","endLine":300,"endColumn":17},{"ruleId":"320","severity":1,"message":"321","line":451,"column":20,"nodeType":"322","endLine":454,"endColumn":13},{"ruleId":"320","severity":1,"message":"321","line":464,"column":20,"nodeType":"322","endLine":467,"endColumn":13},{"ruleId":"320","severity":1,"message":"321","line":578,"column":15,"nodeType":"322","endLine":582,"endColumn":3},{"ruleId":"320","severity":1,"message":"321","line":1233,"column":6,"nodeType":"322","endLine":1236,"endColumn":9},{"ruleId":"320","severity":1,"message":"321","line":1258,"column":11,"nodeType":"322","endLine":1260,"endColumn":9},{"ruleId":"320","severity":1,"message":"321","line":1320,"column":11,"nodeType":"322","endLine":1323,"endColumn":9},{"ruleId":"320","severity":1,"message":"321","line":1341,"column":11,"nodeType":"322","endLine":1344,"endColumn":9},{"ruleId":"320","severity":1,"message":"321","line":1362,"column":11,"nodeType":"322","endLine":1365,"endColumn":9},{"ruleId":"320","severity":1,"message":"321","line":1387,"column":11,"nodeType":"322","endLine":1389,"endColumn":9},"no-native-reassign",["323"],"no-negated-in-lhs",["324"],"react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","JSXText","no-global-assign","no-unsafe-negation"]