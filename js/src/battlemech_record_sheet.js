
var colorRed = "rgb(200,0,0)";
var colorGreen = "rgb(0,200,0)";
var colorBlue = "rgb(0,0,200)";
var colorBlack = "rgb(0,0,0)";
var colorWhite = "rgb(255,255,255)";
var colorYellow = "rgb( 204, 187, 0 )";
var colorOrange = "rgb( 236,87,16 )";
var colorGrayBackground = "rgba( 255,255,255,.8)";

var colorMediumGray = "rgb(102,102,102)";
var colorDarkGray = "rgb(51,51,51)";
var colorLightGray = "rgb(153,153,153)";
var colorVeryLightGray = "rgb(225,225,225)";

var colorGold = "rgb(223,171,45)";
var colorTan = "rgb(253,253,227)";


function rsRearArmorSVG( standAlone, baseFillColor, lineColor, xLoc, yLoc, width) {

	var baseWidth = 744.09449;
	var baseHeight = 627.16514;
	if( typeof( width ) == "undefined" || width == 0) {
		theWidth = 744;
		theHeight = 627;
	} else {
		theWidth = width;
		theHeight = Math.round( width / baseWidth * baseHeight );
	}

	if( typeof( xLoc ) == "undefined" ) {
		xLoc = 0;
	}

	if( typeof( yLoc ) == "undefined" ) {
		yLoc = 0;
	}

	if( typeof(standAlone) == "undefined" )
		standAlone = true;

	if( !baseFillColor )
		baseFillColor = colorTan;

	if( !lineColor )
		lineColor = colorGold;

	var svg = "";

	if( standAlone ) {
		var svg = "<!DOCTYPE HTML><svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xml:space=\"preserve\" height=\"" + theHeight  + " px\" width=\"" + theWidth  + "px\" viewBox=\"0 0 790 100\" ><g>\n";

	} else {
		var svg = '<svg \
		    viewBox="0 0 744.09449 627.16514" \
		   height="' + theHeight + 'px" \
		   width="' + theWidth + 'px" \
		   x="' + xLoc + 'px" \
		   y="' + yLoc + 'px" \
		   id=\"rearArmor\" \
		   version="1.1"> \
		  <g> \"';
	  }

  svg += '<g \
     transform="translate(0,-425.19712)" \
     id="rearArmorLayer1"><path \
       id="path4740" \
       d="m 255.33564,1031.6854 c -12.9661,-14.8304 -22.468,-46.09741 -27.9139,-91.8529 l -2.6212,-22.02381 -12.7648,-1.44555 c -7.0206,-0.79506 -41.04523,-3.22678 -75.6103,-5.40381 l -62.845597,-3.95823 -7.12187,-6.74437 -7.12187,-6.74435 -5.10557,-107.8816 c -6.92551,-146.33745 -7.22688,-134.81631 3.84136,-146.85188 l 9.05806,-9.84969 96.974497,-4.90314 c 53.33599,-2.6967 100.33129,-5.09167 104.43409,-5.32214 l 7.4596,-0.41902 0.599,-25.70992 0.5991,-25.70991 7.4675,-6.7752 c 4.1071,-3.72636 8.8165,-6.77521 10.4653,-6.77521 1.6488,0 6.1711,-6.16748 10.0496,-13.70552 3.8784,-7.53804 12.699,-19.67628 19.6013,-26.97387 11.6697,-12.33812 12.6537,-14.18096 14.0348,-26.28546 1.2369,-10.83937 2.6195,-14.06423 8.2644,-19.27612 6.4699,-5.97368 7.73,-6.25902 27.6403,-6.25902 20.744,0 20.899,0.0403 27.545,7.15774 5.1647,5.53093 7.0234,9.91079 8.1784,19.27083 1.1974,9.70396 3.0584,13.88407 9.3567,21.01754 6.944,7.86481 21.3749,35.15322 21.3749,40.41937 0,2.47056 5.328,4.63451 11.4109,4.63451 2.5676,0 8.2437,3.04537 12.6136,6.76749 l 7.9451,6.76748 0,25.16704 c 0,13.84187 0.2398,25.17714 0.5329,25.1895 0.293,0.0123 23.5509,1.43793 51.6842,3.16793 28.1332,1.73001 75.1165,4.40934 104.4072,5.95407 l 53.2559,2.80858 8.0508,8.88956 c 4.4279,4.88924 8.5787,10.94903 9.2239,13.46617 0.6453,2.51717 -1.2485,56.24401 -4.2083,119.393 -4.9165,104.89636 -5.7578,115.57854 -9.7369,123.6384 -2.3955,4.85213 -6.0307,9.7134 -8.0783,10.80283 -2.0475,1.08943 -15.2319,2.62563 -29.2985,3.4138 -36.6161,2.05161 -119.2331,8.27694 -120.0095,9.04293 -0.3609,0.35608 -1.9888,11.13744 -3.6173,23.95856 -5.6384,44.38766 -15.8434,74.65309 -30.3601,90.03989 l -7.7919,8.259 -112.2788,0 -112.2787,0 -7.305,-8.3555 z m 234.5983,-8.1921 c 14.0048,-16.4826 22.9913,-45.92567 27.7115,-90.79356 4.4,-41.82414 -13.1726,-88.81453 -41.7376,-111.60959 l -11.2728,-8.99574 -0.01,-120.42049 -0.01,-120.4205 -5.2543,-4.27092 c -2.8899,-2.34901 -9.124,-4.91033 -13.8535,-5.69183 -8.1384,-1.34477 -8.5992,-1.83256 -8.5992,-9.10321 0,-5.32169 -0.9713,-7.68231 -3.161,-7.68231 -1.7386,0 -5.6728,-5.20312 -8.7427,-11.5625 -3.0698,-6.35937 -9.2011,-15.52678 -13.625,-20.37202 -6.6251,-7.25605 -8.2672,-10.90862 -9.3122,-20.71324 -1.9836,-18.61152 -6.55,-22.23319 -28.0326,-22.23319 -21.5711,0 -25.4651,3.22501 -27.28,22.59293 -1.1218,11.97133 -1.8435,13.30092 -12.8758,23.72004 -7.7287,7.29916 -14.4489,16.58123 -19.8404,27.40384 -6.0678,12.18017 -9.5225,16.71689 -13.5076,17.73786 -2.9451,0.75452 -7.5126,3.45328 -10.1501,5.99726 l -4.7954,4.6254 0,118.50137 0,118.50134 -15.669,16.01056 c -17.5261,17.90833 -26.6709,34.8829 -32.4743,60.27941 -8.4733,37.07972 5.5699,119.97679 23.7583,140.24629 l 5.3757,5.9908 108.3897,0 108.3896,0 6.5749,-7.738 z M 225.94384,901.84143 c 0.059,-11.33742 6.5273,-34.57934 14.2413,-51.17194 5.4916,-11.81232 11.8727,-20.87293 22.2867,-31.64518 l 14.5919,-15.0939 0,-88.21531 0,-88.21528 -39.962,1.56818 c -42.18887,1.6556 -105.41247,4.94946 -144.103437,7.50761 -23.10572,1.52768 -23.16395,1.54588 -29.30548,9.15587 -7.49621,9.28856 -7.4203,-1.49682 -0.9514,135.18804 4.84031,102.27358 5.31078,107.81658 9.54643,112.47558 4.18928,4.608 7.4124,5.07314 53.997007,7.7928 27.24798,1.59075 57.21449,3.60172 66.59225,4.4688 32.91573,3.04345 33.03113,3.03013 33.06673,-3.81527 z m 346.306,2.89404 c 22.2722,-1.70542 53.7687,-3.79796 69.9923,-4.65013 25.8381,-1.35717 30.1226,-2.12986 34.5366,-6.22849 5.0391,-4.67909 5.0392,-4.67984 10.4395,-122.10611 l 5.4003,-117.42698 -5.836,-7.62614 c -3.2098,-4.19437 -7.7541,-8.01268 -10.0986,-8.48513 -7.9218,-1.59644 -165.4225,-9.96763 -188.0879,-9.99692 l -15.452,-0.0199 0,88.20154 0,88.20156 14.6176,14.89666 c 16.8989,17.22163 30.1305,42.23341 35.6977,67.47998 4.4629,20.23843 4.6817,20.92788 6.6303,20.89172 0.916,-0.0176 19.8881,-1.42622 42.1602,-3.13161 z" \
       style="fill:#000000" /> \
';

svg += "</g></g></svg>";

	return svg;

}

function rsArmorSVG( standAlone, baseFillColor, lineColor, xLoc, yLoc, width) {

	var baseWidth = 744.09448819;
	var baseHeight = 1052.3622047;
	if( typeof( width ) == "undefined" || width == 0) {
		theWidth = 744;
		theHeight = 627;
	} else {
		theWidth = width;
		theHeight = Math.round( width / baseWidth * baseHeight );
	}

	if( typeof( xLoc ) == "undefined" ) {
		xLoc = 0;
	}

	if( typeof( yLoc ) == "undefined" ) {
		yLoc = 0;
	}

	if( typeof(standAlone) == "undefined" )
		standAlone = true;

	if( !baseFillColor )
		baseFillColor = colorTan;

	if( !lineColor )
		lineColor = colorGold;

	var svg = "";

	if( standAlone ) {
		var svg = "<!DOCTYPE HTML><svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xml:space=\"preserve\" height=\"" + theHeight  + " px\" width=\"" + theWidth  + "px\" viewBox=\"0 0 790 100\" ><g>\n";

	} else {
		var svg = '<svg \
		    viewBox="0 0 744.09448819 1052.3622047" \
		   height="' + theHeight + 'px" \
		   width="' + theWidth + 'px" \
		   x="' + xLoc + 'px" \
		   y="' + yLoc + 'px" \
		   id=\"rearArmor\" \
		   version="1.1"> \
		  <g> \"';
	  }

  svg += '<g \
     transform="translate(0,-3.75)" \
     id="layer1"><path \
       style="fill:#000000" \
       d="m 58.482148,1046.717 v -9.3952 l 4.532781,-2.1616 c 3.1421,-1.4983 5.347263,-3.8621 7.1875,-7.7044 2.379444,-4.9681 3.56203,-5.9107 11.404719,-9.0907 32.008692,-12.9787 32.313422,-13.1431 35.504702,-19.1587 1.64544,-3.10168 2.76752,-5.85691 2.4935,-6.12271 -0.27401,-0.2658 -3.8732,-2.11175 -7.9982,-4.1021 -4.64506,-2.24129 -7.38092,-4.30887 -7.18716,-5.4316 0.17206,-0.99702 2.80935,-12.1714 5.86063,-24.83192 l 5.5478,-23.01917 -6.79813,-8.19012 c -6.70304,-8.07554 -6.79809,-8.30436 -6.7942,-16.35584 0.004,-7.88185 0.8309,-10.03431 23.79165,-61.91572 16.76366,-37.87865 24.74473,-54.5392 27.02876,-56.4227 l 3.24105,-2.6727 -0.85546,-22.9523 c -0.85527,-22.947 -0.85444,-22.95733 3.5923,-44.72644 2.44627,-11.97579 4.44776,-21.93551 4.44776,-22.13274 0,-0.19724 4.04207,-0.52387 8.98239,-0.72586 l 8.98238,-0.36726 17.86465,-66.25 c 9.82555,-36.4375 17.87723,-66.95313 17.89262,-67.8125 0.0186,-1.038 -1.99688,-1.5625 -6.00415,-1.5625 -4.81327,0 -6.62355,-0.62957 -8.9592,-3.11575 l -2.9271,-3.11577 2.10005,-29.69673 c 1.15503,-16.33322 2.11081,-30.5405 2.12396,-31.57175 0.061,-4.78679 3.14162,-5.97468 27.4817,-10.59702 13.38574,-2.54203 24.48871,-4.77052 24.6733,-4.9522 0.18457,-0.18167 -1.67665,-5.54065 -4.13604,-11.90883 -8.36791,-21.66727 -15.90165,-53.85885 -19.02461,-81.29195 l -0.92495,-8.125 -22.27418,-3.23572 c -20.94481,-3.0426 -22.48873,-3.45292 -25.86923,-6.875 -3.53572,-3.57921 -3.60962,-3.94602 -4.47619,-22.21906 l -0.88111,-18.57977 -4.147,-1.73273 c -5.37988,-2.24785 -5.47428,-2.2293 -5.49435,1.07978 -0.0271,4.47862 -1.40352,8.43586 -2.94123,8.45663 -4.17729,0.0565 -4.65046,2.52062 -8.23377,42.87918 -3.22663,36.34121 -3.92009,41.24826 -6.30189,44.59319 -1.57658,2.2141 -2.06938,3.7585 -1.19929,3.7585 1.0054,0 1.20866,1.29711 0.6366,4.0625 -0.99505,4.81017 -1.00269,7.36053 -0.0421,14.0625 0.39416,2.75 -1.51285,29.16361 -4.23782,58.69691 l -4.95446,53.69691 -4.167,3.5154 c -3.59299,3.03116 -4.8988,3.41535 -9.4795,2.789 -2.92187,-0.39952 -5.3125,-0.23996 -5.3125,0.35458 0,0.59455 1.89476,6.70733 4.21059,13.58397 4.13447,12.27699 4.19101,12.73433 3.12841,25.30109 -1.23287,14.58032 -2.94879,18.81502 -9.18579,22.6697 -5.1927,3.20927 -5.48263,4.1965 -5.62196,19.14327 -0.0746,8.0042 -3.50294,10.20527 -18.562812,11.91774 -19.472571,2.21426 -17.476687,2.9383 -29.581458,-10.73107 l -10.792514,-12.1875 0.78307,-13.125 c 0.430687,-7.21875 1.089171,-14.39063 1.463296,-15.9375 0.622371,-2.57329 0.240099,-2.8125 -4.494515,-2.8125 -2.988788,0 -5.426354,-0.66004 -5.770375,-1.5625 -0.3276,-0.85938 2.783803,-10.18157 6.91423,-20.71597 4.130426,-10.53441 7.509866,-19.67503 7.509866,-20.3125 0,-0.63747 -1.969887,-1.15903 -4.377529,-1.15903 -4.074501,0 -4.966654,-0.80039 -12.888059,-11.5625 -4.680792,-6.35938 -10.325195,-14.1302 -12.543118,-17.2685 l -4.032588,-5.706 9.479888,-44.27649 c 7.623808,-35.60755 10.01574,-44.84689 12.216739,-47.18975 3.286905,-3.49875 4.270823,-11.41435 2.749759,-22.12176 -0.390656,-2.75 0.953457,-23.28125 2.986919,-45.625 l 3.697205,-40.625 -3.165232,-2.39784 c -1.740878,-1.31881 -9.899747,-8.33164 -18.130819,-15.58405 l -14.965586,-13.1862 0.825597,-11.29096 c 0.454079,-6.21003 1.087665,-12.22219 1.407971,-13.36038 0.455948,-1.62019 3.421478,-2.4059 13.660613,-3.61937 7.193032,-0.85247 13.07824,-1.99675 13.07824,-2.54284 0,-0.5461 -4.982951,-6.78026 -11.073225,-13.85371 l -11.073226,-12.8608 4.907356,-13.75689 c 2.699046,-7.56629 5.010122,-13.84055 5.135726,-13.9428 0.125603,-0.10225 7.822119,0.49879 17.103369,1.33566 9.28125,0.83686 17.072497,1.37026 17.313885,1.18533 0.36509,-0.27972 -6.859396,-35.1487 -9.28384,-44.80845 -0.643674,-2.56461 0.52666,-3.66218 10.018124,-9.3953 l 10.74694,-6.49146 18.095693,9.47253 c 9.95264,5.20989 18.37999,9.47253 18.72745,9.47253 0.34746,0 0.63175,-4.41359 0.63175,-9.80797 0,-5.39439 0.35661,-14.83194 0.79247,-20.97235 l 0.79247,-11.16438 13.74671,-4.82151 13.74671,-4.8215 18.4984,19.23135 18.4984,19.23135 7.53161,17.09016 7.53162,17.09015 -2.1317,8.47627 -2.13169,8.47626 -8.37904,5.01289 c -4.60846,2.75708 -8.2004,5.19151 -7.98206,5.40984 0.3797,0.37971 72.67174,-3.82808 94.1736,-5.48141 l 10.3125,-0.79295 v -22.71924 -22.71924 l 3.4375,-3.2621 c 2.90965,-2.76119 5.02439,-3.39801 13.77167,-4.14716 l 10.33418,-0.88506 5.08299,-9.77015 c 2.79565,-5.37358 8.32971,-13.31572 12.29791,-17.6492 6.59766,-7.20499 7.29435,-8.52069 8.14345,-15.37906 0.7763,-6.27031 1.57444,-8.05527 4.86791,-10.88669 l 3.93939,-3.386705 21.31729,-0.0508 21.3173,-0.0508 3.84255,4.062505 c 2.92215,3.08942 4.04597,5.68604 4.69186,10.84064 0.7299,5.82509 1.71966,7.73044 7.03915,13.55081 5.09616,5.57601 12.14204,16.35541 17.35164,26.54605 0.63647,1.24501 4.30918,2.29499 10.93091,3.125 7.8976,0.98993 10.79544,1.94839 13.92835,4.6068 l 3.95595,3.3568 v 22.5807 c 0,18.30597 0.32477,22.5807 1.7156,22.5807 0.94359,0 24.09134,1.42471 51.43945,3.16602 27.34811,1.7413 50.30727,2.97154 51.02036,2.73384 0.71309,-0.2377 -2.32529,-2.61243 -6.75195,-5.27716 -4.42665,-2.66475 -8.41315,-5.38252 -8.85886,-6.03948 -0.44573,-0.65696 -1.47193,-4.5569 -2.28045,-8.66653 l -1.47004,-7.47206 7.28045,-16.83958 7.28044,-16.83958 18.75,-19.34913 18.75,-19.34914 13.75,4.7789 13.75,4.7789 0.77847,13.75 c 0.42817,7.5625 0.85004,17.02203 0.9375,21.02118 l 0.15903,7.27119 18.50979,-9.54209 18.50978,-9.54209 10.2095,6.0209 c 6.18155,3.64549 10.2216,6.83927 10.2402,8.09518 0.0169,1.14085 -1.93802,11.41801 -4.34427,22.83814 -2.40625,11.42012 -4.375,21.47877 -4.375,22.35257 0,1.27888 3.23004,1.30242 16.5625,0.12063 9.10937,-0.80744 16.92457,-1.11201 17.3671,-0.67685 0.87341,0.85887 9.8204,25.47941 9.8204,27.024 0,0.5186 -4.78125,6.46449 -10.625,13.2131 -5.84375,6.7486 -10.625,12.7866 -10.625,13.41777 0,0.63119 5.84591,1.84042 12.99091,2.68719 l 12.99091,1.5396 0.81115,8.32978 c 0.44613,4.58137 1.10389,10.57977 1.4617,13.32977 l 0.65057,5 -16.86935,14.6875 c -9.27815,8.07813 -17.46933,14.6875 -18.20263,14.6875 -1.68207,0 -1.96394,-5.01424 2.55861,45.51666 3.65619,40.85105 3.77527,43.86289 1.86219,47.10147 -1.39942,2.36902 -1.61617,3.72406 -0.6875,4.29801 0.74594,0.46101 1.19626,3.05391 1.00074,5.762 -0.28944,4.00869 0.24836,5.43704 2.89366,7.68532 2.96705,2.52175 4.02999,6.50613 12.24145,45.88654 4.94575,23.71875 9.08909,43.80936 9.20743,44.64581 0.11837,0.83644 -5.29147,9.10207 -12.02178,18.36804 -11.81696,16.26903 -12.40516,16.86035 -17.13815,17.22919 l -4.90121,0.38196 8.07565,20.38664 c 4.44161,11.21267 8.07565,20.9158 8.07565,21.56252 0,0.64673 -2.55471,1.17587 -5.67713,1.17587 h -5.67712 l 0.77651,9.6875 c 0.42709,5.32812 1.22196,11.11083 1.7664,12.85047 1.59678,5.10214 -1.13352,10.2986 -11.79125,22.44178 -10.49735,11.96045 -13.5676,13.74076 -19.89862,11.53845 -2.13058,-0.74114 -7.72185,-1.7382 -12.42504,-2.21568 -12.58348,-1.27749 -14.41159,-3.30781 -15.12908,-16.80252 -0.45188,-8.49915 -1.00956,-10.8751 -2.78726,-11.875 -5.11995,-2.8798 -10.2371,-9.10397 -10.86372,-13.21392 -3.24144,-21.2598 -3.19674,-22.1633 1.83851,-37.16577 l 4.74231,-14.12968 -5.44494,0.81652 c -4.98976,0.74826 -5.81105,0.46652 -9.82448,-3.37032 l -4.37955,-4.18683 -4.93464,-56.25 c -4.47229,-50.97952 -4.76018,-56.5962 -3.07255,-59.94493 1.31062,-2.60067 1.44297,-3.83464 0.44687,-4.16666 -1.72108,-0.5737 -1.91106,-9.01341 -0.2029,-9.01341 0.66679,0 -0.0509,-1.86147 -1.59483,-4.13659 -2.53723,-3.73883 -3.15554,-8.07316 -6.4301,-45.07481 l -3.62294,-40.93822 -3.53223,-0.70643 c -3.13578,-0.62717 -3.53222,-1.2418 -3.53222,-5.47643 0,-5.91521 -1.08168,-6.63257 -6.55354,-4.34627 -4.2724,1.78511 -4.32794,1.90877 -5.1328,11.43028 -0.44751,5.29412 -0.81366,13.53454 -0.81366,18.31207 0,8.14552 -0.25296,8.93567 -4.0625,12.68966 -3.94578,3.88824 -4.69251,4.08791 -25.9892,6.94909 l -21.9267,2.94582 -2.72514,19.48841 c -3.28257,23.47477 -8.32144,44.51205 -15.2966,63.86342 -2.8498,7.90625 -5.46732,15.28243 -5.81674,16.39153 -0.53813,1.70818 3.11803,2.73447 23.90958,6.71144 20.7947,3.97759 24.7996,5.10188 26.2122,7.35846 1.08996,1.74119 2.41304,13.40593 3.82066,33.68458 l 2.15331,31.02101 -2.80332,2.984 c -2.1243,2.26123 -4.37263,3.07361 -9.28223,3.35399 l -6.4789,0.36999 18.20529,67.79677 18.20529,67.79679 8.75276,0.0158 8.75278,0.0158 4.65853,23.4375 4.65855,23.4375 -0.99131,21.25 -0.9913,21.25 3.40761,3.125 c 2.35657,2.16112 10.76698,19.80031 27.2675,57.18824 22.5175,51.02153 23.85988,54.49488 23.85988,61.7367 0,7.45396 -0.20049,7.92166 -7.00641,16.34522 l -7.00642,8.67171 5.75642,23.00585 c 3.16602,12.65323 5.75641,23.75662 5.75641,24.6742 0,0.91759 -3.375,3.28144 -7.5,5.25302 -4.125,1.97157 -7.5,4.10778 -7.5,4.74713 0,0.63937 1.22112,3.33518 2.71361,5.99072 2.50438,4.45593 4.20179,5.45703 22.0125,12.98263 10.61438,4.485 19.81949,8.1545 20.4558,8.1545 0.63631,0 2.208,2.452 3.49263,5.449 1.45322,3.3902 3.96958,6.4587 6.66021,8.1216 3.63291,2.2453 4.45172,3.6008 5.11989,8.4755 0.43745,3.1916 0.79536,7.4118 0.79536,9.3784 v 3.5755 h -95 -95 v -9.7661 c 0,-9.1911 0.21794,-9.975 3.70151,-13.3124 2.54024,-2.4337 3.96156,-5.2804 4.5304,-9.0737 0.77733,-5.1836 1.24939,-5.7336 7.59036,-8.8435 l 6.76148,-3.3162 -0.35438,-11.82978 -0.35437,-11.82983 -3.84855,-0.99454 c -3.75205,-0.9696 -3.93359,-1.36517 -7.23959,-15.77498 l -3.39104,-14.78045 -12.55901,-2.01703 c -6.90745,-1.10935 -12.7275,-2.20139 -12.93344,-2.42674 -0.20593,-0.22536 -4.41692,-6.82837 -9.35775,-14.67338 l -8.98331,-14.26364 1.28671,-59.77428 c 0.70769,-32.87585 1.80273,-60.76971 2.43343,-61.98636 0.79169,-1.52722 0.0636,-5.98961 -2.35161,-14.41352 -2.72347,-9.49889 -3.24557,-13.08275 -2.3572,-16.18032 0.62762,-2.18837 0.78408,-7.01667 0.34771,-10.72955 -0.79116,-6.73162 -0.82465,-6.77533 -11.85738,-15.47818 -6.08518,-4.80013 -11.06397,-9.22034 -11.06397,-9.82269 0,-2.93173 3.1576,-7.46281 5.20065,-7.46281 1.26464,0 2.29935,-0.7903 2.29935,-1.75623 0,-0.96592 -3.01628,-12.6378 -6.70283,-25.9375 -3.68656,-13.2997 -9.63938,-35.15002 -13.22851,-48.55627 l -6.52569,-24.375 h -44.30745 -44.30746 l -1.31369,5 c -4.8393,18.41861 -22.63605,83.59465 -24.18203,88.56047 -1.81688,5.83593 -1.79314,6.08498 0.6405,6.72139 3.27227,0.85571 6.80847,7.46606 5.07957,9.49542 -0.69007,0.81 -5.72365,4.84772 -11.18575,8.97272 -11.14974,8.42032 -11.46666,9.17668 -11.46666,27.36593 0,5.06613 -1.04789,12.55629 -2.43546,17.40838 -1.72899,6.04597 -2.09277,9.30816 -1.25405,11.24602 0.64978,1.50132 1.69101,29.44842 2.31385,62.10467 l 1.13245,59.375 -8.57739,13.75 -8.5774,13.75 -7.2385,2.17607 c -3.98118,1.19684 -9.9057,2.52563 -13.16561,2.95286 -6.67565,0.87492 -6.01343,-0.39546 -10.54473,20.22848 -2.1362,9.72277 -2.50547,10.4168 -6.0269,11.32674 l -3.75126,0.96932 -0.35495,11.87721 -0.35495,11.8772 6.27316,2.9382 c 6.27084,2.9371 6.69138,3.4943 8.15826,10.8094 0.43074,2.1481 2.16023,5.1992 3.84332,6.7804 2.77163,2.6038 3.06016,3.8561 3.06016,13.282 v 10.4071 h -94.375 -94.375002 v -9.3952 z m 183.750002,-2.0867 c 0,-5.007 -0.64,-7.1591 -2.8125,-9.4579 -1.54688,-1.6367 -3.39161,-5.3292 -4.09941,-8.2055 -1.11343,-4.5247 -2.12447,-5.6619 -7.5,-8.4355 l -6.21309,-3.2059 -0.34938,-15.79308 -0.34936,-15.79309 4.42351,-0.82985 c 3.11523,-0.58443 4.60455,-1.61989 5.0356,-3.50106 0.33665,-1.46917 1.8876,-8.2729 3.44655,-15.11943 l 2.83448,-12.44824 10.6043,-1.60218 c 5.83236,-0.88122 11.81774,-1.8865 13.30081,-2.23398 1.7622,-0.41287 5.40433,-5.0131 10.5115,-13.27669 l 7.81498,-12.6449 -0.86232,-57.67288 c -0.5639,-37.71458 -1.35291,-59.03562 -2.28,-61.61069 -1.19455,-3.31796 -0.87947,-5.8344 2.00174,-15.98713 2.27354,-8.01146 3.14074,-13.31821 2.58779,-15.83577 -0.4574,-2.08254 -0.44349,-7.6515 0.0309,-12.37548 l 0.86257,-8.58903 10.48007,-7.8874 c 5.76404,-4.33808 10.49159,-8.26565 10.50565,-8.72797 0.0141,-0.4623 -1.89925,-1.47581 -4.25184,-2.25223 l -4.27742,-1.41168 2.56561,-8.99776 c 1.41109,-4.94878 8.03983,-29.15729 14.73053,-53.79671 11.87591,-43.73463 12.10881,-44.85123 9.80338,-46.99907 -1.93917,-1.80661 -2.91145,-6.87266 -5.43633,-28.32603 -1.69114,-14.36928 -3.08235,-26.55493 -3.09158,-27.07924 -0.009,-0.52431 -20.07932,-0.80556 -44.60022,-0.625 l -44.58342,0.32829 -18.85403,70.2528 -18.85404,70.2528 -8.72191,0.3722 -8.7219,0.3722 -4.08299,19.375 c -4.05286,19.23201 -4.07701,19.55396 -3.27303,43.62503 l 0.80995,24.25004 -3.81322,3.24996 c -2.97228,2.53324 -8.94221,14.82798 -27.07043,55.74997 -27.86405,62.89935 -27.42013,60.89576 -16.37647,73.9134 3.78125,4.45712 6.875,8.94092 6.875,9.96398 0,1.56795 -8.77679,37.91528 -10.74783,44.50999 -0.48947,1.63768 1.42283,3.17561 8.1795,6.57821 4.85008,2.44247 8.81833,4.67359 8.81833,4.95807 0,0.28447 -2.19086,4.29367 -4.86858,8.90933 -5.3782,9.2705 -2.12343,7.285 -33.428989,20.3926 -12.176255,5.0981 -12.752197,5.5144 -14.705802,10.6299 -1.479197,3.8732 -3.220391,5.89 -6.389932,7.4015 -3.907542,1.8634 -4.356699,2.5951 -4.356699,7.0978 v 5.0202 h 89.375002 89.375 v -6.4819 z m 436.25,1.0884 c 0,-4.8722 -0.39911,-5.5838 -4.12964,-7.3627 -2.99661,-1.429 -4.58697,-3.3551 -5.79656,-7.0202 l -1.66694,-5.0508 -20.76592,-8.6401 -20.76594,-8.6401 -4.77596,-8.2975 c -2.62679,-4.56363 -4.45432,-8.81798 -4.06117,-9.45411 0.39315,-0.63612 4.31969,-2.84351 8.72567,-4.90531 l 8.01083,-3.74874 -5.48113,-21.68096 c -3.01463,-11.92453 -5.49512,-22.96159 -5.51219,-24.52679 -0.0179,-1.63815 2.88647,-6.38289 6.84395,-11.18071 10.61877,-12.87364 11.26067,-10.07548 -16.86451,-73.51544 -13.05673,-29.45114 -24.19784,-53.86487 -24.75802,-54.25277 -7.0397,-4.87458 -6.57126,-2.37882 -5.41153,-28.83172 1.04196,-23.76672 1.00095,-24.44182 -2.49984,-41.14337 -1.95755,-9.33909 -3.85833,-18.24579 -4.22395,-19.79266 -0.61091,-2.5846 -1.37189,-2.8125 -9.39096,-2.8125 -4.7994,0 -8.72619,-0.22644 -8.72619,-0.50319 0,-0.53951 -35.8765,-134.8977 -36.9983,-138.55931 -0.62178,-2.02954 -3.86676,-2.1875 -44.93713,-2.1875 h -44.26695 l -0.58472,2.8125 c -0.3216,1.54687 -1.77388,13.5 -3.22728,26.5625 -2.15877,19.40222 -3.08552,24.22207 -5.0624,26.32877 -2.40216,2.55991 -2.33756,2.88354 8.82845,44.23329 6.18659,22.90997 11.24833,42.59015 11.24833,43.73372 0,1.14357 0.47886,2.61359 1.06414,3.26672 1.08087,1.20618 5.18586,15.2247 5.18586,17.70972 0,0.74701 -1.6875,1.94648 -3.75,2.66548 -2.0625,0.71898 -3.75,1.78873 -3.75,2.37722 0,0.58848 4.03439,4.13336 8.9653,7.87753 4.93091,3.74415 9.63592,7.47462 10.45559,8.28992 1.98017,1.96966 3.48707,17.88973 2.05706,21.7324 -0.83055,2.23183 -0.14536,6.49369 2.58862,16.10124 2.85343,10.02727 3.40118,13.57357 2.35522,15.24842 -0.88085,1.41047 -1.82644,22.81157 -2.67333,60.50378 l -1.31037,58.32136 7.65876,12.39213 c 4.21231,6.81567 8.58562,12.87496 9.71845,13.46508 1.13284,0.59013 6.94565,1.78937 12.91737,2.66498 5.97172,0.87561 11.35422,1.92867 11.96109,2.34012 0.60689,0.41147 2.50365,7.21687 4.21503,15.12312 l 3.11158,14.375 4.61482,1.15796 4.61481,1.15795 v 15.41812 15.41815 l -6.77559,3.323 c -5.8534,2.8708 -6.88879,3.9264 -7.60722,7.756 -0.45739,2.4382 -2.47088,6.3 -4.4744,8.5819 -2.81529,3.2064 -3.64279,5.3695 -3.64279,9.5221 0,2.9552 0.375,5.7481 0.83334,6.2065 0.45832,0.4583 40.67707,0.8333 89.375,0.8333 h 88.54166 z M 87.191031,650.75574 c -0.02261,-0.83519 -2.187649,-3.66692 -4.811187,-6.29274 -4.048386,-4.0519 -5.454602,-4.71381 -9.2946,-4.375 l -4.524531,0.39922 6.738896,7.2833 c 5.960915,6.44246 7.038689,7.12285 9.335718,5.89351 1.428251,-0.76438 2.578318,-2.0731 2.555703,-2.90829 z m 580.167379,-1.83102 c 8.24509,-8.81663 8.32753,-9.07667 2.83929,-8.95669 -4.01484,0.0878 -5.55693,0.93917 -9.04014,4.99125 -7.41651,8.62775 -1.62362,12.3323 6.20085,3.96544 z m -560.8535,1.42876 c 4.01749,-1.54165 2.14527,-4.24126 -2.94139,-4.24126 -5.674778,0 -11.331372,1.85655 -11.331372,3.71906 0,1.37562 10.999972,1.77809 14.272762,0.5222 z m 544.47724,-0.96001 c 0,-1.85137 -5.2429,-3.28125 -12.03125,-3.28125 -4.58798,0 -5.4961,1.63178 -2.03125,3.64987 3.40619,1.98393 14.0625,1.70459 14.0625,-0.36862 z M 91.767873,641.76912 c 1.139163,-2.96862 -4.652454,-9.25835 -8.598225,-9.33774 -1.890625,-0.038 -3.4375,0.24992 -3.4375,0.63991 0,0.38999 1.828125,2.9111 4.0625,5.60246 4.288365,5.16547 6.804079,6.14212 7.973225,3.09537 z m 568.905917,-4.0944 4.38207,-5.3125 h -3.7635 c -2.83339,0 -4.58957,1.08305 -7.10607,4.38235 -3.38525,4.4383 -3.30162,7.32141 0.19218,6.62436 1.05229,-0.20994 3.88518,-2.77234 6.29532,-5.69421 z m -551.3212,1.47055 c 0.27728,-0.84403 -1.88927,-1.30784 -5.83892,-1.25 -4.283669,0.0627 -6.280054,0.61037 -6.280649,1.72293 -0.0011,2.02022 11.447279,1.57347 12.119569,-0.47293 z m 536.95931,0.40445 c 0.42787,-1.11944 -1.31479,-1.60884 -6.1456,-1.72594 -5.60386,-0.13583 -6.50088,0.12811 -5.31044,1.5625 1.78931,2.15599 10.64615,2.28234 11.45604,0.16344 z M 70.419269,630.45755 c -3.522842,-4.61868 -3.600361,-6.21251 -1.13849,-23.40783 0.619594,-4.32765 0.435177,-4.6875 -2.402301,-4.6875 -2.85034,0 -3.132193,0.56705 -3.883238,7.8125 -0.445402,4.29687 -1.139282,10.71688 -1.541956,14.2667 -0.696049,6.1361 -0.556277,6.54948 2.835865,8.38746 1.9624,1.06327 4.900387,1.95576 6.52886,1.98329 l 2.960862,0.05 -3.359602,-4.40467 z m 609.374501,2.10612 c 2.77527,-2.24728 2.81322,-2.60282 1.70099,-15.9375 -1.08654,-13.02664 -1.27094,-13.65782 -4.10725,-14.05898 -2.94957,-0.4172 -2.96361,-0.3623 -2.0782,8.125 0.49028,4.69976 1.36124,9.0359 1.93546,9.63586 1.24365,1.29938 -0.84047,6.63302 -4.00117,10.23973 -1.2438,1.41931 -2.26145,2.96619 -2.26145,3.4375 0,1.76549 6.0793,0.77089 8.81162,-1.44161 z m -572.47513,-1.27014 2.86345,-2.31868 -4.47316,-0.83917 c -2.46024,-0.46154 -5.936478,-1.99021 -7.724973,-3.39704 l -3.251809,-2.55787 v 3.125 c 0,3.14943 5.063046,8.30645 8.155092,8.30645 0.86237,0 2.8565,-1.04342 4.4314,-2.31869 z m 538.41641,0.13119 c 2.4177,-2.09053 4.94585,-7.8125 3.4518,-7.8125 -0.39256,0 -2.81276,1.125 -5.37823,2.5 -2.56545,1.375 -6.07903,2.51871 -7.80796,2.54158 l -3.14351,0.0416 2.95097,2.45841 c 3.64619,3.03758 6.63299,3.11909 9.92693,0.27091 z m -557.52231,-5.625 c 0.707688,-0.85938 1.695584,-7.36774 2.195324,-14.46303 l 0.908618,-12.90051 -4.854768,0.79726 c -10.76734,1.76824 -11.730905,2.1082 -11.807045,4.1656 -0.0425,1.14849 -0.490572,6.21455 -0.995708,11.25791 -0.836961,8.35633 -0.694552,9.32654 1.605411,10.9375 3.122282,2.18693 11.210693,2.31515 12.948168,0.20527 z m 580.76862,-0.066 c 1.97653,-1.44527 2.12661,-2.91228 1.33424,-13.04127 l -0.89281,-11.41281 -5.15782,-0.77565 c -2.8368,-0.4266 -6.69992,-1.07042 -8.5847,-1.43072 -3.37277,-0.64473 -3.41785,-0.56965 -2.85498,4.75441 0.31453,2.97521 0.86863,8.97296 1.23132,13.32832 0.36269,4.35537 0.9775,8.43349 1.36626,9.0625 1.06722,1.7268 11.02068,1.3709 13.55849,-0.48478 z m -549.09871,-6.88273 c 2.67809,-2.99704 3.44007,-5.42191 4.17786,-13.29515 0.4963,-5.29626 0.57519,-9.95675 0.1753,-10.35662 -0.77136,-0.77137 -25.980266,1.98236 -26.947476,2.94363 -0.312847,0.31093 -0.789142,4.05937 -1.058432,8.32984 -0.415764,6.5933 -0.06822,8.29876 2.30396,11.30618 3.625978,4.59695 6.921538,5.92548 13.073288,5.27026 3.53262,-0.37626 5.96127,-1.60831 8.2755,-4.19814 z m 521.82411,2.40439 c 5.36513,-3.27165 7.05958,-8.02368 5.85335,-16.41553 l -0.98497,-6.85263 -9.35899,-1.48405 c -5.14745,-0.81623 -11.2675,-1.51935 -13.60011,-1.5625 l -4.24113,-0.0785 0.67451,9.84095 c 0.76535,11.16617 2.05235,14.32892 6.90165,16.96055 4.67857,2.53896 10.17175,2.38695 14.75569,-0.40834 z m -225.3844,-3.59591 c 3.11408,-3.25039 3.49409,-5.04435 6.48386,-30.60868 2.70683,-23.1449 3.17724,-32.55877 3.18484,-63.73475 0.009,-34.0116 0.40245,-40.5705 5.61609,-93.45382 l 5.60717,-56.875 -0.0965,-71.875 -0.0965,-71.875 -2.3384,10.3574 c -3.1858,14.1108 -8.83701,25.10155 -16.75911,32.59395 -12.24084,11.57686 -24.24001,15.64273 -46.31672,15.6942 -21.8603,0.051 -36.62104,-5.01867 -47.64845,-16.36504 -6.36527,-6.54936 -13.39487,-20.47455 -15.34908,-30.40551 -0.74407,-3.78125 -1.5744,-8 -1.84517,-9.375 -0.27077,-1.375 -0.55468,30.96875 -0.63092,71.875 l -0.13862,74.375 5.17604,51.25 c 4.62151,45.75951 5.27943,56.4057 6.14122,99.375 1.15593,57.63531 3.71613,84.10187 8.64274,89.34601 l 2.96302,3.15399 h 42.04824 42.04825 l 3.30794,-3.45275 z M 92.857148,593.51427 c 15.812502,-2.1365 29.423042,-4.08428 30.245642,-4.3284 1.05303,-0.31253 0.35792,-3.8847 -2.34895,-12.07127 -2.11453,-6.39506 -4.24702,-12.07433 -4.73887,-12.62061 -1.3206,-1.46671 -46.330429,-5.10237 -47.476118,-3.83487 -1.149568,1.2718 -13.806704,33.85908 -13.806704,35.547 0,1.936 8.113276,1.36315 38.125,-2.69185 z m 596.281672,1.66045 c -0.47343,-1.20313 -3.70711,-9.64063 -7.18595,-18.75 -5.35998,-14.03519 -6.72727,-16.56017 -8.96043,-16.54715 -3.85773,0.0225 -44.92067,3.7156 -45.1839,4.06377 -1.156,1.52896 -7.87664,24.03869 -7.33899,24.58075 1.1103,1.11938 54.03244,8.50524 62.20884,8.68193 6.49972,0.14045 7.22465,-0.0872 6.46043,-2.0293 z M 133.31765,557.31293 c 2.87607,-2.3958 3.10066,-4.02486 7.87662,-57.13303 5.16457,-57.42923 5.1517,-60.31768 -0.26835,-60.31768 -4.01598,0 -2.8944,-6.50203 1.30623,-7.57249 l 3.125,-0.79635 -3.24276,-1.5525 c -4.28445,-2.05121 -3.66853,-7.57866 0.8445,-7.57866 1.67205,0 3.52072,-1.09388 4.2956,-2.54174 1.12181,-2.09613 8.65511,-75.29906 8.71088,-84.64576 0.0128,-2.12847 0.74429,-2.8125 3.00804,-2.8125 3.54289,0 4.50874,-2.03018 4.50874,-9.47724 0,-3.03751 0.26042,-5.52276 0.57872,-5.52276 0.3183,0 3.50037,1.1516 7.07125,2.55911 l 6.49254,2.55912 -0.84639,-20.99662 c -0.4655,-11.54814 -1.20527,-28.2144 -1.64393,-37.03614 l -0.79757,-16.03952 -4.27705,0.80237 -4.27705,0.80238 0.88805,-11.35193 c 1.51339,-19.34569 0.78817,-18.08552 15.58062,-27.07295 18.9754,-11.52883 19.81223,-14.83312 9.59538,-37.88751 -6.53828,-14.75368 -6.88347,-15.23448 -23.57927,-32.8431 l -16.94386,-17.87022 -10.60974,3.45447 -10.60975,3.45446 -0.81098,11.42507 c -0.44603,6.28379 -0.81958,15.97928 -0.83011,21.54554 -0.01,5.56626 -0.51439,10.90252 -1.11967,11.85837 -0.87639,1.38394 -5.13012,-0.36999 -20.88538,-8.61161 l -19.784831,-10.34952 -6.694805,3.61162 c -3.682142,1.98638 -7.259179,4.28785 -7.948969,5.11437 -0.860276,1.0308 0.391828,9.19908 3.986784,26.00836 2.88252,13.47809 4.952226,24.79433 4.599348,25.1472 -0.35288,0.35289 -8.606369,-0.0374 -18.341088,-0.86724 -10.272519,-0.87571 -18.122267,-1.04355 -18.70703,-0.39997 -0.554147,0.60989 -2.145575,4.48389 -3.536505,8.60889 -1.390929,4.125 -2.885394,8.3653 -3.321031,9.42287 -0.534676,1.29803 3.71324,7.18796 13.072032,18.125 7.720138,9.02205 13.13537,16.33584 12.219692,16.50386 -0.904425,0.16597 -8.300953,1.10375 -16.436729,2.08399 -8.135776,0.98024 -14.950636,1.96945 -15.144133,2.19826 -0.193496,0.22882 -0.723407,4.67744 -1.17758,9.88584 l -0.825767,9.46981 14.7199,12.85874 c 8.095945,7.0723 16.266775,13.41279 18.1574,14.08996 1.890625,0.67718 3.442912,2.16058 3.449529,3.29645 0.0066,1.13587 -1.756098,21.27413 -3.91714,44.75169 -2.161043,23.47756 -3.577602,44.08724 -3.14791,45.79926 0.48526,1.93343 1.969362,3.41098 3.91714,3.89984 4.571913,1.14748 4.364176,6.39605 -0.301619,7.62054 -3.427291,0.89946 -3.429148,0.906 -0.625,2.20152 1.95387,0.9027 2.8125,2.38593 2.8125,4.85838 0,3.07801 -0.480609,3.55899 -3.556265,3.55899 -1.955946,0 -4.559594,1.10866 -5.785882,2.4637 -1.529597,1.69018 -5.05376,15.72046 -11.224731,44.6875 l -8.995115,42.2238 10.910637,15 10.910637,15 36.057859,3.27186 c 19.831822,1.79952 36.620362,3.32769 37.307862,3.39591 0.6875,0.0682 2.58222,-0.9857 4.2105,-2.34206 z m 520.39511,-1.37179 34.6056,-2.79739 10.90123,-15.0408 10.90122,-15.0408 -9.06197,-42.53747 c -9.56933,-44.91904 -10.28985,-46.91246 -16.95644,-46.91246 -2.57329,0 -4.37025,-2.08153 -4.37025,-5.06232 0,-0.60931 1.48874,-1.88787 3.30831,-2.84125 l 3.30833,-1.7334 -3.30833,-0.83033 c -4.26849,-1.07133 -4.16931,-2.59704 0.51568,-7.93294 3.5024,-3.98903 3.7635,-4.8964 3.10473,-10.79003 -0.39557,-3.5391 -2.11672,-22.74723 -3.82476,-42.68473 -1.70805,-19.9375 -3.2903,-37.8057 -3.51614,-39.70712 -0.3399,-2.86182 0.17569,-3.61516 2.99424,-4.375 1.87266,-0.50483 9.96456,-6.54288 17.98203,-13.41788 l 14.57718,-12.5 -0.5893,-9.8605 c -0.32411,-5.42329 -1.205,-10.24104 -1.95752,-10.70613 -0.75253,-0.46509 -8.11289,-1.57079 -16.35634,-2.4571 -8.24346,-0.88632 -14.98811,-1.85862 -14.98811,-2.16067 0,-0.30205 6.11422,-7.6491 13.58717,-16.32678 l 13.58718,-15.77761 -3.68621,-10.10048 c -2.02743,-5.55527 -3.9034,-10.31766 -4.16883,-10.58308 -0.26542,-0.26544 -8.67787,0.22837 -18.69431,1.09735 -10.01644,0.86897 -18.41789,1.36508 -18.66989,1.10247 -0.25199,-0.26261 1.99839,-11.72747 5.00085,-25.47747 6.19948,-28.39094 6.66045,-25.46099 -5.00869,-31.83552 l -5.35342,-2.92444 -20.60764,10.76529 -20.60764,10.76529 -0.81428,-15.14406 c -0.44787,-8.32924 -0.81429,-18.69222 -0.81429,-23.02884 0,-8.93646 0.54151,-8.39104 -12.9798,-13.07339 l -8.6048,-2.97979 -17.6452,18.26705 -17.6452,18.26704 -6.64936,15.72287 c -6.63423,15.68705 -6.64553,15.73646 -4.96383,21.6907 1.62744,5.76206 2.15841,6.25957 15.39938,14.42892 l 13.71381,8.46109 1.34666,14.68389 c 0.74068,8.07615 1.2153,14.86552 1.05473,15.08752 -0.16058,0.22199 -2.31345,-0.15455 -4.78418,-0.83675 -4.15215,-1.14646 -4.49525,-1.03507 -4.53227,1.47139 -0.022,1.49145 -0.82918,18.17022 -1.79364,37.06394 -0.96445,18.89371 -1.60121,34.50455 -1.41503,34.69073 0.18619,0.1862 3.46812,-0.7382 7.29315,-2.0542 l 6.95462,-2.39273 1.06298,7.02368 c 0.9175,6.06247 1.49065,7.124 4.18798,7.75664 l 3.125,0.73295 3.76495,42.58376 c 2.59066,29.30199 4.29536,43.22287 5.46555,44.63285 0.93534,1.12702 3.03799,2.04912 4.67255,2.04912 4.04965,0 4.16691,5.52251 0.16277,7.66546 l -2.80916,1.50342 3.43416,1.14473 c 4.25577,1.41859 5.02867,7.18639 0.96299,7.18639 -1.35915,0 -3.25495,1.26562 -4.21289,2.8125 -1.51516,2.44668 -1.10005,9.88486 3.19155,57.1875 4.84687,53.42281 4.98763,54.42433 8.03828,57.19238 1.92911,1.7504 4.14162,2.60277 5.84214,2.25067 1.50541,-0.3117 18.30963,-1.82557 37.34272,-3.36413 z M 310.98114,521.42472 c -9.4e-4,-34.15563 -0.40858,-41.29125 -5,-87.52205 l -4.99899,-50.33454 v -82.99194 -82.99192 l -7.8125,-0.52437 c -4.29688,-0.2884 -30.875,0.84725 -59.0625,2.52368 -43.61576,2.594 -51.57881,3.36196 -53.45734,5.15541 -2.10926,2.01371 -2.06412,5.1323 1.0155,70.17779 3.13649,66.24636 3.29613,68.14226 5.95735,70.75057 2.28119,2.23585 6.15351,3.12432 23.35949,5.35958 11.34375,1.47369 21.80685,2.92919 23.25132,3.23445 2.33174,0.49276 2.71645,1.72744 3.42977,11.00725 2.16553,28.17291 11.79776,66.95035 22.8227,91.87969 1.66572,3.7665 2.86833,7.00843 2.67247,7.2043 -0.19586,0.19586 -12.05164,2.56413 -26.34617,5.26283 -14.29453,2.6987 -26.45533,5.40512 -27.02399,6.01425 -0.56865,0.60914 -1.97336,14.22712 -3.12158,30.26219 -1.61237,22.51733 -1.7508,29.56055 -0.60802,30.9375 1.23759,1.4912 9.93986,1.78283 53.20155,1.78283 h 51.72195 l -10e-4,-37.1875 z m 226.02012,35.5907 c 0.93754,-1.12967 0.72136,-10.31507 -0.73892,-31.39844 -1.92418,-27.78073 -2.23677,-29.87329 -4.60967,-30.85809 -2.151,-0.8927 -49.6162,-9.90104 -52.15168,-9.89777 -0.47089,6e-4 1.01458,-4.07703 3.30107,-9.0614 9.4998,-20.70892 17.9747,-53.39689 21.56274,-83.16828 1.93497,-16.05522 2.40862,-17.90925 4.69716,-18.38606 1.39985,-0.29166 11.54519,-1.72274 22.54519,-3.18018 27.78465,-3.68131 26.27454,-1.90423 27.36839,-32.20656 1.30233,-36.07822 4.41356,-98.9709 5.20988,-105.31672 0.55574,-4.42862 0.2095,-6.27975 -1.55678,-8.32313 -2.15214,-2.48975 -4.96425,-2.7869 -53.52149,-5.65554 -28.1875,-1.66525 -54.76563,-2.79175 -59.0625,-2.50335 l -7.8125,0.52437 -0.005,80.20147 -0.005,80.20148 -5.61954,56.84702 c -5.06509,51.22889 -5.62046,60.07204 -5.62046,89.47918 0,17.94767 0.375,33.00713 0.83334,33.46546 0.45832,0.45834 24.01445,0.83334 52.34693,0.83334 40.27602,0 51.80272,-0.34834 52.83884,-1.5968 z M 383.69734,282.35632 c 12.58992,-1.82108 21.42291,-5.6405 28.94641,-12.51657 11.64785,-10.64547 17.3608,-24.94906 19.12336,-47.87941 l 0.83385,-10.84812 h 8.5656 8.56559 v -21.68127 c 0,-26.23589 0.49505,-25.38176 -15.42015,-26.6051 l -10.90565,-0.83828 -5.66314,-10.96488 c -3.25809,-6.30827 -8.78664,-14.37363 -13.01801,-18.99143 -6.51936,-7.11473 -7.45168,-8.79434 -8.20696,-14.7853 -0.5176,-4.10563 -1.85697,-7.86278 -3.41198,-9.57125 -2.43535,-2.67565 -3.46371,-2.8125 -21.13599,-2.8125 -23.09091,0 -24.11157,0.46663 -25.40545,11.61466 -0.84427,7.27435 -1.35706,8.22459 -8.74367,16.20281 -4.97536,5.37385 -9.73615,12.28923 -13.00983,18.89772 l -5.16303,10.42244 -10.82583,0.83214 c -15.82352,1.2163 -15.34031,0.37843 -15.34031,26.59897 v 21.68127 h 8.75 8.75 l 0.0436,7.1875 c 0.0975,16.07358 5.02489,33.88618 12.29782,44.45701 10.70907,15.56512 34.61417,23.32561 60.37376,19.59959 z m -210.56988,-49.6816 c -0.2864,-1.89063 -0.52074,-0.34375 -0.52074,3.4375 0,3.78125 0.23434,5.32812 0.52074,3.4375 0.28641,-1.89063 0.28641,-4.98438 0,-6.875 z m 398.3181,0.625 c -0.73757,-8.31347 -2.3888,-13.17878 -3.94466,-11.62292 -0.34375,0.34375 0.0978,1.49584 0.98107,2.5602 1.13465,1.36718 1.3842,4.31133 0.85017,10.03022 -0.61914,6.63016 -0.42357,8.095 1.08077,8.095 1.52064,0 1.69834,-1.55948 1.03265,-9.0625 z" \
       id="path4147" /> \
';

svg += "</g></g></svg>";

	return svg;

}

function damageCircle( xPos, yPos, radius, filledIn, armorFunction, armorClass ) {
	if( typeof( xLoc ) == "undefined" ) {
		xLoc = 0;
	}

	if( typeof( yLoc ) == "undefined" ) {
		yLoc = 0;
	}

	if( typeof( radius ) == "undefined" ) {
		radius = 20;
	}

	if( typeof( filledIn ) == "undefined" ) {
		filledIn = false;
	}

	if( typeof( armorFunction ) == "undefined" ) {
		armorFunction = "";
	}

	if( typeof( armorClass ) == "undefined" ) {
		armorClass = "";
	}


	svgCode = "<circle class=\"" + armorClass + "\" onclick=\"" + armorFunction + "\" cx=\"" + ( xPos  )  + "\" cy=\"" + ( yPos )  + "\" r=\"" + radius + "\" fill=\"" + colorBlack + "\" />\n";
//	svgCode += "<circle class=\"" + armorClass + "\" onclick=\"" + armorFunction + "\" cx=\"150\" cy=\"" + armorTopBase + "\" r=\"" + buttonRadius + "\" fill=\"green\" />\n";
	if( armorFunction ) {
		svgCode += "<circle class=\"" + armorClass + "\" onclick=\"" + armorFunction + "\" cx=\"" + ( xPos )  + "\" cy=\"" + ( yPos )  + "\" r=\"" + (radius - 3 )+ "\" fill=\"" + colorRed + "\" />\n";
	} else {
		svgCode += "<circle class=\"" + armorClass + "\" onclick=\"" + armorFunction + "\" cx=\"" + ( xPos  )  + "\" cy=\"" + ( yPos )  + "\" r=\"" + (radius - 3 ) + "\" fill=\"" + colorWhite + "\" />\n";
	}

	return svgCode
}

function rsStructureSVG( standAlone, baseFillColor, lineColor, xLoc, yLoc, width) {

	var baseWidth = 744.09448819;
	var baseHeight = 1052.3622047;
	if( typeof( width ) == "undefined" || width == 0) {
		theWidth = 744;
		theHeight = 627;
	} else {
		theWidth = width;
		theHeight = Math.round( width / baseWidth * baseHeight );
	}

	if( typeof( xLoc ) == "undefined" ) {
		xLoc = 0;
	}

	if( typeof( yLoc ) == "undefined" ) {
		yLoc = 0;
	}

	if( typeof(standAlone) == "undefined" )
		standAlone = true;

	if( !baseFillColor )
		baseFillColor = colorTan;

	if( !lineColor )
		lineColor = colorGold;

	var svg = "";

	if( standAlone ) {
		var svg = "<!DOCTYPE HTML><svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xml:space=\"preserve\" height=\"" + theHeight  + " px\" width=\"" + theWidth  + "px\" viewBox=\"0 0 790 100\" ><g>\n";

	} else {
		var svg = '<svg \
		    viewBox="0 0 744.09448819 1052.3622047" \
		   height="' + theHeight + 'px" \
		   width="' + theWidth + 'px" \
		   x="' + xLoc + 'px" \
		   y="' + yLoc + 'px" \
		   id=\"rearArmor\" \
		   version="1.1"> \
		  <g> \"';
	  }

  svg += '<path \
       id="path5320" \
       d="m 123.52522,1037.3027 c -1.83759,-5.6069 -2.97974,-10.511 -2.53811,-10.8978 0.44162,-0.3869 12.12398,-5.5467 25.9608,-11.4661 13.83681,-5.9195 27.23203,-11.8598 29.76723,-13.2006 4.275,-2.2611 4.9638,-4.54582 9.4938,-31.4915 l 4.8844,-29.05352 -7.0245,-12.54543 c -5.8167,-10.38853 -7.2309,-14.94865 -8.2258,-26.52361 -1.1706,-13.62109 -0.8562,-15.1684 12.3079,-60.57209 12.2733,-42.33083 14.0335,-47.03838 19.2394,-51.4518 3.7651,-3.19198 5.3528,-5.87743 4.6301,-7.83092 -1.4356,-3.87995 4.6558,-26.5807 8.2391,-30.70502 5.0332,-5.79304 5.5881,-12.83119 1.4426,-18.29714 -5.5172,-7.27467 -4.4023,-24.66469 1.6873,-26.31631 4.3922,-1.19128 8.0594,-20.56883 5.1472,-27.19799 -2.5429,-5.78851 -0.6901,-18.28036 2.5218,-17.00203 1.5995,0.63657 2.1308,-1.7532 1.911,-8.59555 -0.1675,-5.2125 -0.7513,-9.94072 -1.2974,-10.50717 -0.5462,-0.56645 0.1814,-2.24801 1.6169,-3.7368 1.4354,-1.48878 2.6099,-4.77002 2.6099,-7.29163 0,-2.52162 1.2594,-5.08602 2.7988,-5.69866 1.7085,-0.67997 2.3575,-2.2907 1.6662,-4.13495 -3.4328,-9.15719 -4.5149,-23.2228 -2.6316,-34.205 3.2852,-19.15644 7.3208,-31.59071 11.598,-35.73494 2.2161,-2.14715 4.4081,-6.62963 4.8711,-9.96109 0.8397,-6.04133 0.8214,-6.05721 -6.9952,-6.05721 l -7.8371,0 1.1878,-9.28677 c 0.9727,-7.60487 0.6584,-9.49746 -1.7351,-10.45006 -3.871,-1.54064 -3.687,-4.96587 0.6644,-12.36793 2.5171,-4.28181 3.5974,-9.43827 3.6214,-17.2848 0.019,-6.15039 0.6284,-12.06674 1.3545,-13.14744 0.7261,-1.08068 11.4283,-4.32362 23.7826,-7.20651 12.3543,-2.8829 23.89,-6.54358 25.635,-8.13485 3.0229,-2.75674 3.0017,-3.08189 -0.4493,-6.89178 -2.2566,-2.49132 -3.6218,-6.5463 -3.6218,-10.75751 0,-3.71745 -0.8087,-7.27732 -1.797,-7.91085 -2.3426,-1.50161 -2.3426,-13.97817 0,-13.97817 3.1981,0 1.9539,-10.18428 -1.5192,-12.4338 -1.8238,-1.18134 -4.3548,-5.99589 -5.6245,-10.69898 -2.1579,-7.99373 -2.7031,-8.55109 -8.3643,-8.55109 -7.2279,0 -7.565,-1.60732 -1.5634,-7.45502 5.783,-5.6347 5.6852,-10.61926 -0.3362,-17.13777 l -4.8287,-5.22731 5.7272,0 c 6.4624,0 8.0384,-4.52966 2.1332,-6.1313 -1.9767,-0.53613 -3.594,-2.31132 -3.594,-3.94488 0,-1.63356 -0.8651,-2.97012 -1.9225,-2.97012 -1.0573,0 -5.4831,-2.54084 -9.8351,-5.64629 -7.7959,-5.56305 -7.9461,-5.59054 -10.1902,-1.86376 -1.8515,3.07491 -4.1746,3.78254 -12.4177,3.78254 -8.6288,0 -10.2801,-0.55555 -11.0799,-3.72752 -0.5308,-2.10532 -2.4511,-3.72751 -4.4125,-3.72751 -2.9709,0 -3.8127,-2.26747 -5.8265,-15.69332 -1.2946,-8.63131 -1.8682,-19.94577 -1.2747,-25.14323 1.3043,-11.42149 -0.7774,-13.21239 -15.3574,-13.21239 -15.0276,0 -17.338,3.58698 -18.607,28.88822 -1.4552,29.01296 -4.6982,69.29498 -6.0053,74.59176 -0.9644,3.90846 -0.6437,6.35569 1.0477,7.99443 4.8818,4.72966 1.8547,20.85231 -3.915,20.85231 -2.9765,0 -3.4252,2.11836 -1.0067,4.75258 0.9699,1.05645 0.8979,9.66335 -0.1785,21.34001 -1.6166,17.53609 -2.2775,19.96906 -6.36055,23.41533 -3.68151,3.10731 -4.20621,4.53895 -2.73225,7.45503 2.9827,5.90082 -3.28279,69.33622 -7.49716,75.90605 -2.7432,4.27643 -2.97174,6.0325 -1.28483,9.87243 4.35725,9.91843 2.55384,22.64539 -5.40371,38.135 l -7.45558,14.51255 5.9917,8.0737 c 3.29543,4.44053 6.73833,9.10816 7.65089,10.37251 3.46224,4.79687 -7.38986,6.47801 -27.47568,4.25634 -29.652027,-3.27976 -28.147997,-2.60969 -34.319867,-15.29037 -5.37526,-11.04397 -5.45076,-11.59738 -5.06771,-37.14447 0.21387,-14.2634 -0.13756,-26.47941 -0.78093,-27.14671 -2.05901,-2.13551 -1.25059,-13.29971 1.0199,-14.08467 1.69375,-0.58556 1.62791,-2.52241 -0.29068,-8.55181 -2.11564,-6.64862 -2.10088,-12.34258 0.10038,-38.72285 1.92083,-23.01961 2.06476,-31.71456 0.56292,-34.00396 -1.1098,-1.69175 -3.65183,-8.1557 -5.64896,-14.36432 l -3.63114,-11.28842 5.15589,-3.06901 c 4.16439,-2.47889 5.15581,-4.35128 5.15581,-9.73735 0,-4.20812 0.99448,-7.06412 2.69549,-7.74111 3.39401,-1.3508 3.52726,-4.40151 0.19225,-4.40151 -5.3636,0 -6.50482,-14.86907 -1.54,-20.06479 1.98557,-2.07792 3.20556,-6.37161 3.30976,-11.64848 0.0908,-4.59662 0.28704,-12.97029 0.43618,-18.60816 0.14913,-5.63786 -0.21996,-13.43317 -0.82023,-17.32289 -0.79041,-5.12186 -0.29172,-7.98869 1.80831,-10.39542 2.38979,-2.73881 2.92489,-8.37768 3.04299,-32.06666 0.0788,-15.8089 -0.42674,-35.96454 -1.12345,-44.79028 l -1.26674,-16.04682 4.71917,-1.22844 c 4.779967,-1.24427 6.599507,-7.18718 2.922177,-9.54433 -2.818487,-1.80665 -2.119977,-7.77539 1.79699,-15.35515 1.97669,-3.8251 3.59398,-8.87538 3.59398,-11.22284 0,-3.49004 2.375,-5.38978 13.02817,-10.42111 l 13.02817,-6.15301 25.88008,2.38294 c 14.23406,1.31062 26.62876,3.15941 27.54376,4.10844 2.2396,2.32282 4.8826,14.59712 4.9354,22.92028 0.058,9.13565 3.2639,11.5107 13.4081,9.93296 7.96,-1.23803 8.2039,-1.47239 8.3778,-8.05261 0.3339,-12.63336 2.1121,-15.82987 10.6783,-19.19485 9.7508,-3.83031 43.0497,-4.58065 45.1727,-1.0179 1.0177,1.70787 1.8398,1.68648 3.555,-0.0925 1.2272,-1.27277 3.68,-2.31412 5.4506,-2.31412 1.7707,0 4.2294,-1.67738 5.4638,-3.72751 1.9892,-3.30342 4.1907,-3.72752 19.3499,-3.72752 15.1592,0 17.3607,0.4241 19.3498,3.72752 1.2689,2.10725 4.1906,3.72751 6.7217,3.72751 4.1504,0 4.4773,-0.65375 4.4773,-8.95318 0,-7.77327 0.823,-9.7805 6.245,-15.23095 7.3856,-7.42445 12.9795,-23.648 9.289,-26.94064 -6.1592,-5.49524 -6.8853,-8.11442 -3.6634,-13.21439 2.49,-3.94137 4.2045,-4.78425 8.425,-4.1418 4.3939,0.66884 6.5658,-0.56351 12.7177,-7.21584 14.4752,-15.652686 17.1299,-19.750265 19.294,-29.779762 l 2.1743,-10.076356 14.0824,0 14.0824,0 2.9964,11.177987 c 2.4235,9.04062 4.1148,11.86239 8.8455,14.75728 3.2171,1.968611 8.5434,7.631821 11.8363,12.584911 4.9063,7.37983 6.8309,8.90399 10.661,8.4427 3.4305,-0.41318 5.5101,0.76092 7.8179,4.41397 3.0218,4.7832 3.0042,5.17329 -0.4529,10.02295 -3.1689,4.44543 -3.3683,6.083 -1.675,13.75766 1.0572,4.79138 2.8347,8.7116 3.9501,8.7116 1.1155,0 5.0224,3.18045 8.6822,7.06767 5.767,6.12532 6.6542,8.23754 6.6542,15.84193 0,7.86761 0.4195,8.77426 4.0602,8.77426 2.2331,0 5.0702,-1.67738 6.3047,-3.72751 1.9881,-3.30182 4.1906,-3.72752 19.2854,-3.72752 15.0948,0 17.2973,0.4257 19.2854,3.72752 1.2345,2.05013 4.0042,3.72751 6.1549,3.72751 2.1508,0 4.2507,1.04836 4.6665,2.3297 0.5876,1.81073 1.3341,1.83519 3.3511,0.10977 1.6092,-1.37658 9.3244,-2.23898 20.3088,-2.27011 14.0644,-0.0398 19.5133,0.75274 26.449,3.84725 8.6407,3.85524 8.7355,3.99078 8.7627,12.52076 0.034,10.60356 1.1178,12.38391 8.4387,13.86052 8.6217,1.73898 11.3007,-2.11665 11.3007,-16.26399 0,-16.80542 1.0658,-17.4736 32.562,-20.41428 l 25.8401,-2.41258 13.0282,6.61893 c 12.0757,6.13505 13.0282,7.04926 13.0282,12.50518 0,3.23743 1.3094,7.01337 2.9099,8.39096 2.3259,2.00209 2.6926,4.66037 1.8273,13.24689 -1.0438,10.35705 -0.9183,10.78493 3.4985,11.93468 4.5089,1.1737 4.5605,1.38725 3.2755,13.53985 -0.718,6.79104 -1.3285,27.23555 -1.3566,45.43227 -0.046,29.86519 0.2668,33.326 3.2157,35.56234 2.6315,1.99575 3.0239,3.8976 2.0179,9.7815 -2.9859,17.4644 -1.3906,43.24523 2.9821,48.19218 4.72,5.34 3.6208,19.68395 -1.5085,19.68395 -3.0962,0 -3.0893,0.23786 0.1985,6.77604 1.4764,2.93611 2.6894,6.73614 2.6955,8.4445 0.01,1.70837 2.2197,4.7748 4.9191,6.81425 l 4.9081,3.70813 -3.3408,9.95956 c -1.8375,5.47777 -4.4613,11.83428 -5.8307,14.1256 -2.1292,3.56264 -2.0787,8.6523 0.3491,35.1418 2.5808,28.15941 2.5824,31.64079 0.018,38.29015 -2.5002,6.48073 -2.5138,7.43699 -0.1193,8.38995 3.0647,1.21975 3.7809,12.81172 0.9054,14.65492 -1.0635,0.68174 -1.797,12.12001 -1.797,28.02505 0,25.48512 -0.2531,27.40846 -4.9002,37.23577 -5.5525,11.7421 -4.0142,11.09405 -33.1832,13.97924 -15.3035,1.5137 -22.0163,1.52092 -24.7086,0.0265 -2.0331,-1.1285 -3.6965,-2.29018 -3.6965,-2.58152 0,-0.29133 3.213,-4.99616 7.1401,-10.45518 l 7.1401,-9.92549 -8.0386,-15.29494 c -8.7949,-16.73392 -10.2369,-26.53501 -5.3469,-36.3426 2.4603,-4.93437 2.3929,-5.92829 -0.7831,-11.55592 -4.5221,-8.01295 -10.2854,-68.39799 -7.1145,-74.543 1.6793,-3.2544 1.2469,-4.46258 -2.7929,-7.80348 -4.3711,-3.61486 -4.9411,-5.66956 -6.6658,-24.02704 -1.4568,-15.50747 -1.3841,-20.70123 0.3199,-22.83071 1.7893,-2.236 1.6672,-2.75657 -0.6465,-2.75657 -6.0736,0 -9.0678,-15.78352 -3.9927,-21.04714 1.419,-1.4717 1.9191,-3.41865 1.1115,-4.32658 -1.9117,-2.149 -5.9068,-51.42854 -5.7181,-70.53195 0.151,-15.27455 -3.4643,-32.28752 -7.4138,-34.88867 -2.6171,-1.72366 -17.7668,-2.03015 -21.7615,-0.44026 -2.2767,0.90609 -2.5655,3.71755 -1.6954,16.50448 0.7202,10.58474 0.408,15.82305 -0.9969,16.72357 -1.1259,0.72121 -2.0464,4.12857 -2.0464,7.57197 0,8.60763 -1.5947,12.15686 -5.4622,12.15686 -1.8043,0 -3.7939,1.67738 -4.4213,3.72751 -1.6303,5.32757 -19.2874,5.4661 -22.8577,0.1793 -2.3054,-3.41364 -2.7862,-3.29712 -12.6809,3.07342 -5.6565,3.64193 -10.2846,7.75469 -10.2846,9.13949 0,1.38481 -1.2129,2.51785 -2.6955,2.51785 -1.4825,0 -2.6954,1.25803 -2.6954,2.79563 0,1.89048 1.8239,2.79564 5.6333,2.79564 l 5.6333,0 -4.7348,3.86278 c -6.4255,5.2421 -6.4593,14.31622 -0.076,20.50712 l 4.6585,4.51832 -6.7643,0.93188 c -6.165,0.84932 -7.0009,1.67496 -9.435,9.31879 -1.4689,4.61279 -4.1602,9.48283 -5.9807,10.82227 -3.9899,2.93568 -4.3543,9.3804 -0.6145,10.86882 1.6357,0.65101 2.6955,3.46936 2.6955,7.16832 0,3.35256 -1.213,7.13962 -2.6955,8.41572 -1.4825,1.2761 -2.6955,5.29654 -2.6955,8.93429 0,3.66446 -1.3918,8.2092 -3.1208,10.1908 -2.9146,3.34024 -2.9217,3.72775 -0.1066,5.86261 1.6578,1.25727 12.9681,4.68465 25.134,7.61637 12.7906,3.08228 22.9929,6.54844 24.1901,8.21835 1.1387,1.58833 2.3708,9.05829 2.738,16.59989 0.5144,10.56408 1.3798,14.12535 3.7698,15.51258 4.1452,2.40593 3.9241,6.64273 -0.4959,9.50565 -3.0817,1.99602 -3.4354,3.60361 -2.464,11.19834 l 1.1342,8.86774 -9.2164,0 c -8.931,0 -9.2165,0.16419 -9.2165,5.3024 0,2.91674 1.6001,6.80426 3.5563,8.64042 8.9417,8.39277 16.5594,46.2778 12.6985,63.15278 -1.8655,8.15324 -1.7692,10.39637 0.6503,15.16035 1.5618,3.0752 2.8446,7.05898 2.8507,8.85285 0,1.79386 0.6176,3.26224 1.3588,3.26306 1.7105,0.002 1.6501,16.14817 -0.067,17.92908 -2.2632,2.34731 -1.3657,4.86716 1.3488,3.78684 3.5433,-1.41022 5.717,10.50642 3.0315,16.61939 -2.8342,6.45143 0.4763,23.22387 5.3388,27.04889 5.8034,4.56522 6.7955,19.01947 1.7875,26.04479 -4.3718,6.13284 -3.7667,13.14491 1.6795,19.46304 3.7822,4.38779 9.5768,26.21857 8.0527,30.33799 -0.6608,1.78602 1.0172,4.66017 4.4898,7.69016 4.9126,4.28647 7.0809,10.04574 19.0129,50.50029 13.2687,44.98697 13.4508,45.88122 12.3191,60.48802 -0.9581,12.36437 -2.2928,17.00605 -8.039,27.95635 l -6.8902,13.13037 4.3151,25.16072 c 2.3734,13.83839 4.7209,26.92444 5.2168,29.0801 0.6873,2.98786 6.3546,6.2817 23.8453,13.859 12.619,5.4667 26.3123,11.4689 30.4295,13.3381 l 7.486,3.3986 -2.873,7.9032 c -1.5801,4.3468 -3.6327,8.9515 -4.5612,10.2329 -1.2992,1.7929 -17.5795,2.3297 -70.6523,2.3297 l -68.9641,0 0,-4.7337 c 0,-7.5079 6.5119,-18.7578 13.4216,-23.1869 3.4899,-2.237 6.3453,-4.7209 6.3453,-5.5196 0,-4.7607 -7.8529,-40.34625 -9.0811,-41.15082 -0.8165,-0.5349 -1.7354,-5.56695 -2.042,-11.1823 l -0.5573,-10.20975 -7.3329,-1.59627 c -7.255,-1.57931 -7.4307,-1.81713 -16.5318,-22.36532 l -9.1989,-20.76904 -1.8967,-44.73016 c -1.7019,-40.13458 -1.5906,-45.61609 1.0834,-53.35327 2.9098,-8.41926 2.8534,-9.19034 -2.3831,-32.61574 -4.5139,-20.19222 -6.0192,-24.33494 -9.5031,-26.15377 -2.2768,-1.18863 -4.8266,-3.28535 -5.6663,-4.65939 -2.1883,-3.58072 -1.9385,-17.89156 0.3377,-19.35058 1.0557,-0.67673 1.5418,-2.25131 1.0801,-3.49907 -0.4616,-1.24777 -0.2254,-5.75117 0.5251,-10.00752 1.2072,-6.84692 0.7029,-8.76545 -4.3756,-16.64631 -3.4587,-5.36723 -8.7704,-19.10733 -13.3645,-34.5709 -7.0809,-23.83411 -7.4798,-26.29185 -5.596,-34.4795 1.1156,-4.84884 2.0001,-9.65476 1.9656,-10.67983 -0.063,-1.87641 -9.5944,-55.88204 -12.0058,-68.02711 l -1.2952,-6.52315 -1.2854,5.59127 c -0.7069,3.0752 -1.4033,10.20407 -1.5475,15.84193 -0.2187,8.55112 -1.5437,12.4137 -7.9915,23.29696 l -7.7293,13.04629 -37.5951,0.4885 -37.5951,0.48847 -8.3423,-15.39853 c -7.1216,-13.14515 -8.507,-17.40901 -9.4671,-29.13709 -1.1943,-14.58908 -3.5938,-22.18933 -5.3714,-17.01344 -0.5281,1.5376 -3.8062,19.92887 -7.2848,40.8695 -5.3877,32.43323 -6.0196,39.12985 -4.2656,45.2016 1.5532,5.37671 1.5473,8.29256 -0.024,11.86932 -1.1457,2.60788 -2.0831,6.62252 -2.0831,8.92144 0,7.41999 -10.8461,40.42718 -16.3115,49.63965 -4.4317,7.47002 -5.1849,10.43922 -4.5692,18.01152 0.4055,4.98685 1.6406,11.45515 2.7447,14.37398 2.8617,7.56564 -0.442,19.37187 -6.1795,22.08318 -2.402,1.13507 -4.7267,3.40417 -5.1661,5.04249 -0.4394,1.6383 -2.9748,12.89975 -5.6343,25.02543 -4.7141,21.49392 -4.757,22.2269 -1.7105,29.2339 2.8865,6.63886 2.9664,10.71563 1.0471,53.43545 l -2.0777,46.24824 -9.173,19.87894 c -9.0575,19.62888 -9.2715,19.90468 -17.0112,21.92598 l -7.8382,2.04704 0,9.85107 c 0,5.41809 -0.7316,10.64783 -1.6257,11.62164 -0.8942,0.97382 -3.3353,10.56132 -5.4248,21.30554 l -3.7991,19.53493 4.077,3.2653 c 2.2424,1.7959 5.2901,3.6932 6.7726,4.2163 3.1048,1.0955 8.9849,14.8579 8.9849,21.0293 l 0,4.1739 -69.7907,0 -69.79066,0 -3.34105,-10.1945 z m 132.98472,-2.9606 c -1.5631,-3.135 -6.2858,-7.8574 -10.4949,-10.4943 l -7.6529,-4.7943 4.1578,-21.30908 c 2.2868,-11.72001 5.1215,-23.14236 6.2994,-25.383 1.1779,-2.24065 2.1894,-9.06342 2.2478,-15.1617 l 0.1062,-11.08779 8.0864,-1.95851 c 7.9772,-1.93204 8.2006,-2.19927 16.5297,-19.77047 l 8.4433,-17.81196 2.0523,-44.41112 c 1.9056,-41.2367 1.8244,-44.93515 -1.1353,-51.74258 -2.639,-6.06962 -2.8697,-8.83287 -1.3406,-16.0547 10.3773,-49.0103 10.273,-48.66379 15.1944,-50.44893 7.1889,-2.60756 8.3745,-10.6075 2.5125,-16.95335 -3.9466,-4.27243 -4.267,-5.38146 -2.0951,-7.251 1.93,-1.6612 2.1905,-3.92216 1.0536,-9.14118 -1.3484,-6.19012 -0.7776,-8.13385 5.3208,-18.11661 4.4111,-7.22075 9.2849,-19.66064 13.7566,-35.11282 l 6.9253,-23.93028 -3.1125,-9.08929 c -2.2349,-6.52614 -2.6022,-10.02656 -1.3026,-12.41297 1.7521,-3.21727 9.4491,-45.37847 11.9201,-65.2936 l 1.2141,-9.78472 -36.0502,0 c -39.6956,0 -36.103,-1.10978 -38.9477,12.03107 -0.6558,3.02937 -2.6877,6.59425 -4.5154,7.92197 -7.8782,5.72317 -14.2517,42.70808 -9.9277,57.60958 1.4055,4.84358 2.2128,9.38148 1.7941,10.08421 -0.4188,0.70274 -1.2025,4.96268 -1.7416,9.46656 -0.5391,4.50388 -2.1805,14.78136 -3.6475,22.83886 -1.4671,8.05751 -2.6674,14.95037 -2.6674,15.31749 0,0.36712 -1.343,0.13307 -2.9844,-0.52025 -2.4886,-0.99044 -2.737,-0.43893 -1.4957,3.32008 0.8187,2.4793 1.3108,10.51172 1.0934,17.84985 -0.2523,8.51657 0.3581,13.82488 1.6876,14.67708 2.7317,1.75098 -1.3083,4.52854 -6.6444,4.56809 -6.8662,0.0509 -8.3898,12.14826 -2.2551,17.9063 3.1328,2.94054 3.595,4.92477 2.7089,11.6301 -0.5877,4.44657 -2.7757,10.57127 -4.8622,13.61046 -5.0921,7.41691 -9.0058,23.19458 -7.0302,28.34179 1.2719,3.31367 0.3242,5.17088 -5.3808,10.54518 -6.5941,6.21195 -7.536,8.64956 -19.7436,51.09722 -12.0774,41.99468 -12.7471,45.2723 -11.5734,56.64006 0.9449,9.15082 2.9635,15.15585 8.3551,24.85489 l 7.1092,12.78888 -4.7811,30.28202 c -2.6296,16.65513 -5.1276,31.57537 -5.5511,33.15607 -0.4483,1.6735 -12.4551,7.8664 -28.74128,14.8244 -15.38423,6.5727 -28.37362,12.6254 -28.86529,13.4505 -0.49167,0.8251 -0.38294,3.1701 0.24163,5.211 1.10566,3.6134 2.80917,3.7108 64.85364,3.7108 l 63.7181,0 -2.842,-5.7 z m 415.1535,1.9892 c 0.6246,-2.0409 0.7413,-4.3726 0.2593,-5.1815 -0.482,-0.8088 -13.4174,-6.8969 -28.7452,-13.5289 l -27.8689,-12.0583 -2.0243,-12.11438 c -1.1134,-6.66293 -3.6854,-21.45158 -5.7156,-32.86368 l -3.6913,-20.74928 7.243,-12.86249 c 5.8535,-10.39497 7.469,-15.35303 8.421,-25.84466 1.1242,-12.39016 0.5949,-14.97934 -11.6071,-56.78042 -12.1242,-41.53418 -13.1434,-44.13549 -19.7168,-50.32143 -5.6714,-5.33706 -6.6599,-7.25447 -5.4364,-10.54518 1.9182,-5.15934 -2.2878,-22.0291 -7.216,-28.94257 -2.0291,-2.84654 -4.1627,-8.75725 -4.7412,-13.13494 -0.8681,-6.56881 -0.392,-8.57881 2.7254,-11.50484 3.7414,-3.51165 4.9483,-11.22947 2.4021,-15.36017 -0.7261,-1.178 -3.3419,-2.43643 -5.8127,-2.79655 -3.3527,-0.48862 -4.3362,-1.60024 -3.8763,-4.38133 0.3389,-2.04965 0.4113,-7.08138 0.1608,-11.18165 -0.7069,-11.57512 -0.4632,-16.39925 1.0755,-21.28162 1.1694,-3.71057 0.9045,-4.30241 -1.4976,-3.34638 -2.2761,0.9059 -3.1543,-0.35769 -3.9911,-5.74285 -0.5901,-3.79734 -1.896,-10.81249 -2.902,-15.58918 -1.006,-4.7767 -1.6416,-10.22819 -1.4125,-12.11442 0.2291,-1.88623 -0.048,-4.68755 -0.6157,-6.22515 -2.4363,-6.59778 -2.4418,-8.78139 -0.04,-15.84194 4.7081,-13.84018 -1.6008,-50.07815 -10.412,-59.80573 -2.1984,-2.42704 -4.4923,-7.57613 -5.0976,-11.44242 l -1.1005,-7.02963 -36.3597,-0.50453 c -27.8449,-0.38638 -36.3598,0.0325 -36.3598,1.7887 0,5.27931 11.007,68.02945 12.6238,71.9677 1.2724,3.09914 0.9415,6.89591 -1.1898,13.65403 l -2.9521,9.36114 6.7292,22.68923 c 3.7742,12.72551 9.7831,28.02413 13.6836,34.83775 5.8592,10.23549 6.7833,13.24122 5.8685,19.08774 -0.7177,4.58722 -0.2539,7.97876 1.3685,10.00623 2.1254,2.65613 1.9159,3.43775 -1.5643,5.83437 -2.8605,1.96983 -4.0186,4.60971 -4.0186,9.16013 0,5.3043 0.8447,6.69817 4.961,8.18642 4.6471,1.68019 5.3295,3.41296 10.788,27.39346 6.6587,29.25322 6.7995,31.08736 3.0929,40.28817 -2.3674,5.87641 -2.4642,12.50571 -0.7438,50.8852 l 1.9781,44.12852 8.3811,17.83548 c 8.2816,17.62396 8.4769,17.85853 16.4674,19.78063 l 8.0865,1.94516 1.0914,10.16926 c 0.9752,9.08626 9.3446,52.4391 11.4988,59.5626 0.5454,1.8036 -2.0438,4.696 -7.2778,8.1304 -4.4684,2.9319 -9.3319,7.7527 -10.8078,10.7127 l -2.6834,5.3819 63.7182,0 c 62.0445,0 63.748,-0.097 64.8537,-3.7108 z M 140.65845,623.29478 c 0,-0.62129 -2.45598,-4.34574 -5.45772,-8.27657 l -5.45771,-7.14697 8.1532,-15.63951 c 8.91265,-17.0963 10.37102,-26.91203 5.46142,-36.75887 -2.4941,-5.00229 -2.39513,-5.91782 1.34775,-12.46775 3.30155,-5.77761 4.54444,-12.63407 6.80344,-37.53149 2.61864,-28.86125 2.59503,-30.7505 -0.44925,-35.94242 -3.32745,-5.67484 -4.64847,-12.44106 -1.41619,-7.25363 1.52701,2.45067 1.74534,2.43203 1.76948,-0.15096 0.0144,-1.62065 1.94613,-4.01161 4.29113,-5.31324 3.34501,-1.85671 4.50315,-4.43429 5.37535,-11.96342 1.61472,-13.93888 1.38976,-26.29356 -0.51579,-28.32757 -0.91231,-0.97381 -1.22236,-4.07697 -0.68902,-6.8959 0.73344,-3.87633 2.01348,-5.12533 5.2527,-5.12533 5.9841,0 5.9107,-6.96029 -0.09,-8.52231 -4.59428,-1.19593 -4.60337,-2.00046 -0.1461,-12.91089 2.0024,-4.9012 4.8169,-34.93649 7.1607,-76.41402 1.2259,-21.69383 2.7417,-28.63458 6.5259,-29.88025 1.8762,-0.61762 3.4113,-2.80032 3.4113,-4.85045 0,-3.0547 0.7298,-3.46456 4.0432,-2.27073 2.2238,0.80123 6.8735,1.48678 10.3327,1.52342 l 6.2894,0.0665 0.5063,-21.89915 0.5063,-21.89914 -8.8738,0 c -7.8121,0 -8.7676,-0.42077 -7.9869,-3.51717 0.4878,-1.93444 0.01,-4.08067 -1.0667,-4.76938 -1.0745,-0.68872 -1.9659,-6.02519 -1.9811,-11.85882 -0.014,-5.83364 -0.7587,-11.80504 -1.6525,-13.26979 -1.1503,-1.8852 -8.3601,-3.26308 -24.68104,-4.71681 -22.82559,-2.03311 -23.15839,-2.00649 -33.28979,2.66317 -8.32746,3.83821 -10.46341,5.75322 -11.46684,10.28075 -0.67823,3.06017 -2.39753,7.40705 -3.82068,9.65975 -1.94504,3.0788 -2.10962,5.02197 -0.66283,7.82577 1.05861,2.05154 1.92473,7.13992 1.92473,11.30758 0,6.8564 -0.431,7.57755 -4.52875,7.57755 l -4.52874,0 1.17786,18.17163 c 0.64782,9.99439 1.80657,19.01032 2.57501,20.03538 0.76844,1.02507 0.69427,5.63787 -0.16483,10.25066 -0.8591,4.6128 -1.59721,14.55033 -1.64026,22.08341 -0.0496,8.67283 -1.15768,16.05575 -3.021187,20.12871 -2.15229,4.70414 -2.46964,7.53373 -1.18124,10.53233 1.09661,2.55221 1.1946,10.05051 0.25958,19.86146 -0.96046,10.07789 -0.85851,16.42884 0.28274,17.6125 0.981677,1.01815 1.784867,4.19951 1.784867,7.06969 0,4.32392 -0.77013,5.21852 -4.492467,5.21852 -5.59196,0 -6.29997,6.60884 -0.89849,8.3869 4.365347,1.437 4.947457,10.49297 0.89849,13.97818 -1.48251,1.2761 -2.69548,5.08295 -2.69548,8.45967 0,4.44886 -1.2742,7.10216 -4.62723,9.63543 l -4.62723,3.49594 3.109,8.30798 c 1.70994,4.56939 4.19652,9.63206 5.52572,11.25038 1.3292,1.61832 2.41673,3.92472 2.41673,5.12533 0,1.20061 0.80864,2.18294 1.79699,2.18294 2.787297,0 2.11799,6.85585 -0.98333,10.0724 -4.31688,4.47728 -7.51721,45.25005 -4.36817,55.65127 2.37004,7.82817 2.4619,14.48823 0.22458,16.28163 -0.6394,0.51253 -0.75822,14.77027 -0.26405,31.68386 0.7827,26.78867 1.39512,31.71279 4.75188,38.20701 l 3.853387,7.45503 16.81198,2.06886 c 22.11158,2.72105 23.10145,2.78365 23.10145,1.46091 z m 550.72009,-2.22591 c 10.1506,-1.23494 10.943,-1.70409 14.7956,-8.75937 3.746,-6.86014 4.0729,-9.78277 4.1001,-36.65341 0.022,-21.57041 0.6164,-29.45462 2.2758,-30.17787 1.6086,-0.70109 1.3535,-1.56509 -0.8985,-3.04355 -3.8782,-2.5461 -3.9758,-6.81617 -0.3607,-15.78973 2.3643,-5.86873 2.5006,-10.04764 0.9046,-27.71803 -1.0336,-11.44406 -1.8821,-22.27512 -1.8855,-24.06898 0,-1.79387 -1.2191,-3.26158 -2.7016,-3.26158 -1.797,0 -2.6955,-1.86375 -2.6955,-5.59127 0,-3.0752 0.6112,-5.59127 1.3583,-5.59127 1.7758,0 9.1408,-16.70475 10.5213,-23.86369 0.8818,-4.57265 0.3927,-5.80616 -2.7062,-6.82627 -2.8569,-0.94043 -3.7824,-2.77791 -3.7824,-7.50952 0,-3.44543 -1.1144,-7.42021 -2.4764,-8.83283 -1.362,-1.41261 -3.0219,-5.14462 -3.6888,-8.2933 -1.0762,-5.08237 -0.684,-5.86243 3.4943,-6.9501 5.6962,-1.48279 5.4756,-7.32654 -0.309,-8.18583 -4.4357,-0.65891 -6.7935,-7.38092 -3.8702,-11.03411 1.3079,-1.63442 1.625,-8.23385 0.9303,-19.35626 -0.6886,-11.02222 -0.3368,-18.50936 1.0139,-21.5841 1.7227,-3.92127 1.5499,-5.10087 -1.0343,-7.06067 -2.4461,-1.85507 -3.2512,-5.98147 -3.8053,-19.50293 -0.3866,-9.43253 -1.1823,-17.64722 -1.7682,-18.2549 -1.5955,-1.65483 -1.2838,-11.83234 0.5676,-18.52734 0.898,-3.2476 1.8996,-12.46766 2.2257,-20.48902 0.5569,-13.69933 0.36,-14.61891 -3.245,-15.15474 -2.9341,-0.43611 -4.0376,-2.19159 -4.6863,-7.45502 -0.4666,-3.78652 -0.1455,-7.68134 0.7137,-8.65515 2.3521,-2.66604 1.777,-8.96055 -1.1905,-13.02977 -1.4511,-1.98979 -2.6384,-5.54215 -2.6384,-7.89413 0,-3.35383 -2.229,-5.41071 -10.3327,-9.53466 l -10.3327,-5.25832 -22.4866,2.05345 c -12.3676,1.12939 -23.4865,2.69437 -24.7086,3.47772 -1.389,0.89039 -2.2219,5.88286 -2.2219,13.31871 0,6.54193 -0.8087,12.41277 -1.797,13.04629 -0.9884,0.63353 -1.797,2.77975 -1.797,4.76939 0,3.04493 -1.28,3.61752 -8.0865,3.61752 l -8.0864,0 0,22.61048 0,22.61048 6.7387,-0.99364 c 3.7063,-0.54649 8.1538,-1.58535 9.8834,-2.30856 2.1989,-0.91943 3.1448,-0.43383 3.1448,1.61455 0,1.6112 1.5119,3.7687 3.3599,4.79446 4.805,2.66709 9.1022,22.37074 8.9936,41.23735 -0.1409,24.47904 3.768,63.74022 6.6843,67.13719 3.7062,4.31708 3.1419,10.434 -1.068,11.57581 -5.5274,1.49917 -4.7823,8.77876 0.8985,8.77876 3.8844,0 4.4925,0.83249 4.4925,6.1504 0,3.38272 -0.7967,6.97673 -1.7705,7.98668 -1.0749,1.11481 -1.3104,8.02469 -0.5994,17.58691 1.0571,14.21758 1.6667,16.2017 6.263,20.38471 5.3104,4.833 6.2922,9.17785 3.3585,14.86326 -1.142,2.21308 -0.8182,13.72157 0.9491,33.73075 2.1308,24.12486 3.4796,31.84239 6.5578,37.52286 3.7285,6.88041 3.7606,7.4007 0.8479,13.73576 -4.7069,10.23717 -3.7347,16.65306 5.059,33.38463 4.4475,8.4623 8.0864,16.40524 8.0864,17.65099 0,1.24573 -2.0216,5.01393 -4.4924,8.37377 -2.4709,3.35983 -4.4925,6.68753 -4.4925,7.39486 0,0.70735 3.8411,0.79581 8.5357,0.19655 4.6946,-0.59925 13.3619,-1.67673 19.2607,-2.39437 z m -248.1235,-39.92576 c 4.1583,-7.65302 5.6302,-12.02778 4.3276,-12.86272 -3.143,-2.01465 -0.6296,-31.68332 2.9116,-34.36889 2.4117,-1.82897 2.8402,-7.35332 2.8402,-36.61238 0,-30.32287 0.8627,-40.67714 7.188,-86.27486 l 7.1879,-51.81646 0,-93.62378 0,-93.62379 -4.3522,-2.95761 -4.3521,-2.95761 -0.091,14.49698 c -0.1842,29.23188 -10.3936,49.21266 -30.3351,59.369 -9.0995,4.63443 -12.1526,5.21645 -26.4593,5.04411 -20.3042,-0.24458 -31.9897,-4.95631 -42.237,-17.0305 -9.0241,-10.63275 -13.9618,-24.42873 -15.4739,-43.23386 -2.8178,-35.04203 -4.2853,-6.72765 -4.2853,82.67872 l 0,95.61793 6.2895,45.24124 c 5.6304,40.50068 6.2894,49.41322 6.2894,85.05646 l 0,39.81523 4.4925,0 c 4.4739,0 4.4925,0.0725 4.4925,17.55038 0,11.88272 -0.6886,17.78842 -2.1322,18.2875 -1.3687,0.47319 0.2864,4.86625 4.6226,12.26973 l 6.7547,11.53261 33.0102,0 33.0101,0 6.3015,-11.59743 z m -99.8036,-52.7872 c 0.3475,-0.33235 0.6405,-16.80363 0.6511,-36.60286 0.014,-26.31399 -0.9845,-43.51967 -3.7118,-63.95498 -2.052,-15.37599 -4.0922,-31.73046 -4.5336,-36.34325 -0.4415,-4.6128 -1.6484,-12.16102 -2.682,-16.77381 -1.156,-5.15853 -1.9095,-41.20878 -1.9576,-93.65378 l -0.078,-85.26686 -5.1125,0 c -2.8303,0 -6.5643,-1.66394 -8.365,-3.72752 -2.6395,-3.02507 -5.5346,-3.72751 -15.3628,-3.72751 -10.9756,0 -12.6512,0.52395 -17.8814,5.59127 -4.3667,4.23067 -7.474,5.59127 -12.769,5.59127 -3.8489,0 -6.9979,-0.77248 -6.9979,-1.71662 0,-2.42596 -28.3724,-2.26437 -35.9398,0.20469 -8.0653,2.6315 -8.9241,4.14898 -8.9574,15.82642 -0.024,8.58347 -0.4763,9.7212 -4.0708,10.25066 -3.9271,0.57846 -4.0575,1.29382 -4.5421,24.91246 l -0.4988,24.31688 4.9913,1.82278 4.9914,1.82275 0.045,20.45426 c 0.051,22.84776 1.1557,28.00116 6.3035,29.39734 1.9439,0.52723 3.5345,2.29518 3.5345,3.92874 0,4.5104 10.1813,3.91704 12.9959,-0.75739 3.1478,-5.22775 8.5571,-4.64378 16.7835,1.8119 3.8824,3.04669 8.784,5.56276 10.8925,5.59127 2.2961,0.0311 4.2105,1.54683 4.7734,3.77937 0.5624,2.23017 2.4512,3.72751 4.7021,3.72751 3.5753,0 3.7622,0.95575 3.7622,19.23744 0,21.16068 3.3848,35.43057 9.1652,38.63906 2.6204,1.45452 3.4137,3.95862 3.4137,10.77531 0,4.88426 -0.9703,9.8869 -2.1564,11.11697 -1.6771,1.73951 -1.6771,2.73352 0,4.47302 1.1861,1.23008 2.1564,5.84288 2.1564,10.25066 0,7.30593 0.397,8.01416 4.4925,8.01416 4.1264,0 4.4925,0.68338 4.4925,8.3869 0,7.05939 -0.5521,8.38691 -3.4879,8.38691 -1.9184,0 -3.9471,0.77055 -4.5083,1.71232 -0.5612,0.94178 -8.4932,3.50716 -17.6267,5.70084 -9.1335,2.1937 -19.6388,4.81023 -23.3451,5.81455 l -6.7387,1.82602 0,11.66982 c 0,6.4184 -0.8127,12.51275 -1.806,13.54298 -1.0827,1.12294 -1.3429,6.46899 -0.6497,13.34786 l 1.1564,11.47468 14.5763,0.53713 c 16.555,0.61007 78.9383,-0.4921 79.8997,-1.41162 z m 214.6149,-23.59397 c -0.2927,-13.47207 -0.8428,-24.81681 -1.2224,-25.21057 -0.3797,-0.39374 -10.6052,-3.14345 -22.7234,-6.11046 -12.1182,-2.967 -22.8803,-6.2732 -23.9157,-7.34707 -1.0354,-1.07388 -3.3381,-1.95251 -5.1171,-1.95251 -2.6356,0 -3.2346,-1.55313 -3.2346,-8.38691 0,-7.14439 0.5325,-8.3869 3.594,-8.3869 2.9413,0 3.594,-1.24251 3.594,-6.84234 0,-3.86968 1.35,-8.38948 3.1073,-10.40347 2.9451,-3.37523 2.9451,-3.65529 0,-5.36469 -5.0136,-2.91 -4.241,-17.49117 1.2015,-22.67501 6.59,-6.27687 10.0671,-20.03959 10.0671,-39.84743 0,-15.77255 0.3119,-17.37368 3.3844,-17.37368 1.8731,0 3.804,-1.66448 4.3242,-3.72751 0.5272,-2.09093 2.4511,-3.72752 4.3819,-3.72752 1.8932,0 6.6186,-2.49273 10.501,-5.53942 8.247,-6.47186 14.2414,-7.14963 16.9422,-1.9156 1.2798,2.48015 3.7626,3.72751 7.4194,3.72751 3.9847,0 5.7545,-1.02499 6.4359,-3.72751 0.5169,-2.05014 2.3563,-3.72752 4.0876,-3.72752 4.2585,0 6.1804,-11.12472 5.6745,-32.84537 -0.3662,-15.72221 -0.12,-17.07835 3.2677,-17.99716 3.4603,-0.93852 3.6637,-2.40028 3.6637,-26.32888 0,-20.89216 -0.457,-25.3352 -2.6062,-25.3352 -1.8539,0 -2.9609,-3.25086 -3.8348,-11.26187 -1.1485,-10.52895 -1.6173,-11.43039 -7.2043,-13.85152 -6.5859,-2.85398 -36.109,-3.42914 -37.7145,-0.73474 -1.3469,2.26024 -15.1287,2.03753 -15.1287,-0.24447 0,-1.02506 -1.1846,-1.86375 -2.6323,-1.86375 -1.4478,0 -3.4978,-1.67738 -4.5557,-3.72752 -1.6585,-3.21403 -3.7626,-3.72751 -15.2744,-3.72751 -11.5118,0 -13.6159,0.51348 -15.2744,3.72751 -1.3553,2.62646 -3.7626,3.72752 -8.1497,3.72752 l -6.2262,0 0,86.43708 c 0,72.29225 -0.4374,87.52281 -2.6729,93.07193 -1.4836,3.6825 -2.2163,9.0028 -1.6468,11.95635 0.5644,2.92682 -1.063,20.26587 -3.6165,38.53125 -3.6981,26.45239 -4.6427,40.37139 -4.6427,68.40643 l 0,35.19665 48.1395,-0.0518 48.1395,-0.0518 -0.5321,-24.49465 z M 421.76154,234.78795 c 12.5851,-4.88366 22.6669,-16.34707 27.0302,-30.73453 4.428,-14.60104 4.1018,-40.84501 -0.7054,-56.75073 l -3.6614,-12.11442 3.9787,-3.1341 c 4.9554,-3.90352 3.1015,-6.36345 -2.4666,-3.27279 -2.2643,1.25685 -4.3579,1.51448 -4.6603,0.57349 -1.8717,-5.82364 -13.186,-20.81511 -18.4911,-24.50064 -4.6704,-3.24461 -7.1454,-7.003685 -9.6143,-14.602583 l -3.3248,-10.233174 -8.2824,0.560427 -8.2824,0.560427 -2.7687,9.68206 c -2.1467,7.507059 -4.3834,10.899233 -9.9566,15.100363 -3.9534,2.98006 -9.988,10.05763 -13.4102,15.72793 -6.0501,10.02439 -6.3376,10.2313 -10.3888,7.4782 -5.0591,-3.43803 -8.1373,-1.21449 -3.3474,2.41805 1.8682,1.41682 4.0405,2.81596 4.8272,3.10919 0.7868,0.29324 -0.084,5.14595 -1.9345,10.78382 -6.7627,20.60086 -6.1967,50.74814 1.2407,66.08419 5.58,11.50593 17.1642,21.53645 29.2908,25.36226 8.7908,2.77338 24.8623,1.80825 34.9273,-2.09744 z" \
       style="fill:#000000" /> \
';

svg += "</g></svg>";

	return svg;

}


function battleTechLogoSVG ( standAlone, baseFillColor, aFillColor, xLoc, yLoc, width ) {
	var baseWidth = 210;
	var baseHeight = 28;
	if( typeof( width ) == "undefined" || width == 0) {
		theWidth = 210;
		theHeight = 28;
	} else {
		theWidth = width;
		theHeight = Math.round( width / baseWidth * baseHeight );
	}

	if( typeof( xLoc ) == "undefined" ) {
		xLoc = 0;
	}

	if( typeof( yLoc ) == "undefined" ) {
		yLoc = 0;
	}

	if( typeof(standAlone) == "undefined" )
		standAlone = true;

	if( !baseFillColor )
		baseFillColor = colorTan;

	if( !aFillColor )
		aFillColor = colorGold;

	// scale = theWidth / baseWidth;
	//~ baseWidth = baseWidth * 5;
	//~ baseHeight = baseHeight * 5;

	//~ console.log( "battleTechLogoSVG" );
	//~ console.log( "battleTechLogoSVG - baseFillColor", baseFillColor);
	//~ console.log( "battleTechLogoSVG - aFillColor", aFillColor);
	//~ console.log( "battleTechLogoSVG - theWidth", theWidth);
	//~ console.log( "battleTechLogoSVG - theHeight", theHeight);
	//~ console.log( "battleTechLogoSVG - width", width);
	//~ console.log( "battleTechLogoSVG - xLoc", xLoc);
	//~ console.log( "battleTechLogoSVG - yLoc", yLoc);


	if( standAlone ) {
		var svg = "<!DOCTYPE HTML><svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xml:space=\"preserve\" height=\"" + theHeight  + " px\" width=\"" + theWidth  + "px\" viewBox=\"0 0 790 100\" ><g>\n";

	} else {
		var svg = '<svg \
		   viewBox="0 0 790 100" \
		   height="' + theHeight + 'px" \
		   width="' + theWidth + 'px" \
		   x="' + xLoc + 'px" \
		   y="' + yLoc + 'px" \
		   id=\"btLogo\" \
		   version="1.1"> \
		  <g> \"';
	  }



	svg += '<path \
       style="fill:' + baseFillColor + ';fill-opacity:1" \
       d="m 613.14797,97.475074 c -22.55326,-4.54102 -37.15014,-23.093463 -35.59872,-45.245504 0.80541,-11.500123 4.65183,-20.129404 12.33332,-27.669285 8.70005,-8.53966 19.66012,-12.841085 32.94182,-12.928434 13.03574,-0.08571 22.06992,3.344107 29.95796,11.373609 4.30902,4.386291 9.64083,12.354358 8.81769,13.177502 -0.48955,0.489545 -18.75978,9.049511 -20.47631,9.59357 -1.28765,0.408111 -1.96543,-0.151872 -3.84663,-3.178085 -1.45635,-2.342783 -3.5741,-4.429788 -5.84618,-5.761307 -9.13401,-5.352899 -22.62013,-0.192407 -26.08697,9.982218 -1.87994,5.517331 -1.54632,13.334811 0.76721,17.977475 4.14483,8.317581 13.22817,12.313718 22.27788,9.800981 3.11377,-0.864571 10.18475,-7.253029 10.18475,-9.201671 0,-0.612272 0.31314,-1.306735 0.69586,-1.543272 0.55987,-0.346024 21.30969,8.637335 22.34734,9.674984 0.15811,0.158104 -0.66682,2.076919 -1.83316,4.264015 -2.70077,5.064342 -10.72234,13.110593 -15.73262,15.781022 -8.54657,4.555229 -20.29316,6.038485 -30.90324,3.902182 z M 1.432377,54.886471 l 0,-42.291291 26.734517,0.0117 c 28.953298,0.01266 32.397458,0.368487 38.567864,3.984585 13.631143,7.988382 13.737063,28.930366 0.181219,35.829155 -2.190529,1.114789 -2.191238,1.117415 -0.451992,1.669431 2.916553,0.92567 8.378881,6.520629 10.230164,10.478542 2.158699,4.615149 2.382168,12.500468 0.509976,17.995039 -1.645329,4.828763 -7.551683,10.785957 -12.587425,12.69577 -3.388228,1.284982 -6.476365,1.438839 -33.45854,1.667006 l -29.725783,0.251359 0,-42.291282 z m 48.096499,19.665707 c 0.898395,-0.472873 1.880668,-1.230047 2.182849,-1.682594 C 52.668353,71.4369 52.329337,68.475488 51.046407,67.057876 49.949844,65.846179 48.500843,65.6903 38.333494,65.6903 l -11.475292,0 0,4.860823 0,4.860823 10.518626,0 c 6.479807,0 11.145807,-0.330129 12.152048,-0.859768 z M 49.420837,42.018111 c 1.678338,-1.518873 1.768324,-4.237325 0.192417,-5.813223 -0.959715,-0.959724 -3.153138,-1.17515 -11.965096,-1.17515 l -10.789956,0 0,4.113006 0,4.112997 10.597539,0 c 8.81168,0 10.827988,-0.208552 11.965096,-1.23763 z m 127.001083,24.439995 0,-30.640563 -11.03033,-0.20695 -11.03032,-0.206942 0,-11.217279 0,-11.217279 35.14748,0 35.14747,0 0,11.217279 0,11.217279 -11.03032,0.206942 -11.03033,0.20695 0,30.640563 0,30.640572 -13.08682,0 -13.08683,0 z m 74.78186,-0.01994 0,-30.660561 -11.23676,0 -11.23675,0 0.20642,-11.404231 0.20644,-11.404241 35.14747,0 35.14748,0 0,11.217279 0,11.21728 -11.03033,0.206941 -11.03033,0.20696 0,30.640563 0,30.640572 -13.08682,0 -13.08682,0 z m 53.27584,-11.404231 0.19319,-42.064802 12.89987,-0.204611 12.89986,-0.204612 0,30.678221 0,30.678222 15.70419,0 15.70419,0 0,11.591182 0,11.591193 -28.79724,0 -28.79723,0 z m 63.70339,41.071024 c -0.20974,-0.54658 -0.28331,-19.475735 -0.16349,-42.064792 l 0.21787,-41.071034 68.61235,-0.190863 68.61235,-0.190873 0,11.595104 0,11.595104 -11.21728,0 -11.21728,0 0,30.660561 0,30.660562 -12.71291,0 -12.71292,0 0,-30.660562 0,-30.660561 -31.78229,0 -31.78228,0 0,3.739093 0,3.739093 18.69546,0 18.69546,0 0,11.217279 0,11.21728 -18.69546,0 -18.69546,0 0,4.112996 0,4.113007 19.06937,0 19.06937,0 0,11.591182 0,11.591193 -31.80576,0 c -25.76175,0 -31.87822,-0.18885 -32.1871,-0.993769 z m 142.51381,-41.257985 0,-42.251745 31.78229,0 31.78229,0 0,11.591183 0,11.591193 -18.69546,0 -18.69547,0 0,3.739093 0,3.739093 18.32155,0 18.32156,0 0,11.217279 0,11.21728 -18.32156,0 -18.32155,0 0,4.112996 0,4.113007 18.69547,0 18.69546,0 0,11.591182 0,11.591193 -31.78229,0 -31.78229,0 z m 154.97917,0.186961 0.19318,-42.064802 12.89988,-0.204611 12.89986,-0.204612 0,14.974032 0,14.974032 14.58246,0 14.58247,0 0,-14.974032 0,-14.974032 12.89986,0.204612 12.89988,0.204611 0,41.877841 0,41.877841 -12.89988,0.204611 -12.89986,0.204621 0,-16.095762 0,-16.095762 -14.58247,0 -14.58246,0 0,16.078103 0,16.078102 -13.09305,0 -13.09304,0 z" /> \
    <path \
       style="fill:' + aFillColor + ';fill-opacity:1" \
       d="m 81.354266,96.997204 c 0.132976,-0.52117 2.748565,-5.40069 5.812408,-10.84338 l 5.570619,-9.89577 26.257817,0 26.25782,0 5.74945,10.15953 c 3.16218,5.58774 5.74943,10.46725 5.74943,10.84337 0,0.40421 -15.46403,0.68383 -37.81966,0.68383 -30.157097,0 -37.770684,-0.19199 -37.577884,-0.94758 z m -1.627755,-27.03083 c 0,-1.33965 39.191139,-70.72527986 39.670909,-70.23501986 0.33538,0.34274 9.36944,16.27127986 20.07565,35.39672986 l 19.46585,34.77357 -13.19042,0.20474 c -7.25473,0.11262 -13.43513,-0.0556 -13.73422,-0.3739 -0.29911,-0.31827 -3.31884,-5.57872 -6.71055,-11.68991 -5.31432,-9.57538 -6.27985,-10.91917 -6.98514,-9.72164 -0.45011,0.76429 -3.34948,5.9326 -6.44302,11.48516 l -5.62462,10.09555 -13.262212,0.20421 c -7.294228,0.11231 -13.262227,0.0496 -13.262227,-0.13949 z" /> \
  </g>';

	svg += "<text x=\"750\" y=\"30\" font-family=\"sans-serif\" text-anchor=\"start\" style=\"fill:" + baseFillColor + ";fill-opacity:1\" font-size=\"25\">TM</text>\n";


	svg += "</svg>";


	return svg;
}

/* Functions outside scope for SVG manipulation */
function ASChangeSVGHeat( newHeatValue, groupIndex, mechIndex, idField ) {
	//~ console.log( "changeSVGHeat", newHeatValue, groupIndex, mechIndex, idField );
    var scope = angular.element(document.getElementById( idField )).scope();
	scope.$apply(
		function() {
			scope.setMechHeat( newHeatValue, groupIndex, mechIndex ) ;
		}
    );
}


function ASToggleArmorPip( armorIndex, groupIndex, mechIndex, idField ) {
	//~ console.log( "changeSVGHeat", newHeatValue, groupIndex, mechIndex, idField );
    var scope = angular.element(document.getElementById( idField )).scope();
	scope.$apply(
		function() {
			scope.toggleArmorPip( armorIndex, groupIndex, mechIndex ) ;
		}
    );
}

function ASToggleStructPip( structIndex, groupIndex, mechIndex, idField ) {
	//~ console.log( "changeSVGHeat", newHeatValue, groupIndex, mechIndex, idField );
    var scope = angular.element(document.getElementById( idField )).scope();
	scope.$apply(
		function() {
			scope.toggleStructPip( structIndex, groupIndex, mechIndex ) ;
		}
    );
}

function ASToggleEngineHit( critIndex, groupIndex, mechIndex, idField ) {
	//~ console.log( "changeSVGHeat", newHeatValue, groupIndex, mechIndex, idField );
    var scope = angular.element(document.getElementById( idField )).scope();
	scope.$apply(
		function() {
			scope.toggleEngineHit( critIndex, groupIndex, mechIndex ) ;
		}
    );
}

function ASToggleFireControlHit( critIndex, groupIndex, mechIndex, idField ) {
	//~ console.log( "changeSVGHeat", newHeatValue, groupIndex, mechIndex, idField );
    var scope = angular.element(document.getElementById( idField )).scope();
	scope.$apply(
		function() {
			scope.toggleControlHit( critIndex, groupIndex, mechIndex ) ;
		}
    );
}

function ASToggleMPlHit( critIndex, groupIndex, mechIndex, idField ) {
	//~ console.log( "changeSVGHeat", newHeatValue, groupIndex, mechIndex, idField );
    var scope = angular.element(document.getElementById( idField )).scope();
	scope.$apply(
		function() {
			scope.toggleMPHit( critIndex, groupIndex, mechIndex ) ;
		}
    );
}

function ASToggleWeaponHits( critIndex, groupIndex, mechIndex, idField ) {
	//~ console.log( "changeSVGHeat", newHeatValue, groupIndex, mechIndex, idField );
    var scope = angular.element(document.getElementById( idField )).scope();
	scope.$apply(
		function() {
			scope.toggleWeaponHit( critIndex, groupIndex, mechIndex ) ;
		}
    );
}

function ASTakeDamage(  groupIndex, mechIndex, idField ) {
    var scope = angular.element(document.getElementById( idField )).scope();
	scope.$apply(
		function() {
			scope.showDamagePopup( groupIndex, mechIndex ) ;
		}
    );
}


function createSVGRecordSheet( mechData, inPlay, landscape, itemIDField ) {
	if( typeof( landscape ) == "undefined" ) {
		landscape = false;
	} else {
		if( landscape )
			landscape = true;
		else
			landscape = false;
	}

	if( typeof( inPlay ) == "undefined" ) {
		inPlay = false;
	} else {
		if( inPlay )
			inPlay = true;
		else
			inPlay = false;
	}

	if( typeof( itemIDField ) == "undefined" ) {
		itemIDField = "";
	} else {
		if( !itemIDField )
			itemIDField = "";
	}

	if( itemIDField ) {
		// this is a workaround for a bug. When I previously had parameters, the $index and $parent.$index
		// paramters were undefined when passed directly, but are passed correctly when in the string of the id field
		itemItems = itemIDField.split("-");
		groupIndex = itemItems[2] / 1;
		mechIndex = itemItems[3] / 1;
	}

	var docWidth = 2000;
	var docHeight = 2600;

	svgCode = "<!DOCTYPE HTML><svg version=\"1.1\" x=\"0px\" y=\"0px\" height=\"auto\" width=\"auto\" xml:space=\"preserve\" viewBox=\"0 0 " + docWidth  + " " + docHeight  + "\" xmlns=\"http://www.w3.org/2000/svg\">\n";

	svgCode += "<g>\n";

	svgCode += "<rect x=\"0\" y=\"0\" width=\"" + docWidth  + "\" height=\"" + docHeight  + "\" fill=\"" + colorWhite + "\" />\n";

	//svgCode += "<text x=\""+ (docWidth / 2) + "\" y=\"100\" font-family=\"sans-serif\" text-anchor=\"middle\" font-size=\"55\">TODO: Record Sheet for " + mechData.getName()  + "</text>\n";

	/*
	 * Mech Data
	 */
	// Mech Data Box....
	var mechDataTop = 10;
	var mechDataLeft = 10;
	svgCode += createRSGroupBox( "'Mech Data", 10, 10, 400, 700);

	// Name/Type
	svgCode += "<text x=\"" + ( mechDataLeft + 10 ) + "\" y=\"" + (mechDataTop + 80) + "\" text-anchor=\"start\" font-family=\"sans-serif\" fill=\"" + colorBlack + "\" style=\"font-weight: 700;\" font-size=\"35\">Type: " + mechData.getName() + "</text>\n";

	// Movement
	svgCode += "<text x=\"" + ( mechDataLeft + 15 ) + "\" y=\"" + (mechDataTop + 160) + "\" text-anchor=\"start\" font-family=\"sans-serif\" fill=\"" + colorBlack + "\" style=\"font-weight: 700;\" font-size=\"30\">Movement Points</text>\n";

	// Walk
	svgCode += "<text x=\"" + ( mechDataLeft + 220 ) + "\" y=\"" + (mechDataTop + 210) + "\" text-anchor=\"end\" font-family=\"sans-serif\" fill=\"" + colorBlack + "\" style=\"font-weight: 700;\" font-size=\"30\">Walking:</text>\n";
	svgCode += "<text x=\"" + ( mechDataLeft + 240 ) + "\" y=\"" + (mechDataTop + 210) + "\" text-anchor=\"start\" font-family=\"sans-serif\" fill=\"" + colorBlack + "\" style=\"font-weight: 100;\" font-size=\"30\">" + mechData.getWalkSpeed() + "</text>\n";

	// Run
	svgCode += "<text x=\"" + ( mechDataLeft + 220 ) + "\" y=\"" + (mechDataTop + 245) + "\" text-anchor=\"end\" font-family=\"sans-serif\" fill=\"" + colorBlack + "\" style=\"font-weight: 700;\" font-size=\"30\">Running</text>\n";
	svgCode += "<text x=\"" + ( mechDataLeft + 240 ) + "\" y=\"" + (mechDataTop + 245) + "\" text-anchor=\"start\" font-family=\"sans-serif\" fill=\"" + colorBlack + "\" style=\"font-weight: 100;\" font-size=\"30\">" + mechData.getRunSpeed() + "</text>\n";

	// Jump
	svgCode += "<text x=\"" + ( mechDataLeft + 220 ) + "\" y=\"" + (mechDataTop + 280) + "\" text-anchor=\"end\" font-family=\"sans-serif\" fill=\"" + colorBlack + "\" style=\"font-weight: 700;\" font-size=\"30\">Jumping</text>\n";
	svgCode += "<text x=\"" + ( mechDataLeft + 240 ) + "\" y=\"" + (mechDataTop + 280) + "\" text-anchor=\"start\" font-family=\"sans-serif\" fill=\"" + colorBlack + "\" style=\"font-weight: 100;\" font-size=\"30\">" + mechData.getJumpSpeed() + "</text>\n";

	// Tonnage
	svgCode += "<text x=\"" + ( mechDataLeft + 340 ) + "\" y=\"" + (mechDataTop + 160) + "\" text-anchor=\"start\" font-family=\"sans-serif\" fill=\"" + colorBlack + "\" style=\"font-weight: 700;\" font-size=\"25\">Tonnage:</text>\n";
	svgCode += "<text x=\"" + ( mechDataLeft + 665 ) + "\" y=\"" + (mechDataTop + 160) + "\" text-anchor=\"end\" font-family=\"sans-serif\" fill=\"" + colorBlack + "\" style=\"font-weight: 100;\" font-size=\"25\">" + mechData.getTonnage() + "</text>\n";

	// Tech Base
	svgCode += "<text x=\"" + ( mechDataLeft + 340 ) + "\" y=\"" + (mechDataTop + 205) + "\" text-anchor=\"start\" font-family=\"sans-serif\" fill=\"" + colorBlack + "\" style=\"font-weight: 700;\" font-size=\"25\">Tech Base:</text>\n";
	svgCode += "<text x=\"" + ( mechDataLeft + 665 ) + "\" y=\"" + (mechDataTop + 225) + "\" text-anchor=\"end\" font-family=\"sans-serif\" fill=\"" + colorBlack + "\" style=\"font-weight: 100;\" font-size=\"25\">" + mechData.getLocalTranslation( mechData.getTech().name)  + "</text>\n";

	// Era
	svgCode += "<text x=\"" + ( mechDataLeft + 340 ) + "\" y=\"" + (mechDataTop + 255) + "\" text-anchor=\"start\" font-family=\"sans-serif\" fill=\"" + colorBlack + "\" style=\"font-weight: 700;\" font-size=\"25\">Era:</text>\n";
	svgCode += "<text x=\"" + ( mechDataLeft + 665 ) + "\" y=\"" + (mechDataTop + 280) + "\" text-anchor=\"end\" font-family=\"sans-serif\" fill=\"" + colorBlack + "\" style=\"font-weight: 100;\" font-size=\"25\">" + mechData.getLocalTranslation( mechData.getEra().name)  + "</text>\n";


	// Cost
	svgCode += "<text x=\"" + ( mechDataLeft + 15 ) + "\" y=\"" + (mechDataTop + 350) + "\" text-anchor=\"start\" font-family=\"sans-serif\" fill=\"" + colorBlack + "\" style=\"font-weight: 700;\" font-size=\"30\">Cost (CBills)</text>\n";
	svgCode += "<text x=\"" + ( mechDataLeft + 15 ) + "\" y=\"" + (mechDataTop + 380) + "\" text-anchor=\"start\" font-family=\"sans-serif\" fill=\"" + colorBlack + "\" style=\"font-weight: 100;\" font-size=\"25\">" + mechData.getCBillCost()  + "</text>\n";
	// BV
	svgCode += "<text x=\"" + ( mechDataLeft + 340 ) + "\" y=\"" + (mechDataTop + 350) + "\" text-anchor=\"start\" font-family=\"sans-serif\" fill=\"" + colorBlack + "\" style=\"font-weight: 700;\" font-size=\"30\">BattleValue (BV2)</text>\n";
	svgCode += "<text x=\"" + ( mechDataLeft + 340 ) + "\" y=\"" + (mechDataTop + 380) + "\" text-anchor=\"start\" font-family=\"sans-serif\" fill=\"" + colorBlack + "\" style=\"font-weight: 100;\" font-size=\"25\">" + mechData.getBattleValue()  + "</text>\n";


	/*
	 * Weapons and Equipment
	 */
	// Weapons and Equipment Data Box....
	var weapAndEqpTop = 460;
	var weapAndEqpLeft = 10;

	var wacCol1 = weapAndEqpLeft + 15;
	var wacCol2 = weapAndEqpLeft + 90;
	var wacCol3 = weapAndEqpLeft + 470;
	var wacCol4 = weapAndEqpLeft + 550;
	var wacCol5 = weapAndEqpLeft + 650;
	var wacCol6 = weapAndEqpLeft + 770;
	var wacCol7 = weapAndEqpLeft + 880;
	var wacCol8 = weapAndEqpLeft + 990;
	var wacCol9 = weapAndEqpLeft + 1100;

	var eqLineHeight = 33;
	svgCode += createRSGroupBox( "Weapons and Equipment", weapAndEqpLeft, weapAndEqpTop, 750, 1200);
	// Col Headers
	svgCode += "<text x=\"" + ( wacCol1 ) + "\" y=\"" + (weapAndEqpTop + 80) + "\" text-anchor=\"start\" font-family=\"sans-serif\" fill=\"" + colorBlack + "\" style=\"font-weight: 700;\" font-size=\"35\">Qty</text>\n";
	svgCode += "<text x=\"" + ( wacCol2 ) + "\" y=\"" + (weapAndEqpTop + 80) + "\" text-anchor=\"start\" font-family=\"sans-serif\" fill=\"" + colorBlack + "\" style=\"font-weight: 700;\" font-size=\"35\">Type</text>\n";
	svgCode += "<text x=\"" + ( wacCol3 ) + "\" y=\"" + (weapAndEqpTop + 80) + "\" text-anchor=\"start\" font-family=\"sans-serif\" fill=\"" + colorBlack + "\" style=\"font-weight: 700;\" font-size=\"35\">Loc</text>\n";
	svgCode += "<text x=\"" + ( wacCol4 ) + "\" y=\"" + (weapAndEqpTop + 80) + "\" text-anchor=\"start\" font-family=\"sans-serif\" fill=\"" + colorBlack + "\" style=\"font-weight: 700;\" font-size=\"35\">Heat</text>\n";
	svgCode += "<text x=\"" + ( wacCol5 ) + "\" y=\"" + (weapAndEqpTop + 80) + "\" text-anchor=\"start\" font-family=\"sans-serif\" fill=\"" + colorBlack + "\" style=\"font-weight: 700;\" font-size=\"35\">Dmg</text>\n";
	svgCode += "<text x=\"" + ( wacCol6 ) + "\" y=\"" + (weapAndEqpTop + 80) + "\" text-anchor=\"start\" font-family=\"sans-serif\" fill=\"" + colorBlack + "\" style=\"font-weight: 700;\" font-size=\"35\">Min</text>\n";
	svgCode += "<text x=\"" + ( wacCol7 ) + "\" y=\"" + (weapAndEqpTop + 80) + "\" text-anchor=\"start\" font-family=\"sans-serif\" fill=\"" + colorBlack + "\" style=\"font-weight: 700;\" font-size=\"35\">Sht</text>\n";
	svgCode += "<text x=\"" + ( wacCol8 ) + "\" y=\"" + (weapAndEqpTop + 80) + "\" text-anchor=\"start\" font-family=\"sans-serif\" fill=\"" + colorBlack + "\" style=\"font-weight: 700;\" font-size=\"35\">Med</text>\n";
	svgCode += "<text x=\"" + ( wacCol9 ) + "\" y=\"" + (weapAndEqpTop + 80) + "\" text-anchor=\"start\" font-family=\"sans-serif\" fill=\"" + colorBlack + "\" style=\"font-weight: 700;\" font-size=\"35\">Lng</text>\n";


	for( eq_count = 0; eq_count < mechData.sortedEquipmentList.length; eq_count++) {

		if( eq_count % 2 == 0 )
			svgCode += "<rect x=\"" + ( wacCol1 - 5 ) + "\" y=\"" + (weapAndEqpTop + 93 + eqLineHeight * eq_count) + "\" width=\"1180\" height=\"" + (eqLineHeight + 4 )  + "\" fill=\"" + colorVeryLightGray + "\" />\n";

		svgCode += "<text x=\"" + ( wacCol1 + 30 ) + "\" y=\"" + (weapAndEqpTop + 120 + eqLineHeight * eq_count ) + "\" text-anchor=\"middle\" font-family=\"sans-serif\" fill=\"" + colorBlack + "\" style=\"font-weight: 100;\" font-size=\"30\">" + mechData.sortedEquipmentList[eq_count].count + "</text>\n";
		svgCode += "<text x=\"" + ( wacCol2 ) + "\" y=\"" + (weapAndEqpTop + 120 + eqLineHeight * eq_count ) + "\" text-anchor=\"start\" font-family=\"sans-serif\" fill=\"" + colorBlack + "\" style=\"font-weight: 100;\" font-size=\"30\">" + mechData.sortedEquipmentList[eq_count].local_name + "</text>\n";
		svgCode += "<text x=\"" + ( wacCol3 + 30 ) + "\" y=\"" + (weapAndEqpTop + 120 + eqLineHeight * eq_count ) + "\" text-anchor=\"middle\" font-family=\"sans-serif\" fill=\"" + colorBlack + "\" style=\"font-weight: 100;\" font-size=\"30\">" + mechData.sortedEquipmentList[eq_count].location.toUpperCase() + "</text>\n";
		svgCode += "<text x=\"" + ( wacCol4 + 30 ) + "\" y=\"" + (weapAndEqpTop + 120 + eqLineHeight * eq_count ) + "\" text-anchor=\"middle\" font-family=\"sans-serif\" fill=\"" + colorBlack + "\" style=\"font-weight: 100;\" font-size=\"30\">" + mechData.sortedEquipmentList[eq_count].heat + "</text>\n";
		svgCode += "<text x=\"" + ( wacCol5 + 30 ) + "\" y=\"" + (weapAndEqpTop + 120 + eqLineHeight * eq_count ) + "\" text-anchor=\"middle\" font-family=\"sans-serif\" fill=\"" + colorBlack + "\" style=\"font-weight: 100;\" font-size=\"30\">" + mechData.sortedEquipmentList[eq_count].damage + "</text>\n";
		if(mechData.sortedEquipmentList[eq_count].range_min.min == 0)
			svgCode += "<text x=\"" + ( wacCol6 + 30 ) + "\" y=\"" + (weapAndEqpTop + 120 + eqLineHeight * eq_count ) + "\" text-anchor=\"middle\" font-family=\"sans-serif\" fill=\"" + colorBlack + "\" style=\"font-weight: 100;\" font-size=\"30\">" + "-" + "</text>\n";
		else
			svgCode += "<text x=\"" + ( wacCol6 + 30 ) + "\" y=\"" + (weapAndEqpTop + 120 + eqLineHeight * eq_count ) + "\" text-anchor=\"middle\" font-family=\"sans-serif\" fill=\"" + colorBlack + "\" style=\"font-weight: 100;\" font-size=\"30\">" + mechData.sortedEquipmentList[eq_count].range_min.min + "</text>\n";
		svgCode += "<text x=\"" + ( wacCol7 + 30 ) + "\" y=\"" + (weapAndEqpTop + 120 + eqLineHeight * eq_count ) + "\" text-anchor=\"middle\" font-family=\"sans-serif\" fill=\"" + colorBlack + "\" style=\"font-weight: 100;\" font-size=\"30\">" + mechData.sortedEquipmentList[eq_count].range_min.short + "</text>\n";
		svgCode += "<text x=\"" + ( wacCol8 + 30 ) + "\" y=\"" + (weapAndEqpTop + 120 + eqLineHeight * eq_count ) + "\" text-anchor=\"middle\" font-family=\"sans-serif\" fill=\"" + colorBlack + "\" style=\"font-weight: 100;\" font-size=\"30\">" + mechData.sortedEquipmentList[eq_count].range_min.medium + "</text>\n";
		svgCode += "<text x=\"" + ( wacCol9 + 30 ) + "\" y=\"" + (weapAndEqpTop + 120 + eqLineHeight * eq_count ) + "\" text-anchor=\"middle\" font-family=\"sans-serif\" fill=\"" + colorBlack + "\" style=\"font-weight: 100;\" font-size=\"30\">" + mechData.sortedEquipmentList[eq_count].range_min.long + "</text>\n";
	}

	/*
	 * BATTLEMECH RECORD SHEET
	 */
	svgCode += "<text x=\"" + (docWidth / 2 - 25 ) + "\" y=\"" + "80" + "\" text-anchor=\"middle\" font-family=\"sans-serif\" fill=\"" + colorBlack + "\" style=\"font-weight: 700;\" font-size=\"65\">BATTLEMECH</text>\n";
	svgCode += "<text x=\"" + (docWidth / 2 - 25 ) + "\" y=\"" + "120" + "\" text-anchor=\"middle\" font-family=\"sans-serif\" fill=\"" + colorBlack + "\" style=\"font-weight: 700;\" font-size=\"35\">Record Sheet</text>\n";

	/*
	 * Pilot
	 */
	// Warrior Data Box....
	var pilotTop = 160;
	var pilotLeft = 725;
	svgCode += createRSGroupBox( "Warrior Data", pilotLeft, pilotTop, 250, 500);

	// Name/Type
	svgCode += "<text x=\"" + ( pilotLeft + 10 ) + "\" y=\"" + (pilotTop + 80) + "\" text-anchor=\"start\" font-family=\"sans-serif\" fill=\"" + colorBlack + "\" style=\"font-weight: 700;\" font-size=\"35\">Name: " + mechData.pilot.name + "</text>\n";

	// Piloting
	svgCode += "<text x=\"" + ( pilotLeft + 450 ) + "\" y=\"" + (pilotTop + 120) + "\" text-anchor=\"end\" font-family=\"sans-serif\" fill=\"" + colorBlack + "\" style=\"font-weight: 100;\" font-size=\"35\">Piloting: " + mechData.pilot.piloting + "</text>\n";

	// Gunnery
	svgCode += "<text x=\"" + ( pilotLeft + 450 ) + "\" y=\"" + (pilotTop + 160) + "\" text-anchor=\"end\" font-family=\"sans-serif\" fill=\"" + colorBlack + "\" style=\"font-weight: 100;\" font-size=\"35\">Gunnery: " + mechData.pilot.gunnery + "</text>\n";

	// Damage Track
	svgCode += "<text x=\"" + ( pilotLeft + 100 ) + "\" y=\"" + (pilotTop + 200) + "\" text-anchor=\"end\" font-family=\"sans-serif\" fill=\"" + colorBlack + "\" style=\"font-weight: 100;\" font-size=\"25\">Hits:</text>\n";
	svgCode += "<text x=\"" + ( pilotLeft + 100 ) + "\" y=\"" + (pilotTop + 240) + "\" text-anchor=\"end\" font-family=\"sans-serif\" fill=\"" + colorBlack + "\" style=\"font-weight: 100;\" font-size=\"25\">Consc:</text>\n";

	boxWidth = 60;
	lWidthBuffer = 0;
	svgCode += "<rect x=\"" + ( pilotLeft + 110 + lWidthBuffer ) + "\" y=\"" + (pilotTop + 170) + "\" width=\"" + (boxWidth) + "\" height=\"40\" fill=\"" + colorBlack + "\" />\n";
	svgCode += "<rect x=\"" + ( pilotLeft + 110 + lWidthBuffer + 1 ) + "\" y=\"" + (pilotTop + 170 + 1) + "\" width=\"" + (boxWidth - 2) + "\" height=\"38\" fill=\"" + colorWhite + "\" />\n";
	svgCode += "<rect x=\"" + ( pilotLeft + 110 + lWidthBuffer ) + "\" y=\"" + (pilotTop + 210) + "\" width=\"" + (boxWidth) + "\" height=\"40\" fill=\"" + colorBlack + "\" />\n";
	svgCode += "<rect x=\"" + ( pilotLeft + 110 + lWidthBuffer + 1 ) + "\" y=\"" + (pilotTop + 210 + 1) + "\" width=\"" + (boxWidth - 2) + "\" height=\"38\" fill=\"" + colorWhite + "\" />\n";
	svgCode += "<text x=\"" + ( pilotLeft + 100 + lWidthBuffer + 35 ) + "\" y=\"" + (pilotTop + 200) + "\" text-anchor=\"middle\" font-family=\"sans-serif\" fill=\"" + colorBlack + "\" style=\"font-weight: 100;\" font-size=\"25\">1</text>\n";
	svgCode += "<text x=\"" + ( pilotLeft + 100 + lWidthBuffer + 35 ) + "\" y=\"" + (pilotTop + 240) + "\" text-anchor=\"middle\" font-family=\"sans-serif\" fill=\"" + colorBlack + "\" style=\"font-weight: 100;\" font-size=\"20\">3+</text>\n";

	lWidthBuffer += boxWidth;
	svgCode += "<rect x=\"" + ( pilotLeft + 110 + lWidthBuffer ) + "\" y=\"" + (pilotTop + 170) + "\" width=\"" + (boxWidth) + "\" height=\"40\" fill=\"" + colorBlack + "\" />\n";
	svgCode += "<rect x=\"" + ( pilotLeft + 110 + lWidthBuffer + 1 ) + "\" y=\"" + (pilotTop + 170 + 1) + "\" width=\"" + (boxWidth - 2) + "\" height=\"38\" fill=\"" + colorWhite + "\" />\n";
	svgCode += "<rect x=\"" + ( pilotLeft + 110 + lWidthBuffer ) + "\" y=\"" + (pilotTop + 210) + "\" width=\"" + (boxWidth) + "\" height=\"40\" fill=\"" + colorBlack + "\" />\n";
	svgCode += "<rect x=\"" + ( pilotLeft + 110 + lWidthBuffer + 1 ) + "\" y=\"" + (pilotTop + 210 + 1) + "\" width=\"" + (boxWidth - 2) + "\" height=\"38\" fill=\"" + colorWhite + "\" />\n";
	svgCode += "<text x=\"" + ( pilotLeft + 100 + lWidthBuffer + 35 ) + "\" y=\"" + (pilotTop + 200) + "\" text-anchor=\"middle\" font-family=\"sans-serif\" fill=\"" + colorBlack + "\" style=\"font-weight: 100;\" font-size=\"25\">2</text>\n";
	svgCode += "<text x=\"" + ( pilotLeft + 100 + lWidthBuffer + 35 ) + "\" y=\"" + (pilotTop + 240) + "\" text-anchor=\"middle\" font-family=\"sans-serif\" fill=\"" + colorBlack + "\" style=\"font-weight: 100;\" font-size=\"20\">5+</text>\n";


	lWidthBuffer += boxWidth;
	svgCode += "<rect x=\"" + ( pilotLeft + 110 + lWidthBuffer ) + "\" y=\"" + (pilotTop + 170) + "\" width=\"" + (boxWidth) + "\" height=\"40\" fill=\"" + colorBlack + "\" />\n";
	svgCode += "<rect x=\"" + ( pilotLeft + 110 + lWidthBuffer + 1 ) + "\" y=\"" + (pilotTop + 170 + 1) + "\" width=\"" + (boxWidth - 2) + "\" height=\"38\" fill=\"" + colorWhite + "\" />\n";
	svgCode += "<rect x=\"" + ( pilotLeft + 110 + lWidthBuffer ) + "\" y=\"" + (pilotTop + 210) + "\" width=\"" + (boxWidth) + "\" height=\"40\" fill=\"" + colorBlack + "\" />\n";
	svgCode += "<rect x=\"" + ( pilotLeft + 110 + lWidthBuffer + 1 ) + "\" y=\"" + (pilotTop + 210 + 1) + "\" width=\"" + (boxWidth - 2) + "\" height=\"38\" fill=\"" + colorWhite + "\" />\n";
	svgCode += "<text x=\"" + ( pilotLeft + 100 + lWidthBuffer + 35 ) + "\" y=\"" + (pilotTop + 200) + "\" text-anchor=\"middle\" font-family=\"sans-serif\" fill=\"" + colorBlack + "\" style=\"font-weight: 100;\" font-size=\"25\">3</text>\n";
	svgCode += "<text x=\"" + ( pilotLeft + 100 + lWidthBuffer + 35 ) + "\" y=\"" + (pilotTop + 240) + "\" text-anchor=\"middle\" font-family=\"sans-serif\" fill=\"" + colorBlack + "\" style=\"font-weight: 100;\" font-size=\"20\">7+</text>\n";


	lWidthBuffer += boxWidth;
	svgCode += "<rect x=\"" + ( pilotLeft + 110 + lWidthBuffer ) + "\" y=\"" + (pilotTop + 170) + "\" width=\"" + (boxWidth) + "\" height=\"40\" fill=\"" + colorBlack + "\" />\n";
	svgCode += "<rect x=\"" + ( pilotLeft + 110 + lWidthBuffer + 1 ) + "\" y=\"" + (pilotTop + 170 + 1) + "\" width=\"" + (boxWidth - 2) + "\" height=\"38\" fill=\"" + colorWhite + "\" />\n";
	svgCode += "<rect x=\"" + ( pilotLeft + 110 + lWidthBuffer ) + "\" y=\"" + (pilotTop + 210) + "\" width=\"" + (boxWidth) + "\" height=\"40\" fill=\"" + colorBlack + "\" />\n";
	svgCode += "<rect x=\"" + ( pilotLeft + 110 + lWidthBuffer + 1 ) + "\" y=\"" + (pilotTop + 210 + 1) + "\" width=\"" + (boxWidth - 2) + "\" height=\"38\" fill=\"" + colorWhite + "\" />\n";
	svgCode += "<text x=\"" + ( pilotLeft + 100 + lWidthBuffer + 35 ) + "\" y=\"" + (pilotTop + 200) + "\" text-anchor=\"middle\" font-family=\"sans-serif\" fill=\"" + colorBlack + "\" style=\"font-weight: 100;\" font-size=\"25\">4</text>\n";
	svgCode += "<text x=\"" + ( pilotLeft + 100 + lWidthBuffer + 35 ) + "\" y=\"" + (pilotTop + 240) + "\" text-anchor=\"middle\" font-family=\"sans-serif\" fill=\"" + colorBlack + "\" style=\"font-weight: 100;\" font-size=\"20\">10+</text>\n";


	lWidthBuffer += boxWidth;
	svgCode += "<rect x=\"" + ( pilotLeft + 110 + lWidthBuffer ) + "\" y=\"" + (pilotTop + 170) + "\" width=\"" + (boxWidth) + "\" height=\"40\" fill=\"" + colorBlack + "\" />\n";
	svgCode += "<rect x=\"" + ( pilotLeft + 110 + lWidthBuffer + 1 ) + "\" y=\"" + (pilotTop + 170 + 1) + "\" width=\"" + (boxWidth - 2) + "\" height=\"38\" fill=\"" + colorWhite + "\" />\n";
	svgCode += "<rect x=\"" + ( pilotLeft + 110 + lWidthBuffer ) + "\" y=\"" + (pilotTop + 210) + "\" width=\"" + (boxWidth) + "\" height=\"40\" fill=\"" + colorBlack + "\" />\n";
	svgCode += "<rect x=\"" + ( pilotLeft + 110 + lWidthBuffer + 1 ) + "\" y=\"" + (pilotTop + 210 + 1) + "\" width=\"" + (boxWidth - 2) + "\" height=\"38\" fill=\"" + colorWhite + "\" />\n";
	svgCode += "<text x=\"" + ( pilotLeft + 100 + lWidthBuffer + 35 ) + "\" y=\"" + (pilotTop + 200) + "\" text-anchor=\"middle\" font-family=\"sans-serif\" fill=\"" + colorBlack + "\" style=\"font-weight: 100;\" font-size=\"25\">5</text>\n";
	svgCode += "<text x=\"" + ( pilotLeft + 100 + lWidthBuffer + 35 ) + "\" y=\"" + (pilotTop + 240) + "\" text-anchor=\"middle\" font-family=\"sans-serif\" fill=\"" + colorBlack + "\" style=\"font-weight: 100;\" font-size=\"20\">11+</text>\n";



	lWidthBuffer += boxWidth;
	svgCode += "<rect x=\"" + ( pilotLeft + 110 + lWidthBuffer ) + "\" y=\"" + (pilotTop + 170) + "\" width=\"" + (boxWidth) + "\" height=\"40\" fill=\"" + colorBlack + "\" />\n";
	svgCode += "<rect x=\"" + ( pilotLeft + 110 + lWidthBuffer + 1 ) + "\" y=\"" + (pilotTop + 170 + 1) + "\" width=\"" + (boxWidth - 2) + "\" height=\"38\" fill=\"" + colorWhite + "\" />\n";
	svgCode += "<rect x=\"" + ( pilotLeft + 110 + lWidthBuffer ) + "\" y=\"" + (pilotTop + 210) + "\" width=\"" + (boxWidth) + "\" height=\"40\" fill=\"" + colorBlack + "\" />\n";
	svgCode += "<rect x=\"" + ( pilotLeft + 110 + lWidthBuffer + 1 ) + "\" y=\"" + (pilotTop + 210 + 1) + "\" width=\"" + (boxWidth - 2) + "\" height=\"38\" fill=\"" + colorWhite + "\" />\n";
	svgCode += "<text x=\"" + ( pilotLeft + 100 + lWidthBuffer + 35 ) + "\" y=\"" + (pilotTop + 200) + "\" text-anchor=\"middle\" font-family=\"sans-serif\" fill=\"" + colorBlack + "\" style=\"font-weight: 100;\" font-size=\"25\">6</text>\n";
	svgCode += "<text x=\"" + ( pilotLeft + 100 + lWidthBuffer + 35 ) + "\" y=\"" + (pilotTop + 240) + "\" text-anchor=\"middle\" font-family=\"sans-serif\" fill=\"" + colorBlack + "\" style=\"font-weight: 100;\" font-size=\"20\">Dead</text>\n";




	/*
	 * Armor
	 */
	// Armor Diagram Box....
	armorBoxTop = 10;
	armorBoxLeft = 1240;
	armorBoxWidth = 750;
	svgCode += createRSGroupBox( "Armor Diagram", armorBoxLeft, armorBoxTop, 1200, armorBoxWidth);
	svgCode += rsArmorSVG( false, colorBlack, colorBlack, armorBoxLeft + 37, armorBoxTop, 675 );
	svgCode += rsRearArmorSVG( false, colorBlack, colorBlack, armorBoxLeft + armorBoxWidth / 2 - 170, armorBoxTop + 895, 340 );

	// Main Armor Labels
	svgCode += "<text x=\"" + ( armorBoxLeft + armorBoxWidth / 2 ) + "\" y=\"" + (armorBoxTop + 80) + "\" text-anchor=\"middle\" font-family=\"sans-serif\" fill=\"" + colorBlack + "\" style=\"font-weight: 700;\" font-size=\"20\">HEAD (" + mechData.armorAllocation.head + ")</text>\n";

	svgCode += "<text x=\"" + ( armorBoxLeft + armorBoxWidth / 2 - 65) + "\" y=\"" + (armorBoxTop + 105) + "\" text-anchor=\"end\" font-family=\"sans-serif\" fill=\"" + colorBlack + "\" style=\"font-weight: 700;\" font-size=\"20\">LEFT TORSO</text>\n";
	svgCode += "<text x=\"" + ( armorBoxLeft + armorBoxWidth / 2 - 95 ) + "\" y=\"" + (armorBoxTop + 125) + "\" text-anchor=\"end\" font-family=\"sans-serif\" fill=\"" + colorBlack + "\" style=\"font-weight: 700;\" font-size=\"20\">(" + mechData.armorAllocation.leftTorso + ")</text>\n";

	svgCode += "<text x=\"" + ( armorBoxLeft + armorBoxWidth / 2 + 65 ) + "\" y=\"" + (armorBoxTop + 105) + "\" text-anchor=\"start\" font-family=\"sans-serif\" fill=\"" + colorBlack + "\" style=\"font-weight: 700;\" font-size=\"20\">RIGHT TORSO</text>\n";
	svgCode += "<text x=\"" + ( armorBoxLeft + armorBoxWidth / 2 + 95 ) + "\" y=\"" + (armorBoxTop + 125) + "\" text-anchor=\"start\" font-family=\"sans-serif\" fill=\"" + colorBlack + "\" style=\"font-weight: 700;\" font-size=\"20\">(" + mechData.armorAllocation.rightTorso + ")</text>\n";


	svgCode += "<text x=\"" + ( armorBoxLeft +  20 ) + "\" y=\"" + (armorBoxTop + 610) + "\" text-anchor=\"start\" font-family=\"sans-serif\" fill=\"" + colorBlack + "\" style=\"font-weight: 700;\" font-size=\"20\">LEFT</text>\n";
	svgCode += "<text x=\"" + ( armorBoxLeft +  20 ) + "\" y=\"" + (armorBoxTop + 630) + "\" text-anchor=\"start\" font-family=\"sans-serif\" fill=\"" + colorBlack + "\" style=\"font-weight: 700;\" font-size=\"20\">ARM (" + mechData.armorAllocation.leftArm + ")</text>\n";

	svgCode += "<text x=\"" + ( armorBoxLeft + armorBoxWidth - 40 ) + "\" y=\"" + (armorBoxTop + 610) + "\" text-anchor=\"end\" font-family=\"sans-serif\" fill=\"" + colorBlack + "\" style=\"font-weight: 700;\" font-size=\"20\">RIGHT</text>\n";
	svgCode += "<text x=\"" + ( armorBoxLeft + armorBoxWidth - 40 ) + "\" y=\"" + (armorBoxTop + 630) + "\" text-anchor=\"end\" font-family=\"sans-serif\" fill=\"" + colorBlack + "\" style=\"font-weight: 700;\" font-size=\"20\">ARM (" + mechData.armorAllocation.rightArm + ")</text>\n";

	svgCode += "<text x=\"" + ( armorBoxLeft +  20 ) + "\" y=\"" + (armorBoxTop + 890) + "\" text-anchor=\"start\" font-family=\"sans-serif\" fill=\"" + colorBlack + "\" style=\"font-weight: 700;\" font-size=\"20\">LEFT</text>\n";
	svgCode += "<text x=\"" + ( armorBoxLeft +  20 ) + "\" y=\"" + (armorBoxTop + 910) + "\" text-anchor=\"start\" font-family=\"sans-serif\" fill=\"" + colorBlack + "\" style=\"font-weight: 700;\" font-size=\"20\">LEG (" + mechData.armorAllocation.leftLeg + ")</text>\n";

	svgCode += "<text x=\"" + ( armorBoxLeft + armorBoxWidth - 40 ) + "\" y=\"" + (armorBoxTop + 890) + "\" text-anchor=\"end\" font-family=\"sans-serif\" fill=\"" + colorBlack + "\" style=\"font-weight: 700;\" font-size=\"20\">RIGHT</text>\n";
	svgCode += "<text x=\"" + ( armorBoxLeft + armorBoxWidth - 40 ) + "\" y=\"" + (armorBoxTop + 910) + "\" text-anchor=\"end\" font-family=\"sans-serif\" fill=\"" + colorBlack + "\" style=\"font-weight: 700;\" font-size=\"20\">LEG (" + mechData.armorAllocation.rightLeg + ")</text>\n";

	svgCode += "<text x=\"" + ( armorBoxLeft + armorBoxWidth / 2   ) + "\" y=\"" + (armorBoxTop + 600) + "\" text-anchor=\"middle\" font-family=\"sans-serif\" fill=\"" + colorBlack + "\" style=\"font-weight: 700;\" font-size=\"20\">CENTER</text>\n";
	svgCode += "<text x=\"" + ( armorBoxLeft + armorBoxWidth / 2  ) + "\" y=\"" + (armorBoxTop + 620) + "\" text-anchor=\"middle\" font-family=\"sans-serif\" fill=\"" + colorBlack + "\" style=\"font-weight: 700;\" font-size=\"20\">TORSO</text>\n";
	svgCode += "<text x=\"" + ( armorBoxLeft + armorBoxWidth / 2  ) + "\" y=\"" + (armorBoxTop + 640) + "\" text-anchor=\"middle\" font-family=\"sans-serif\" fill=\"" + colorBlack + "\" style=\"font-weight: 700;\" font-size=\"20\">(" + mechData.armorAllocation.centerTorso + ")</text>\n";

	svgCode += "<text x=\"" + ( armorBoxLeft + armorBoxWidth / 2  ) + "\" y=\"" + (armorBoxTop + 1200) + "\" text-anchor=\"middle\" font-family=\"sans-serif\" fill=\"" + colorBlack + "\" style=\"font-weight: 700;\" font-size=\"20\">CENTER TORSO REAR (" + mechData.armorAllocation.centerTorsoRear + ")</text>\n";

	svgCode += "<text x=\"" + ( armorBoxLeft + armorBoxWidth / 2 - 170 ) + "\" y=\"" + (armorBoxTop + 1090) + "\" text-anchor=\"end\" font-family=\"sans-serif\" fill=\"" + colorBlack + "\" style=\"font-weight: 700;\" font-size=\"20\">LEFT TORSO</text>\n";
	svgCode += "<text x=\"" + ( armorBoxLeft + armorBoxWidth / 2 - 170 ) + "\" y=\"" + (armorBoxTop + 1110) + "\" text-anchor=\"end\" font-family=\"sans-serif\" fill=\"" + colorBlack + "\" style=\"font-weight: 700;\" font-size=\"20\">REAR (" + mechData.armorAllocation.leftTorsoRear + ")</text>\n";

	svgCode += "<text x=\"" + ( armorBoxLeft + armorBoxWidth / 2 + 170 ) + "\" y=\"" + (armorBoxTop + 1090) + "\" text-anchor=\"start\" font-family=\"sans-serif\" fill=\"" + colorBlack + "\" style=\"font-weight: 700;\" font-size=\"20\">RIGHT TORSO</text>\n";
	svgCode += "<text x=\"" + ( armorBoxLeft + armorBoxWidth / 2 + 170 ) + "\" y=\"" + (armorBoxTop + 1110) + "\" text-anchor=\"start\" font-family=\"sans-serif\" fill=\"" + colorBlack + "\" style=\"font-weight: 700;\" font-size=\"20\">REAR (" + mechData.armorAllocation.rightTorsoRear + ")</text>\n";

	// Main Armor bubbles (this will be a lot of code, and possibly quite messy the first time around)

	var armorBubbleRadius = 10;
	// Head Armor
	if( mechData.armorAllocation.head >= 1 )
		svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 2.5, armorBoxTop + 200 - armorBubbleRadius * 5, armorBubbleRadius );
	if( mechData.armorAllocation.head >= 6 )
		svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2, armorBoxTop + 200 - armorBubbleRadius * 5, armorBubbleRadius );
	if( mechData.armorAllocation.head >= 2 )
		svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 2.5, armorBoxTop + 200 - armorBubbleRadius * 5, armorBubbleRadius );

	if( mechData.armorAllocation.head >= 7 )
		svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 2.5, armorBoxTop + 200 - armorBubbleRadius * 2.5, armorBubbleRadius );
	if( mechData.armorAllocation.head >= 3 )
		svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2, armorBoxTop + 200 - armorBubbleRadius * 2.5, armorBubbleRadius );
	if( mechData.armorAllocation.head >= 8 )
		svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 2.5 , armorBoxTop + 200 - armorBubbleRadius * 2.5, armorBubbleRadius );

	if( mechData.armorAllocation.head >= 4 )
		svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 2.5, armorBoxTop + 200, armorBubbleRadius );
	if( mechData.armorAllocation.head >= 9 )
		svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2, armorBoxTop + 200, armorBubbleRadius );
	if( mechData.armorAllocation.head >= 5 )
		svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 2.5, armorBoxTop + 200, armorBubbleRadius );


	// Center Torso Armor
	var ctTop = 275;

if( mechData.armorAllocation.centerTorso >= 55 ) {
		armorBubbleRadius = 8;
		// some poor fool put a LOT of armor in the front and not much in the rear
		var ctTop = 270;
		rowMultiplier = 0;
		if( mechData.armorAllocation.centerTorso >= 55 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 55 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 2.5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 55 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 55 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 2.5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 55 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );

		rowMultiplier += 2.5;
		if( mechData.armorAllocation.centerTorso >= 55 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 55 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 2.5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 55 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 55 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 2.5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 55 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );

		rowMultiplier += 2.5;
		if( mechData.armorAllocation.centerTorso >= 55 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 55 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 2.5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 55 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 55 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 2.5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 55 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );

		rowMultiplier += 2.5;
		if( mechData.armorAllocation.centerTorso >= 55 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 55 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 2.5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 55 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 55 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 2.5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 55 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );

		rowMultiplier += 2.5;
		if( mechData.armorAllocation.centerTorso >= 55 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 55 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 2.5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 55 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 55 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 2.5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 55 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );

		rowMultiplier += 2.5;
		if( mechData.armorAllocation.centerTorso >= 55 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 55 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 2.5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 55 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 55 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 2.5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 55 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );

		rowMultiplier += 2.5;
		if( mechData.armorAllocation.centerTorso >= 55 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 55 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 2.5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 55 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 55 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 2.5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 55 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );

		rowMultiplier += 2.5;
		if( mechData.armorAllocation.centerTorso >= 55 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 55 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 2.5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 55 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 55 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 2.5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 55 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );

		rowMultiplier += 2.5;
		if( mechData.armorAllocation.centerTorso >= 55 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 55 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 2.5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 55 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 55 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 2.5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 55 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );

		rowMultiplier += 2.5;
		if( mechData.armorAllocation.centerTorso >= 55 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 55 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 2.5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 55 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 55 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 2.5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 55 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );

		rowMultiplier += 2.5;
		if( mechData.armorAllocation.centerTorso >= 55 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 55 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 2.5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 55 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 55 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 2.5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 55 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );


		rowMultiplier += 2.5;
		if( mechData.armorAllocation.centerTorso >= 56 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 4, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 57 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 1.25, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 58 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 1.25, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 59 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 4, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );


		rowMultiplier += 2.5;
		if( mechData.armorAllocation.centerTorso >= 60 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 4, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 61 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 1.25, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 62 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 1.25, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 63 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 4, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );

		rowMultiplier += 2.5;
		if( mechData.armorAllocation.centerTorso >= 64 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 2.5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 65 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 66 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 2.5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 67 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );


		rowMultiplier += 2.5;
		if( mechData.armorAllocation.centerTorso >= 68 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 2.5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 69 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 70 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 2.5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 71 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );


	} else if( mechData.armorAllocation.centerTorso >= 47 ) {
		armorBubbleRadius = 9;

		rowMultiplier = 0;
		if( mechData.armorAllocation.centerTorso >= 47 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 47 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 2.5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 47 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 47 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 2.5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 47 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );

		rowMultiplier += 2.5;
		if( mechData.armorAllocation.centerTorso >= 47 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 47 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 2.5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 47 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 47 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 2.5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 47 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );

		rowMultiplier += 2.5;
		if( mechData.armorAllocation.centerTorso >= 47 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 47 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 2.5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 47 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 47 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 2.5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 47 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );

		rowMultiplier += 2.5;
		if( mechData.armorAllocation.centerTorso >= 47 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 47 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 2.5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 47 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 47 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 2.5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 47 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );

		rowMultiplier += 2.5;
		if( mechData.armorAllocation.centerTorso >= 47 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 4, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 47 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 1.25, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 47 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 1.25, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 47 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 4, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );

		rowMultiplier += 2.5;
		if( mechData.armorAllocation.centerTorso >= 47 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 4, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 47 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 1.25, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 47 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 1.25, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 47 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 4, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );

		rowMultiplier += 2.5;
		if( mechData.armorAllocation.centerTorso >= 47 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 4, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 47 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 1.25, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 47 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 1.25, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 47 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 4, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );

		rowMultiplier += 2.5;
		if( mechData.armorAllocation.centerTorso >= 47 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 4, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 47 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 1.25, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 47 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 1.25, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 47 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 4, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );

		 rowMultiplier += 2.5;
		if( mechData.armorAllocation.centerTorso >= 47 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 4, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 47 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 1.25, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 47 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 1.25, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 47 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 4, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );

		 rowMultiplier += 2.5;
		if( mechData.armorAllocation.centerTorso >= 47 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 4, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 47 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 1.25, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 47 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 1.25, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 47 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 4, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );

		 rowMultiplier += 2.5;
		if( mechData.armorAllocation.centerTorso >= 47 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 4, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 47 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 1.25, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 47 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 1.25, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 48 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 4, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );

		rowMultiplier += 2.5;
		if( mechData.armorAllocation.centerTorso >= 50 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 3, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 49 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 51 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2+ armorBubbleRadius * 3, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );

		rowMultiplier += 2.5;
		if( mechData.armorAllocation.centerTorso >= 53 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 3, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 52 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 54 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 3, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );


	} else if( mechData.armorAllocation.centerTorso >= 25 ) {
		// do row of 4 step...
		 rowMultiplier = 0;
		if( mechData.armorAllocation.centerTorso >= 25 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 4, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 25 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 1.25, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 25 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 1.25, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 25 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 4, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );

		rowMultiplier += 2.5;
		if( mechData.armorAllocation.centerTorso >= 37 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 4, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 25 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 1.25, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 25 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 1.25, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 38 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 4, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );

		 rowMultiplier += 2.5;
		if( mechData.armorAllocation.centerTorso >= 27 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 4, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 25 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 1.25, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 25 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 1.25, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 28 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 4, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );

		rowMultiplier += 2.5;
		if( mechData.armorAllocation.centerTorso >= 39 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 4, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 25 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 1.25, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 25 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 1.25, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 40 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 4, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );

		rowMultiplier += 2.5;
		if( mechData.armorAllocation.centerTorso >= 29 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 4, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 25 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 1.25, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 25 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 1.25, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 30 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 4, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );

		rowMultiplier += 2.5;
		if( mechData.armorAllocation.centerTorso >= 41 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 4, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 25 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 1.25, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 25 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 1.25, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 42 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 4, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );

		rowMultiplier += 2.5;
		if( mechData.armorAllocation.centerTorso >= 31 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 3.5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 25 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 1.25, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 25 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 1.25, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 32 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 3.5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );

		rowMultiplier += 2.5;
		if( mechData.armorAllocation.centerTorso >= 43 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 3.5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 25 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 1.25, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 25 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 1.25, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 44 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 3.5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );

		rowMultiplier += 2.5;
		if( mechData.armorAllocation.centerTorso >= 33 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 3.5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 25 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 1.25, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 25 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 1.25, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 34 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 3.5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );

		rowMultiplier += 2.5;
		if( mechData.armorAllocation.centerTorso >= 35 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 3.5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 25 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 1.25, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 25 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 1.25, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 36 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 3.5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );

		rowMultiplier += 2.5;
		if( mechData.armorAllocation.centerTorso >= 45 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 3.5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 25 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 1.25, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 25 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 1.25, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 46 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 3.5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );

		rowMultiplier += 2.5;
		if( mechData.armorAllocation.centerTorso >= 25 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 1.25, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 26 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 1.25, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
	} else if( mechData.armorAllocation.centerTorso >= 47 ) {
		armorBubbleRadius = 9;

		rowMultiplier = 0;
		if( mechData.armorAllocation.centerTorso >= 47 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 47 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 2.5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 47 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 47 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 2.5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 47 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );

		rowMultiplier += 2.5;
		if( mechData.armorAllocation.centerTorso >= 47 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 47 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 2.5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 47 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 47 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 2.5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 47 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );

		rowMultiplier += 2.5;
		if( mechData.armorAllocation.centerTorso >= 47 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 47 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 2.5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 47 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 47 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 2.5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 47 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );

		rowMultiplier += 2.5;
		if( mechData.armorAllocation.centerTorso >= 47 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 47 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 2.5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 47 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 47 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 2.5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 47 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );

		rowMultiplier += 2.5;
		if( mechData.armorAllocation.centerTorso >= 47 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 4, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 47 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 1.25, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 47 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 1.25, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 47 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 4, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );

		rowMultiplier += 2.5;
		if( mechData.armorAllocation.centerTorso >= 47 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 4, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 47 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 1.25, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 47 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 1.25, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 47 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 4, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );

		rowMultiplier += 2.5;
		if( mechData.armorAllocation.centerTorso >= 47 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 4, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 47 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 1.25, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 47 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 1.25, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 47 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 4, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );

		rowMultiplier += 2.5;
		if( mechData.armorAllocation.centerTorso >= 47 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 4, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 47 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 1.25, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 47 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 1.25, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 47 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 4, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );

		 rowMultiplier += 2.5;
		if( mechData.armorAllocation.centerTorso >= 47 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 4, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 47 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 1.25, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 47 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 1.25, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 47 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 4, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );

		 rowMultiplier += 2.5;
		if( mechData.armorAllocation.centerTorso >= 47 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 4, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 47 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 1.25, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 47 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 1.25, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 47 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 4, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );

		 rowMultiplier += 2.5;
		if( mechData.armorAllocation.centerTorso >= 47 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 4, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 47 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 1.25, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 47 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 1.25, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 48 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 4, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );

		rowMultiplier += 2.5;
		if( mechData.armorAllocation.centerTorso >= 49 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );


	} else if( mechData.armorAllocation.centerTorso >= 25 ) {
		// do row of 4 step...
		 rowMultiplier = 0;
		if( mechData.armorAllocation.centerTorso >= 25 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 4, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 25 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 1.25, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 25 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 1.25, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 25 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 4, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );

		rowMultiplier += 2.5;
		if( mechData.armorAllocation.centerTorso >= 37 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 4, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 25 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 1.25, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 25 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 1.25, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 38 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 4, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );

		 rowMultiplier += 2.5;
		if( mechData.armorAllocation.centerTorso >= 27 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 4, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 25 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 1.25, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 25 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 1.25, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 28 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 4, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );

		rowMultiplier += 2.5;
		if( mechData.armorAllocation.centerTorso >= 39 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 4, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 25 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 1.25, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 25 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 1.25, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 40 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 4, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );

		rowMultiplier += 2.5;
		if( mechData.armorAllocation.centerTorso >= 29 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 4, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 25 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 1.25, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 25 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 1.25, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 30 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 4, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );

		rowMultiplier += 2.5;
		if( mechData.armorAllocation.centerTorso >= 41 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 4, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 25 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 1.25, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 25 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 1.25, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 42 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 4, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );

		rowMultiplier += 2.5;
		if( mechData.armorAllocation.centerTorso >= 31 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 3.5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 25 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 1.25, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 25 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 1.25, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 32 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 3.5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );

		rowMultiplier += 2.5;
		if( mechData.armorAllocation.centerTorso >= 43 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 3.5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 25 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 1.25, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 25 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 1.25, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 44 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 3.5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );

		rowMultiplier += 2.5;
		if( mechData.armorAllocation.centerTorso >= 33 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 3.5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 25 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 1.25, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 25 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 1.25, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 34 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 3.5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );

		rowMultiplier += 2.5;
		if( mechData.armorAllocation.centerTorso >= 35 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 3.5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 25 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 1.25, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 25 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 1.25, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 36 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 3.5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );

		rowMultiplier += 2.5;
		if( mechData.armorAllocation.centerTorso >= 45 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 3.5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 25 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 1.25, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 25 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 1.25, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 46 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 3.5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );

		rowMultiplier += 2.5;
		if( mechData.armorAllocation.centerTorso >= 25 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 1.25, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 26 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 1.25, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
	} else {
		// less than 25 do row of 3 step...
		rowMultiplier = 0;
		if( mechData.armorAllocation.centerTorso >= 2 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 2.5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 17 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 4 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 2.5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );

		rowMultiplier += 2.5;
		if( mechData.armorAllocation.centerTorso >= 21 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 2.5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 1 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 22 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 2.5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );

		rowMultiplier += 2.5;
		if( mechData.armorAllocation.centerTorso >= 5 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 2.5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 18 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 3 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 2.5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );

		rowMultiplier += 2.5;
		rowMultiplier += 2.5;
		if( mechData.armorAllocation.centerTorso >= 7 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 2.5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 19 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 9 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 2.5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );

		rowMultiplier += 2.5;
		if( mechData.armorAllocation.centerTorso >= 23 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 2.5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 6 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 24 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 2.5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );

		rowMultiplier += 2.5;
		if( mechData.armorAllocation.centerTorso >= 10 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 2.5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 20 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 8 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 2.5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );

		rowMultiplier += 2.5;
		rowMultiplier += 2.5;
		if( mechData.armorAllocation.centerTorso >= 11 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 2.5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 15 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 12 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 2.5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );


		rowMultiplier += 2.5;
		if( mechData.armorAllocation.centerTorso >= 13 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 - armorBubbleRadius * 2.5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 16 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );
		if( mechData.armorAllocation.centerTorso >= 14 )
			svgCode += damageCircle( armorBoxLeft + armorBoxWidth / 2 + armorBubbleRadius * 2.5, armorBoxTop + ctTop + armorBubbleRadius * rowMultiplier, armorBubbleRadius );



		rowMultiplier += 2.5;
	}

	armorBubbleRadius = 10;

	// Center Torso Rear Armor
	var ctTop = 275;

	/*
	 * Criticals
	 */
	// Critical Hit Box....
	svgCode += createRSGroupBox( "Critical Hit Table", 10, 1250, 1210, 1200);

	/*
	 * Structure
	 */
	// Internal Structure....
	isBoxTop = 1250;
	isBoxLeft = 1240;
	svgCode += createRSGroupBox( "Internal Structure", isBoxLeft,  isBoxTop, 600, 655);
	svgCode += rsStructureSVG( false, colorBlack, colorBlack, isBoxLeft + 100, isBoxTop + 50, 400 );
	/*
	 * Heat
	 */
	// Heat Scale Track....
	svgCode += "<text x=\"" + ( docWidth - 50 ) + "\" y=\"" + 1260 + "\" text-anchor=\"middle\" font-family=\"sans-serif\" fill=\"" + colorBlack + "\" style=\"font-weight: 700;\" font-size=\"25\">HEAT</text>\n";
	svgCode += "<text x=\"" + ( docWidth - 50 ) + "\" y=\"" + 1290 + "\" text-anchor=\"middle\" font-family=\"sans-serif\" fill=\"" + colorBlack + "\" style=\"font-weight: 700;\" font-size=\"25\">SCALE</text>\n";

	boxHeight = 37;
	boxWidth = 60;
	for( var hCounter = 0; hCounter < 31; hCounter++ ) {
		svgCode += "<rect x=\"" + (  docWidth - boxWidth - 25 ) + "\" y=\"" + (docHeight - 155 - boxHeight * hCounter) + "\" width=\"" + (boxWidth) + "\" height=\"" + (boxHeight) + "\" fill=\"" + colorBlack + "\" />\n";
		svgCode += "<rect x=\"" + (  docWidth - boxWidth - 25 + 2 ) + "\" y=\"" + (docHeight - 155 + 2  - boxHeight * hCounter) + "\" width=\"" + (boxWidth - 4) + "\" height=\"" + (boxHeight - 4) + "\" fill=\"" + colorWhite + "\" />\n";

		svgCode += "<text x=\"" + (  docWidth - boxWidth / 2 - 25 ) + "\" y=\"" + (docHeight - 125 - boxHeight * hCounter) + "\" text-anchor=\"middle\" font-family=\"sans-serif\" fill=\"" + colorBlack + "\" style=\"font-weight: 100;\" font-size=\"" + ( boxHeight - 10) + "\">" + hCounter + "</text>\n";

	}
	// Heat Effects....
	svgCode += createRSGroupBox( "Heat Effects", 1240, 1885, 575, 655);



	// Classic Battletech Logo on bottom.
	svgCode += "<rect x=\"0\" y=\"" + (docHeight - 100) + "\" width=\"2000\" height=\"100\" fill=\"" + colorBlack + "\" />\n";
	svgCode += battleTechLogoSVG( false, colorTan, colorGold, 1500, docHeight - 85, 500  );
	svgCode += "<text x=\"20\" y=\"" + (docHeight - 25) + "\" text-anchor=\"start\" font-family=\"sans-serif\" fill=\"" + colorTan + "\" style=\"font-weight: 700;\" font-size=\"60\">CLASSIC BATTLETECH</text>\n";
	svgCode += "<text x=\"20\" y=\"" + (docHeight - 25) + "\" text-anchor=\"start\" font-family=\"sans-serif\" fill=\"" + colorTan + "\" style=\"font-weight: 700;\" font-size=\"60\">CLASSIC BATTLETECH</text>\n";

	svgCode += "</g>\n";

	svgCode += "</svg>\n";


	while( svgCode.indexOf( "class=\"undefined\"" ) > 0 ) {

		svgCode = svgCode.replace( "class=\"undefined\"", "" );
	}

	while( svgCode.indexOf( "onclick=\"undefined\"" ) > 0 ) {

		svgCode = svgCode.replace( "onclick=\"undefined\"", "" );
	}

	while( svgCode.indexOf( "  " ) > 0 ) {

		svgCode = svgCode.replace( "  ", " " );
	}

	return svgCode;
}

function createRSGroupBox( txtLabel, xPos, yPos, height, width, borderColor, fillColor, labelColor ) {
	var svgCode = "";
	var borderWidth = 2;
	var textSize = 35;
	var labelLeft = 35;
	if( typeof(borderColor) == "undefined" || !borderColor)
		borderColor = colorDarkGray;
	if( typeof(fillColor) == "undefined" || !fillColor)
		fillColor = colorWhite;
	if( typeof(labelColor) == "undefined" || !labelColor)
		labelColor = colorWhite;

	var svgCode = "";

	svgCode += "<rect rx=\"15\" ry=\"15\" x=\"" + xPos + "\" y=\"" + ( yPos + ( textSize + 5 ) / 2 ) + "\" width=\"" + width  + "\" height=\"" + height  + "\" fill=\"" + borderColor + "\" />\n";
	svgCode += "<rect rx=\"15\" ry=\"15\" x=\"" + (xPos + borderWidth) + "\" y=\"" + (yPos + ( textSize + 5 ) / 2 + borderWidth) + "\" width=\"" + (width - borderWidth * 2 )+ "\" height=\"" + (height - borderWidth * 2) + "\" fill=\"" + fillColor + "\" />\n";

	if( txtLabel ) {
		svgCode += "<rect rx=\"15\" ry=\"15\" x=\"" + ( labelLeft + xPos ) + "\" y=\"" + yPos + "\" width=\"" + ( width - labelLeft * 2 )   + "\" height=\"" + ( textSize + 5 )  + "\" fill=\"" + borderColor + "\" />\n";
		svgCode += "<text rx=\"15\" ry=\"15\" x=\""+ ( xPos +  width / 2 ) + "\" y=\"" + (yPos + textSize - 3 ) + "\" font-family=\"sans-serif\" fill=\"" + labelColor + "\" text-anchor=\"middle\" font-size=\"" + textSize + "\">" + txtLabel.toUpperCase() + "</text>\n";
	}

	return svgCode;
}

function createSVGAlphaStrike( asData, inPlay, itemIDField ) {

	groupIndex = -1;
	mechIndex = -1;

	if( typeof( inPlay ) == "undefined" ) {
		inPlay = false;
	} else {
		if( inPlay )
			inPlay = true;
		else
			inPlay = false;
	}

	if( typeof( itemIDField ) == "undefined" ) {
		itemIDField = "";
	} else {
		if( !itemIDField )
			itemIDField = "";
	}

	if( itemIDField ) {
		// this is a workaround for a bug. When I previously had parameters, the $index and $parent.$index
		// paramters were undefined when passed directly, but are passed correctly when in the string of the id field
		itemItems = itemIDField.split("-");
		groupIndex = itemItems[2] / 1;
		mechIndex = itemItems[3] / 1;
	}

	var leftBoxWidth = 550;



	svgCode = "<!DOCTYPE HTML><svg version=\"1.1\" x=\"0px\" y=\"0px\" height=\"auto\" width=\"auto\" xml:space=\"preserve\" viewBox=\"0 0 1000 600\" xmlns=\"http://www.w3.org/2000/svg\">\n";

	svgCode += "<g transform=\"translate(0, -40)\">\n";

	// Base Border and Interior White....
	svgCode += "<rect x=\"0\" y=\"0\" width=\"1000\" height=\"645px\" fill=\"" + colorBlack + "\" />\n";

	if( !asData.active && inPlay )
		svgCode += "<rect x=\"10\" y=\"10\" style=\"z-index: -1\" width=\"980\" height=\"580\" fill=\"" + colorRed + "\" />\n";
	else
		svgCode += "<rect x=\"10\" y=\"10\" style=\"z-index: -1\" width=\"980\" height=\"580\" fill=\"" + colorWhite + "\" />\n";

	// Attempt to put unit's image in background...
	if( asData.imageURL ) {
		svgCode += "    <image x=\"440\" y=\"10\" xlink:href=\"" + asData.imageURL + "\" x=\"0\" y=\"0\" width=\"" + leftBoxWidth + "\" height=\"500\" />\n";
	}


	// Mech Name and Custom Name
	if( asData.customName ) {
		svgCode += "<text x=\"20\" y=\"50\" font-family=\"sans-serif\" font-size=\"35\">" + asData.customName  + "</text>\n";
		if( asData.name.toUpperCase().length > 45 ) {
			svgCode += "<text x=\"20\" y=\"75\" font-family=\"sans-serif\" font-size=\"13\">" + asData.name.toUpperCase()  + "</text>\n";
		} else {
			svgCode += "<text x=\"20\" y=\"75\" font-family=\"sans-serif\" font-size=\"20\">" + asData.name.toUpperCase()  + "</text>\n";
		}
	} else {
		if( asData.name.toUpperCase().length > 45 ) {
			words = asData.name.split( " " );
			halfWords = Math.floor( words.length / 2) + 1;
			firstLine = "";
			secondLine = "";

			for( var lCount = 0; lCount <= halfWords; lCount++ )
				firstLine += words[ lCount ] + " ";

			for( var lCount = halfWords + 1; lCount < words.length ; lCount++ )
				secondLine += words[ lCount ] + " ";

			svgCode += "<text x=\"20\" y=\"50\" font-family=\"sans-serif\" font-size=\"35\">" + firstLine.toUpperCase()  + "</text>\n";
			svgCode += "<text x=\"20\" y=\"80\" font-family=\"sans-serif\" font-size=\"35\">" + secondLine.toUpperCase()  + "</text>\n";
		} else {
			svgCode += "<text x=\"20\" y=\"50\" font-family=\"sans-serif\" font-size=\"35\">" + asData.name.toUpperCase()  + "</text>\n";
		}
	}

	//svgCode += "<text x=\"800\" y=\"50\" font-family=\"sans-serif\" font-size=\"11\">" + groupIndex + ", " + mechIndex + ", " + itemIDField + "</text>\n";
	// Point Value
	svgCode += "<rect x=\"850\" y=\"9\" width=\"150\" height=\"35\" fill=\"" + colorBlack + "\" />\n";
	//svgCode += "<rect x=\"780\" y=\"9\" width=\"70\" height=\"35\" fill=\"" + colorBlack + "\" transform=\"rotate( 45, 850, 44)\" />\n";
	svgCode += "<text x=\"990\" y=\"35\" text-anchor=\"end\" fill=\"" + colorWhite + "\" stroke=\"" + colorWhite + "\" font-family=\"sans-serif\" font-size=\"33\">PV: " + asData.currentPoints  + "</text>\n";

	/*
	 *  Movement, Type, Role, Skill, etc
	*/
	// Gray, Rounded Box
	svgCode += "<rect x=\"20\" y=\"100\" width=\"" + leftBoxWidth + "\" height=\"105\" fill=\"" + colorBlack + "\" rx=\"18\" ry=\"18\" />\n";
	svgCode += "<rect x=\"25\" y=\"105\" width=\"" + ( leftBoxWidth - 10 ) + "\" height=\"95\" fill=\"" + colorGrayBackground + "\" rx=\"15\" ry=\"15\" />\n";

	//Type
	svgCode += "<text x=\"30\" y=\"140\" font-family=\"sans-serif\" font-size=\"25\">TP: " + asData.type.toUpperCase()  + "</text>\n";

	//Size
	svgCode += "<text x=\"150\" y=\"140\" font-family=\"sans-serif\" font-size=\"25\">SZ: " + asData.size.toString().toUpperCase()  + "</text>\n";

	//TMM
	if( asData.isAerospace == false )
		svgCode += "<text x=\"235\" y=\"140\" font-family=\"sans-serif\" font-size=\"25\">TMM: " + asData.currentTMM.toUpperCase()  + "</text>\n";

	//Move
	svgCode += "<text x=\"" + (leftBoxWidth - 10) + "\" y=\"140\" font-family=\"sans-serif\" text-anchor=\"end\" font-size=\"25\">MV: " + asData.currentMove.toUpperCase()  + "</text>\n";

	//Role
	svgCode += "<text x=\"30\" y=\"180\" font-family=\"sans-serif\" font-size=\"25\">ROLE: " + asData.role.toUpperCase()  + "</text>\n";


	//Skill
	svgCode += "<text x=\"" + (leftBoxWidth - 10) + "\" y=\"180\" font-family=\"sans-serif\" text-anchor=\"end\" font-size=\"25\">SKILL: " + asData.currentSkill.toString().toUpperCase()  + "</text>\n";

	/*
	 *  Damage Section
	*/

	// Gray, Rounded Box
	svgCode += "<rect x=\"20\" y=\"210\" width=\"" + leftBoxWidth + "\" height=\"85\" fill=\"" + colorBlack + "\" rx=\"18\" ry=\"18\" />\n";
	svgCode += "<rect x=\"25\" y=\"215\" width=\"" + ( leftBoxWidth - 10 ) + "\" height=\"75\" fill=\"" + colorGrayBackground + "\" rx=\"15\" ry=\"15\" />\n";



	// Damage Label
	svgCode += "<text x=\"55\" y=\"250\" font-family=\"sans-serif\" text-anchor=\"middle\" font-size=\"15\" transform=\"rotate(270, 58, 250)\">DAMAGE</text>\n";

	var firstDamageLineY = 245;
	var secondDamageLineY = 280;
	if( asData.damage.extreme > 0 ) {
		shortX = 120;
		mediumX = 240;
		longX = 350;
		extremeX = 460;

		// Short
		svgCode += "<text x=\"" + shortX  +"\" y=\"" + firstDamageLineY + "\" font-family=\"sans-serif\" text-anchor=\"middle\" font-size=\"15\">S (+0 | " + asData.currentToHitShort + "+)</text>\n";
		svgCode += "<text x=\"" + shortX  +"\" y=\"" + secondDamageLineY + "\" font-family=\"sans-serif\" text-anchor=\"middle\" font-size=\"30\">" + asData.currentDamage.short  + "</text>\n";


		// Medium
		svgCode += "<text x=\"" + mediumX  +"\" y=\"" + firstDamageLineY + "\" font-family=\"sans-serif\" text-anchor=\"middle\" font-size=\"15\">M (+2 | " + asData.currentToHitMedium + "+)</text>\n";
		svgCode += "<text x=\"" + mediumX  +"\" y=\"" + secondDamageLineY + "\" font-family=\"sans-serif\" text-anchor=\"middle\" font-size=\"30\">" + asData.currentDamage.medium  + "</text>\n";

		// Long
		svgCode += "<text x=\"" + longX  +"\" y=\"" + firstDamageLineY + "\" font-family=\"sans-serif\" text-anchor=\"middle\" font-size=\"15\">L (+4 | " + asData.currentToHitLong + "+)</text>\n";
		svgCode += "<text x=\"" + longX  +"\" y=\"" + secondDamageLineY + "\" font-family=\"sans-serif\" text-anchor=\"middle\" font-size=\"30\">" + asData.currentDamage.long  + "</text>\n";

		// Extreme
		svgCode += "<text x=\"" + extremeX  +"\" y=\"" + firstDamageLineY + "\" font-family=\"sans-serif\" text-anchor=\"middle\" font-size=\"15\">E (+6 | " + asData.currentToHitExtreme + "+)</text>\n";
		svgCode += "<text x=\"" + extremeX  +"\" y=\"" + secondDamageLineY + "\" font-family=\"sans-serif\" text-anchor=\"middle\" font-size=\"30\">" + asData.currentDamage.extreme  + "</text>\n";

	} else {
		shortX = 140;
		mediumX = 290;
		longX = 440;
		extremeX = 0;

		// Short
		svgCode += "<text x=\"" + shortX  +"\" y=\"" + firstDamageLineY + "\" font-family=\"sans-serif\" text-anchor=\"middle\" font-size=\"20\">S (+0 | " + asData.currentToHitShort + "+)</text>\n";
		svgCode += "<text x=\"" + shortX  +"\" y=\"" + secondDamageLineY + "\" font-family=\"sans-serif\" text-anchor=\"middle\" font-size=\"35\">" + asData.currentDamage.short  + "</text>\n";


		// Medium
		svgCode += "<text x=\"" + mediumX  +"\" y=\"" + firstDamageLineY + "\" font-family=\"sans-serif\" text-anchor=\"middle\" font-size=\"20\">M (+2 | " + asData.currentToHitMedium + "+)</text>\n";
		svgCode += "<text x=\"" + mediumX  +"\" y=\"" + secondDamageLineY + "\" font-family=\"sans-serif\" text-anchor=\"middle\" font-size=\"35\">" + asData.currentDamage.medium  + "</text>\n";

		// Long
		svgCode += "<text x=\"" + longX  +"\" y=\"" + firstDamageLineY + "\" font-family=\"sans-serif\" text-anchor=\"middle\" font-size=\"20\">L (+4 | " + asData.currentToHitLong + "+)</text>\n";
		svgCode += "<text x=\"" + longX  +"\" y=\"" + secondDamageLineY + "\" font-family=\"sans-serif\" text-anchor=\"middle\" font-size=\"35\">" + asData.currentDamage.long  + "</text>\n";
	}


	/*
	 *  Overheat Section
	*/
	var armorBoxStart = 400;
	if( asData.type.toLowerCase() != 'pm' && !asData.isInfantry ) {
		svgCode += "<rect x=\"20\" y=\"310\" width=\"" + leftBoxWidth + "\" height=\"80\" fill=\"" + colorBlack + "\" rx=\"18\" ry=\"18\" />\n";
		svgCode += "<rect x=\"25\" y=\"315\" width=\"" + ( leftBoxWidth - 10 ) + "\" height=\"70\" fill=\"" + colorGrayBackground + "\" rx=\"15\" ry=\"15\" />\n";

		svgCode += "<text x=\"40\" y=\"360\" font-family=\"sans-serif\" font-size=\"35\">OV: " + asData.overheat + "</text>\n";

		// heat container...
		svgCode += "<text x=\"240\" y=\"357\" text-anchor=\"end\" font-family=\"sans-serif\" font-size=\"15\">HEAT SCALE</text>\n";
		svgCode += "<rect x=\"" + ( leftBoxWidth - 255 ) + "\" y=\"320\" width=\"265\" height=\"60\" fill=\"" + colorBlack + "\" rx=\"30\" ry=\"30\"  />\n";

		var inActiveColor = "rgb(102,102,102)";
		var onClickFunction = "";
		var mouseHandClass = "";


		// 0 Heat....
		if( asData.currentHeat < 1 && inPlay ) {
			svgCode += "<rect x=\"" + ( leftBoxWidth - 225 ) + "\" y=\"325\" width=\"25\" height=\"50\" fill=\"" + colorGreen + "\" />\n";
			svgCode += "<circle cx=\"" + ( leftBoxWidth - 225 ) + "\" cy=\"350\" r=\"25\" fill=\"" + colorGreen + "\" />\n";
			svgCode += "<text x=\"" + ( leftBoxWidth - 225 - 10 ) + "\" y=\"363\" text-anchor=\"left\" style=\"fill: " + colorWhite + "\" font-family=\"sans-serif\" font-size=\"35\">0</text>\n";
		} else {
			if( inPlay ) {
				onClickFunction = "ASChangeSVGHeat( 0, " + groupIndex + ", "+ mechIndex+ ", '" + itemIDField + "')";
				mouseHandClass = "mouse-hand";
			}
			svgCode += "<rect onclick=\"" + onClickFunction + "\" class=\"" + mouseHandClass + "\" x=\"" + ( leftBoxWidth - 225 ) + "\" y=\"325\" width=\"25\" height=\"50\" fill=\"" + inActiveColor + "\" />\n";
			svgCode += "<circle onclick=\"" + onClickFunction + "\" class=\"" + mouseHandClass + "\" cx=\"" + ( leftBoxWidth - 225 ) + "\" cy=\"350\" r=\"25\" fill=\"" + inActiveColor + "\" />\n";
			svgCode += "<text onclick=\"" + onClickFunction + "\" class=\"" + mouseHandClass + "\" x=\"" + ( leftBoxWidth - 225 - 10 ) + "\" y=\"363\" text-anchor=\"left\" style=\"fill: " + colorWhite + "\" font-family=\"sans-serif\" font-size=\"35\">0</text>\n";
		}

		// 1 Heat....
		//~ svgCode += "<rect x=\"280\" y=\"320\" width=\"60\" height=\"60\" fill=\"" + colorBlack + "\" />\n";
		if( asData.currentHeat == 1 && inPlay ) {
			svgCode += "<rect x=\"" + ( leftBoxWidth - 195 ) + "\" y=\"325\" width=\"45\" height=\"50\" fill=\"" + colorYellow + "\" />\n";
			svgCode += "<text x=\"" + ( leftBoxWidth - 195 + 10 ) + "\" y=\"363\" text-anchor=\"left\" style=\"fill: " + colorWhite + "\" font-family=\"sans-serif\" font-size=\"35\">1</text>\n";
		} else {
			if( inPlay ) {
				onClickFunction = "ASChangeSVGHeat( 1, " + groupIndex + ", "+ mechIndex+ ", '" + itemIDField + "')";
				mouseHandClass = "mouse-hand";
			}
			svgCode += "<rect onclick=\"" + onClickFunction + "\" class=\"" + mouseHandClass + "\" x=\"" + ( leftBoxWidth - 195 ) + "\" y=\"325\" width=\"45\" height=\"50\" fill=\"" + inActiveColor + "\" />\n";
			svgCode += "<text onclick=\"" + onClickFunction + "\" class=\"" + mouseHandClass + "\" x=\"" + ( leftBoxWidth - 195 + 10 ) + "\" y=\"363\" text-anchor=\"left\" style=\"fill: " + colorWhite + "\" font-family=\"sans-serif\" font-size=\"35\">1</text>\n";

		}

		// 2 Heat....
		//~ svgCode += "<rect x=\"340\" y=\"320\" width=\"60\" height=\"60\" fill=\"" + colorBlack + "\" />\n";
		if( asData.currentHeat == 2 && inPlay ) {
			svgCode += "<rect x=\"" + ( leftBoxWidth - 145 ) + "\" y=\"325\" width=\"45\" height=\"50\" fill=\"" + colorRed + "\" />\n";
			svgCode += "<text x=\"" + ( leftBoxWidth - 145 + 10 ) + "\" y=\"363\" text-anchor=\"left\" style=\"fill: " + colorWhite + "\" font-family=\"sans-serif\" font-size=\"35\">2</text>\n";
		} else {
			if( inPlay ) {
				onClickFunction = "ASChangeSVGHeat( 2, " + groupIndex + ", "+ mechIndex+ ", '" + itemIDField + "')";
				mouseHandClass = "mouse-hand";
			}
			svgCode += "<rect onclick=\"" + onClickFunction + "\" class=\"" + mouseHandClass + "\" x=\"" + ( leftBoxWidth - 145 ) + "\" y=\"325\" width=\"45\" height=\"50\" fill=\"" + inActiveColor + "\" />\n";
			svgCode += "<text onclick=\"" + onClickFunction + "\" class=\"" + mouseHandClass + "\" x=\"" + ( leftBoxWidth - 145 + 10 ) + "\" y=\"363\" text-anchor=\"left\" style=\"fill: " + colorWhite + "\" font-family=\"sans-serif\" font-size=\"35\">2</text>\n";

		}
		// 3 Heat....
		//~ svgCode += "<rect x=\"400\" y=\"320\" width=\"60\" height=\"60\" fill=\"" + colorBlack + "\" />\n";
		if( asData.currentHeat == 3 && inPlay ) {
			svgCode += "<rect x=\"" + ( leftBoxWidth - 95 ) + "\" y=\"325\" width=\"45\" height=\"50\" fill=\"" + colorOrange + "\" />\n";
			svgCode += "<text x=\"" + ( leftBoxWidth - 95 + 10 ) + "\" y=\"363\" text-anchor=\"left\" style=\"fill: " + colorWhite + "\" font-family=\"sans-serif\" font-size=\"35\">3</text>\n";
		} else {
			if( inPlay ) {
				onClickFunction = "ASChangeSVGHeat( 3, " + groupIndex + ", "+ mechIndex+ ", '" + itemIDField + "')";
				mouseHandClass = "mouse-hand";
			}
			svgCode += "<rect onclick=\"" + onClickFunction + "\" class=\"" + mouseHandClass + "\" x=\"" + ( leftBoxWidth - 95 ) + "\" y=\"325\" width=\"45\" height=\"50\" fill=\"" + inActiveColor + "\" />\n";
			svgCode += "<text onclick=\"" + onClickFunction + "\" class=\"" + mouseHandClass + "\" x=\"" + ( leftBoxWidth - 95 + 10 ) + "\" y=\"363\" text-anchor=\"left\" style=\"fill: " + colorWhite + "\" font-family=\"sans-serif\" font-size=\"35\">3</text>\n";

		}
		// s Heat....
		//~ svgCode += "<rect x=\"400\" y=\"320\" width=\"60\" height=\"60\" fill=\"" + colorBlack + "\" />\n";
		if( asData.currentHeat > 3 && inPlay ) {
			svgCode += "<rect x=\"" + ( leftBoxWidth - 45 ) + "\" y=\"325\" width=\"25\" height=\"50\" fill=\"" + colorDarkGray + "\" />\n";
			svgCode += "<circle cx=\"" + ( leftBoxWidth - 20 ) + "\" cy=\"350\" r=\"25\" fill=\"" + colorDarkGray + "\" />\n";
			svgCode += "<text x=\"" + ( leftBoxWidth - 45 + 10 ) + "\" y=\"363\" text-anchor=\"left\" style=\"fill: " + colorWhite + "\" font-family=\"sans-serif\" font-size=\"35\">S</text>\n";
		} else {
			if( inPlay ) {
				onClickFunction = "ASChangeSVGHeat( 4, " + groupIndex + ", "+ mechIndex+ ", '" + itemIDField + "')";
				mouseHandClass = "mouse-hand";
			}
			svgCode += "<rect onclick=\"" + onClickFunction + "\" class=\"" + mouseHandClass + "\" x=\"" + ( leftBoxWidth - 45 ) + "\" y=\"325\" width=\"25\" height=\"50\" fill=\"" + inActiveColor + "\" />\n";
			svgCode += "<circle onclick=\"" + onClickFunction + "\" class=\"" + mouseHandClass + "\" cx=\"" + ( leftBoxWidth - 20 ) + "\" cy=\"350\" r=\"25\" fill=\"" + inActiveColor + "\" />\n";
			svgCode += "<text onclick=\"" + onClickFunction + "\" class=\"" + mouseHandClass + "\" x=\"" + ( leftBoxWidth - 45 + 10) + "\" y=\"363\" text-anchor=\"left\" style=\"fill: " + colorWhite + "\" font-family=\"sans-serif\" font-size=\"35\">S</text>\n";
		}
	} else {
		armorBoxStart = 300;
	}


	/*
	 *  Armor and IS Section
	*/

	// Gray, Rounded Box
	svgCode += "<rect x=\"20\" y=\"" + (armorBoxStart) + "\" width=\"" + leftBoxWidth + "\" height=\"105\" fill=\"" + colorBlack + "\" rx=\"18\" ry=\"18\" />\n";
	svgCode += "<rect x=\"25\" y=\"" + (armorBoxStart + 5) + "\" width=\"" + ( leftBoxWidth - 10 ) + "\" height=\"95\" fill=\"" + colorGrayBackground + "\" rx=\"15\" ry=\"15\" />\n";




	var armorTopBase = armorBoxStart + 15;
	var isTopBase = armorBoxStart + 60;
	var buttonRadius = 15;
	var leftBase = 90;

	if( asData.isAerospace ) {
		svgCode += "<text x=\"" + ( leftBoxWidth - 25) + "\" y=\"" + ( armorTopBase + 25) + "\" text-anchor=\"middle\" font-family=\"sans-serif\" font-size=\"35\">TH</text>\n";
		svgCode += "<text x=\"" + ( leftBoxWidth - 25) + "\" y=\"" + ( armorTopBase + 65) + "\" text-anchor=\"middle\" font-family=\"sans-serif\" font-size=\"35\">" + asData.threshold + "</text>\n";
	}

	var armorClass = "";
	var armorFunction = "";
	if( inPlay ) {
		svgCode += "<text x=\"80\" y=\"" + ( armorTopBase + 25) + "\" font-family=\"sans-serif\" font-size=\"25\">A: </text>\n";
		svgCode += "<text x=\"80\" y=\"" + ( isTopBase + 25) + "\" font-family=\"sans-serif\" font-size=\"25\">S: </text>\n";


		var onClick = "ASTakeDamage( " + groupIndex + ", "+ mechIndex + ", '" + itemIDField + "')";
		svgCode += "<rect class=\"mouse-hand\" onclick=\"" + onClick + "\" x=\"30\" y=\"" + (armorBoxStart + 10) + "\" width=\"" + ( 40 ) + "\" height=\"85\" fill=\"" + colorRed + "\" rx=\"15\" ry=\"15\" />\n";
		svgCode += "<text class=\"mouse-hand\" onclick=\"" + onClick + "\" x=\"60\" y=\"" + (armorBoxStart + 30) + "\" fill=\"" + colorWhite + "\" font-family=\"sans-serif\" text-anchor=\"middle\" font-size=\"13\" transform=\"rotate(270, 65, " + (armorBoxStart + 47) + ")\">TAKE</text>\n";
		svgCode += "<text class=\"mouse-hand\" onclick=\"" + onClick + "\" x=\"70\" y=\"" + (armorBoxStart + 30) + "\" fill=\"" + colorWhite + "\" font-family=\"sans-serif\" text-anchor=\"middle\" font-size=\"13\" transform=\"rotate(270, 75, " + (armorBoxStart + 45) + ")\">DAMAGE</text>\n";
		leftBase += 40;
	} else {
		svgCode += "<text x=\"40\" y=\"" + ( armorTopBase + 25) + "\" font-family=\"sans-serif\" font-size=\"25\">A: </text>\n";
		svgCode += "<text x=\"40\" y=\"" + ( isTopBase + 25) + "\" font-family=\"sans-serif\" font-size=\"25\">S: </text>\n";
	}

	for( var armorCount = 0; armorCount < asData.currentArmor.length; armorCount++ ) {
		if( inPlay ) {
			var armorClass = "mouse-hand";
			var armorFunction = "ASToggleArmorPip( " + armorCount + ", " + groupIndex + ", "+ mechIndex+ ", '" + itemIDField + "')";
		}
		svgCode += "<circle class=\"" + armorClass + "\" onclick=\"" + armorFunction + "\" cx=\"" + ( leftBase + (buttonRadius * 2 + 3 ) * armorCount )  + "\" cy=\"" + ( armorTopBase + buttonRadius + 2 )  + "\" r=\"" + buttonRadius + "\" fill=\"" + colorBlack + "\" />\n";
	//	svgCode += "<circle class=\"" + armorClass + "\" onclick=\"" + armorFunction + "\" cx=\"150\" cy=\"" + armorTopBase + "\" r=\"" + buttonRadius + "\" fill=\"green\" />\n";
		if( asData.currentArmor[ armorCount ] && inPlay ) {
			svgCode += "<circle class=\"" + armorClass + "\" onclick=\"" + armorFunction + "\" cx=\"" + ( leftBase + (buttonRadius * 2 + 3 ) * armorCount )  + "\" cy=\"" + ( armorTopBase + buttonRadius + 2 )  + "\" r=\"" + (buttonRadius -3 )+ "\" fill=\"" + colorRed + "\" />\n";
		} else {
			svgCode += "<circle class=\"" + armorClass + "\" onclick=\"" + armorFunction + "\" cx=\"" + ( leftBase + (buttonRadius * 2 + 3 ) * armorCount )  + "\" cy=\"" + ( armorTopBase + buttonRadius + 2 )  + "\" r=\"" + (buttonRadius -3 ) + "\" fill=\"" + colorWhite + "\" />\n";
		}
	}

	var structClass = "";
	var structFunction = "";
	for( var structCount = 0; structCount < asData.currentStructure.length; structCount++ ) {
		if( inPlay ) {
			var structClass = "mouse-hand";
			var structFunction = "ASToggleStructPip( " + structCount + ", " + groupIndex + ", "+ mechIndex + ", '" + itemIDField + "')";
		}
		svgCode += "<circle class=\"" + structClass + "\" onclick=\"" + structFunction + "\" cx=\"" + ( leftBase + (buttonRadius * 2 + 3 ) * structCount )  + "\" cy=\"" + ( isTopBase + buttonRadius + 2 )  + "\" r=\"" + buttonRadius + "\" fill=\"" + colorBlack + "\" />\n";
	//	svgCode += "<circle class=\"" + structClass + "\" onclick=\"" + structFunction + "\" cx=\"150\" cy=\"" + armorTopBase + "\" r=\"" + buttonRadius + "\" fill=\"green\" />\n";
		if( asData.currentStructure[ structCount ] && inPlay ) {
			svgCode += "<circle class=\"" + structClass + "\" onclick=\"" + structFunction + "\" cx=\"" + ( leftBase + (buttonRadius * 2 + 3 ) * structCount )  + "\" cy=\"" + ( isTopBase + buttonRadius + 2 )  + "\" r=\"" + (buttonRadius -3 )+ "\" fill=\"" + colorRed + "\" />\n";
		} else {
			svgCode += "<circle class=\"" + structClass + "\" onclick=\"" + structFunction + "\" cx=\"" + ( leftBase + (buttonRadius * 2 + 3 ) * structCount )  + "\" cy=\"" + ( isTopBase + buttonRadius + 2 )  + "\" r=\"" + (buttonRadius -3 ) + "\" fill=\"" + colorLightGray + "\" />\n";
		}
	}


	/*
	 *  Special Section
	*/

	// Gray, Rounded Box
	svgCode += "<rect x=\"20\" y=\"510\" width=\"960\" height=\"60\" fill=\"" + colorBlack + "\" rx=\"18\" ry=\"18\" />\n";
	svgCode += "<rect x=\"25\" y=\"515\" width=\"950\" height=\"50\" fill=\"" + colorGrayBackground + "\" rx=\"15\" ry=\"15\" />\n";
	if( asData.abilities )
		svgCode += "<text x=\"30\" y=\"550\" text-anchor=\"left\" font-family=\"sans-serif\" font-size=\"25\">SPECIAL: " + asData.abilities + "</text>\n";
	else
		svgCode += "<text x=\"30\" y=\"550\" text-anchor=\"left\" font-family=\"sans-serif\" font-size=\"25\">SPECIAL: (none)</text>\n";


	/*
	 *  Critical Hits Section
	*/

	if( !asData.isInfantry ) {

		critLineHeight = 50;
		critLineStart = 325;

		// Gray, Rounded Box
		svgCode += "<rect x=\"" + (leftBoxWidth + 30) + "\" y=\"245\" width=\"" + (950 - leftBoxWidth ) + "\" height=\"260\" fill=\"" + colorBlack + "\" rx=\"18\" ry=\"18\" />\n";
		svgCode += "<rect x=\"" + (leftBoxWidth + 35) + "\" y=\"250\" width=\"" + (950 - 10 - leftBoxWidth ) + "\" height=\"250\" fill=\"" + colorGrayBackground + "\" rx=\"15\" ry=\"15\" />\n";

		//
		svgCode += "<text x=\"" + (leftBoxWidth + 35 + (950 - leftBoxWidth ) / 2) + "\" y=\"275\" text-anchor=\"middle\" font-family=\"sans-serif\" font-size=\"25\">CRITICAL HITS</text>\n";

		var leftmostCritButton = (leftBoxWidth + 35 + (950 - leftBoxWidth ) / 2) - 15;

		// Engine Hits
		if( asData.type.toLowerCase() != 'pm') {

			svgCode += "<text x=\"" + (leftBoxWidth + (950 - leftBoxWidth ) / 2) + "\" y=\"" + critLineStart + "\" text-anchor=\"end\" font-family=\"sans-serif\" font-size=\"20\">ENGINE</text>\n";
			for( var critCount = 0; critCount < asData.engineHits.length; critCount++ ) {
				if( inPlay ) {
					var critClass = "mouse-hand";
					var critFunction = "ASToggleEngineHit( " + critCount + ", " + groupIndex + ", "+ mechIndex+ ", '" + itemIDField + "')";
				}
				svgCode += "<circle class=\"" + critClass + "\" onclick=\"" + critFunction + "\" cx=\"" + ( leftmostCritButton + (buttonRadius * 2 + 3 ) * critCount )  + "\" cy=\"" + ( critLineStart - 27 + buttonRadius + 2 )  + "\" r=\"" + buttonRadius + "\" fill=\"" + colorBlack + "\" />\n";

				if( asData.engineHits[ critCount ] && inPlay ) {
					svgCode += "<circle class=\"" + critClass + "\" onclick=\"" + critFunction + "\" cx=\"" + ( leftmostCritButton + (buttonRadius * 2 + 3 ) * critCount )  + "\" cy=\"" + ( critLineStart - 27 + buttonRadius + 2 )  + "\" r=\"" + (buttonRadius -3 )+ "\" fill=\"" + colorRed + "\" />\n";
				} else {
					svgCode += "<circle class=\"" + critClass + "\" onclick=\"" + critFunction + "\" cx=\"" + ( leftmostCritButton + (buttonRadius * 2 + 3 ) * critCount )  + "\" cy=\"" + ( critLineStart - 27 + buttonRadius + 2 )  + "\" r=\"" + (buttonRadius -3 ) + "\" fill=\"" + colorWhite + "\" />\n";
				}
			}
			svgCode += "<text x=\"" + (leftBoxWidth + (950 - leftBoxWidth ) / 2) + "\" y=\"" + ( critLineStart + buttonRadius + 3 ) + "\" text-anchor=\"start\" font-family=\"sans-serif\" font-size=\"12\">+1 Heat/Firing Weapons</text>\n";
			critLineStart += critLineHeight;
		}



		// Fire Control Hits
		svgCode += "<text x=\"" + (leftBoxWidth + (950 - leftBoxWidth ) / 2) + "\" y=\"" + critLineStart + "\" text-anchor=\"end\" font-family=\"sans-serif\" font-size=\"20\">FIRE CONTROL</text>\n";
		for( var critCount = 0; critCount < asData.fireControlHits.length; critCount++ ) {
			if( inPlay ) {
				var critClass = "mouse-hand";
				var critFunction = "ASToggleFireControlHit( " + critCount + ", " + groupIndex + ", "+ mechIndex+ ", '" + itemIDField + "')";
			}
			svgCode += "<circle class=\"" + critClass + "\" onclick=\"" + critFunction + "\" cx=\"" + ( leftmostCritButton + (buttonRadius * 2 + 3 ) * critCount )  + "\" cy=\"" + ( critLineStart - 27 + buttonRadius + 2 )  + "\" r=\"" + buttonRadius + "\" fill=\"" + colorBlack + "\" />\n";

			if( asData.fireControlHits[ critCount ] && inPlay ) {
				svgCode += "<circle class=\"" + critClass + "\" onclick=\"" + critFunction + "\" cx=\"" + ( leftmostCritButton + (buttonRadius * 2 + 3 ) * critCount )  + "\" cy=\"" + ( critLineStart - 27 + buttonRadius + 2 )  + "\" r=\"" + (buttonRadius -3 )+ "\" fill=\"" + colorRed + "\" />\n";
			} else {
				svgCode += "<circle class=\"" + critClass + "\" onclick=\"" + critFunction + "\" cx=\"" + ( leftmostCritButton + (buttonRadius * 2 + 3 ) * critCount )  + "\" cy=\"" + ( critLineStart - 27 + buttonRadius + 2 )  + "\" r=\"" + (buttonRadius -3 ) + "\" fill=\"" + colorWhite + "\" />\n";
			}
		}
		svgCode += "<text x=\"" + (leftBoxWidth + (950 - leftBoxWidth ) / 2) + "\" y=\"" + ( critLineStart + buttonRadius + 3 ) + "\" text-anchor=\"start\" font-family=\"sans-serif\" font-size=\"12\">+2 To Hit Each</text>\n";
		critLineStart += critLineHeight;

		if( asData.type.toLowerCase() == 'bm' || asData.type.toLowerCase() == 'pm' ) {
			// MP Hits
			svgCode += "<text x=\"" + (leftBoxWidth + (950 - leftBoxWidth ) / 2) + "\" y=\"" + critLineStart + "\" text-anchor=\"end\" font-family=\"sans-serif\" font-size=\"20\">MP</text>\n";
			for( var critCount = 0; critCount < asData.mpControlHits.length; critCount++ ) {
				if( inPlay ) {
					var critClass = "mouse-hand";
					var critFunction = "ASToggleMPlHit( " + critCount + ", " + groupIndex + ", "+ mechIndex+ ", '" + itemIDField + "')";
				}
				svgCode += "<circle class=\"" + critClass + "\" onclick=\"" + critFunction + "\" cx=\"" + ( leftmostCritButton + (buttonRadius * 2 + 3 ) * critCount )  + "\" cy=\"" + ( critLineStart - 27 + buttonRadius + 2 )  + "\" r=\"" + buttonRadius + "\" fill=\"" + colorBlack + "\" />\n";

				if( asData.mpControlHits[ critCount ] && inPlay ) {
					svgCode += "<circle class=\"" + critClass + "\" onclick=\"" + critFunction + "\" cx=\"" + ( leftmostCritButton + (buttonRadius * 2 + 3 ) * critCount )  + "\" cy=\"" + ( critLineStart - 27 + buttonRadius + 2 )  + "\" r=\"" + (buttonRadius -3 )+ "\" fill=\"" + colorRed + "\" />\n";
				} else {
					svgCode += "<circle class=\"" + critClass + "\" onclick=\"" + critFunction + "\" cx=\"" + ( leftmostCritButton + (buttonRadius * 2 + 3 ) * critCount )  + "\" cy=\"" + ( critLineStart - 27 + buttonRadius + 2 )  + "\" r=\"" + (buttonRadius -3 ) + "\" fill=\"" + colorWhite + "\" />\n";
				}
			}
			svgCode += "<text x=\"" + (leftBoxWidth + (950 - leftBoxWidth ) / 2) + "\" y=\"" + ( critLineStart + buttonRadius + 3 ) + "\" text-anchor=\"start\" font-family=\"sans-serif\" font-size=\"12\">1/2 Move Each</text>\n";
			critLineStart += critLineHeight;
		}

		// Weapon Hits
		svgCode += "<text x=\"" + (leftBoxWidth + (950 - leftBoxWidth ) / 2) + "\" y=\"" + critLineStart + "\" text-anchor=\"end\" font-family=\"sans-serif\" font-size=\"20\">WEAPONS</text>\n";
		for( var critCount = 0; critCount < asData.weaponHits.length; critCount++ ) {
			if( inPlay ) {
				var critClass = "mouse-hand";
				var critFunction = "ASToggleWeaponHits( " + critCount + ", " + groupIndex + ", "+ mechIndex+ ", '" + itemIDField + "')";
			}
			svgCode += "<circle class=\"" + critClass + "\" onclick=\"" + critFunction + "\" cx=\"" + ( leftmostCritButton + (buttonRadius * 2 + 3 ) * critCount )  + "\" cy=\"" + ( critLineStart - 27 + buttonRadius + 2 )  + "\" r=\"" + buttonRadius + "\" fill=\"" + colorBlack + "\" />\n";

			if( asData.weaponHits[ critCount ] && inPlay ) {
				svgCode += "<circle class=\"" + critClass + "\" onclick=\"" + critFunction + "\" cx=\"" + ( leftmostCritButton + (buttonRadius * 2 + 3 ) * critCount )  + "\" cy=\"" + ( critLineStart - 27 + buttonRadius + 2 )  + "\" r=\"" + (buttonRadius -3 )+ "\" fill=\"" + colorRed + "\" />\n";
			} else {
				svgCode += "<circle class=\"" + critClass + "\" onclick=\"" + critFunction + "\" cx=\"" + ( leftmostCritButton + (buttonRadius * 2 + 3 ) * critCount )  + "\" cy=\"" + ( critLineStart - 27 + buttonRadius + 2 )  + "\" r=\"" + (buttonRadius -3 ) + "\" fill=\"" + colorWhite + "\" />\n";
			}
		}
		svgCode += "<text x=\"" + (leftBoxWidth + (950 - leftBoxWidth ) / 2) + "\" y=\"" + ( critLineStart + buttonRadius + 3 ) + "\" text-anchor=\"start\" font-family=\"sans-serif\" font-size=\"12\">-1 Damage Each</text>\n";
		critLineStart += critLineHeight;


		if( asData.type.toLowerCase() == 'cv' || asData.type.toLowerCase() == 'sv' ) {
			// Vehicile Motive Hits
			svgCode += "<text x=\"" + (leftBoxWidth + (950 - leftBoxWidth ) / 2) + "\" y=\"" + critLineStart + "\" text-anchor=\"end\" font-family=\"sans-serif\" font-size=\"20\">MOTIVE</text>\n";

			if( inPlay ) {


				var critClass = "mouse-hand";
				var critFunction = "ASToggleMPlHit( 0, " + groupIndex + ", "+ mechIndex+ ", '" + itemIDField + "')";
				svgCode += "<circle class=\"" + critClass + "\" onclick=\"" + critFunction + "\" cx=\"" + ( leftmostCritButton + (buttonRadius * 2 + 1 ) * 0 )  + "\" cy=\"" + ( critLineStart - 27 + buttonRadius + 2 )  + "\" r=\"" + buttonRadius + "\" fill=\"" + colorBlack + "\" />\n";

				if( asData.mpControlHits[ 0 ] ) {
					svgCode += "<circle class=\"" + critClass + "\" onclick=\"" + critFunction + "\" cx=\"" + ( leftmostCritButton + (buttonRadius * 2 + 1 ) * 0 )  + "\" cy=\"" + ( critLineStart - 27 + buttonRadius + 2 )  + "\" r=\"" + (buttonRadius -3 )+ "\" fill=\"" + colorRed + "\" />\n";
				} else {
					svgCode += "<circle class=\"" + critClass + "\" onclick=\"" + critFunction + "\" cx=\"" + ( leftmostCritButton + (buttonRadius * 2 + 1 ) * 0 )  + "\" cy=\"" + ( critLineStart - 27 + buttonRadius + 2 )  + "\" r=\"" + (buttonRadius -3 ) + "\" fill=\"" + colorWhite + "\" />\n";
				}

				critFunction = "ASToggleMPlHit( 1, " + groupIndex + ", "+ mechIndex+ ", '" + itemIDField + "')";
				svgCode += "<circle class=\"" + critClass + "\" onclick=\"" + critFunction + "\" cx=\"" + ( leftmostCritButton + (buttonRadius * 2 + 1 ) * 1 )  + "\" cy=\"" + ( critLineStart - 27 + buttonRadius + 2 )  + "\" r=\"" + buttonRadius + "\" fill=\"" + colorBlack + "\" />\n";
				if( asData.mpControlHits[ 1 ] ) {
					svgCode += "<circle class=\"" + critClass + "\" onclick=\"" + critFunction + "\" cx=\"" + ( leftmostCritButton + (buttonRadius * 2 + 1 ) * 1 )  + "\" cy=\"" + ( critLineStart - 27 + buttonRadius + 2 )  + "\" r=\"" + (buttonRadius -3 )+ "\" fill=\"" + colorRed + "\" />\n";
				} else {
					svgCode += "<circle class=\"" + critClass + "\" onclick=\"" + critFunction + "\" cx=\"" + ( leftmostCritButton + (buttonRadius * 2 + 1 ) * 1 )  + "\" cy=\"" + ( critLineStart - 27 + buttonRadius + 2 )  + "\" r=\"" + (buttonRadius -3 ) + "\" fill=\"" + colorWhite + "\" />\n";
				}

				critFunction = "ASToggleMPlHit( 2, " + groupIndex + ", "+ mechIndex+ ", '" + itemIDField + "')";
				svgCode += "<circle class=\"" + critClass + "\" onclick=\"" + critFunction + "\" cx=\"" + ( leftmostCritButton + (buttonRadius * 2 + 1 ) * 2 +15 )  + "\" cy=\"" + ( critLineStart - 27 + buttonRadius + 2 )  + "\" r=\"" + buttonRadius + "\" fill=\"" + colorBlack + "\" />\n";
				if( asData.mpControlHits[ 2 ] ) {
					svgCode += "<circle class=\"" + critClass + "\" onclick=\"" + critFunction + "\" cx=\"" + ( leftmostCritButton + (buttonRadius * 2 + 1 ) * 2 +15 )  + "\" cy=\"" + ( critLineStart - 27 + buttonRadius + 2 )  + "\" r=\"" + (buttonRadius -3 )+ "\" fill=\"" + colorRed + "\" />\n";
				} else {
					svgCode += "<circle class=\"" + critClass + "\" onclick=\"" + critFunction + "\" cx=\"" + ( leftmostCritButton + (buttonRadius * 2 + 1 ) * 2 +15 )  + "\" cy=\"" + ( critLineStart - 27 + buttonRadius + 2 )  + "\" r=\"" + (buttonRadius -3 ) + "\" fill=\"" + colorWhite + "\" />\n";
				}

				critFunction = "ASToggleMPlHit( 3, " + groupIndex + ", "+ mechIndex+ ", '" + itemIDField + "')";
				svgCode += "<circle class=\"" + critClass + "\" onclick=\"" + critFunction + "\" cx=\"" + ( leftmostCritButton + (buttonRadius * 2 + 1 ) * 3  +15)  + "\" cy=\"" + ( critLineStart - 27 + buttonRadius + 2 )  + "\" r=\"" + buttonRadius + "\" fill=\"" + colorBlack + "\" />\n";
				if( asData.mpControlHits[ 3 ] ) {
					svgCode += "<circle class=\"" + critClass + "\" onclick=\"" + critFunction + "\" cx=\"" + ( leftmostCritButton + (buttonRadius * 2 + 1 ) * 3  +15)  + "\" cy=\"" + ( critLineStart - 27 + buttonRadius + 2 )  + "\" r=\"" + (buttonRadius -3 )+ "\" fill=\"" + colorRed + "\" />\n";
				} else {
					svgCode += "<circle class=\"" + critClass + "\" onclick=\"" + critFunction + "\" cx=\"" + ( leftmostCritButton + (buttonRadius * 2 + 1 ) * 3  +15)  + "\" cy=\"" + ( critLineStart - 27 + buttonRadius + 2 )  + "\" r=\"" + (buttonRadius -3 ) + "\" fill=\"" + colorWhite + "\" />\n";
				}

				critFunction = "ASToggleMPlHit( 4, " + groupIndex + ", "+ mechIndex+ ", '" + itemIDField + "')";
				svgCode += "<circle class=\"" + critClass + "\" onclick=\"" + critFunction + "\" cx=\"" + ( leftmostCritButton + (buttonRadius * 2 + 1 ) * 4 +30 )  + "\" cy=\"" + ( critLineStart - 27 + buttonRadius + 2 )  + "\" r=\"" + buttonRadius + "\" fill=\"" + colorBlack + "\" />\n";
				if( asData.mpControlHits[ 4 ] ) {
					svgCode += "<circle class=\"" + critClass + "\" onclick=\"" + critFunction + "\" cx=\"" + ( leftmostCritButton + (buttonRadius * 2 + 1 ) * 4  +30)  + "\" cy=\"" + ( critLineStart - 27 + buttonRadius + 2 )  + "\" r=\"" + (buttonRadius -3 )+ "\" fill=\"" + colorRed + "\" />\n";
				} else {
					svgCode += "<circle class=\"" + critClass + "\" onclick=\"" + critFunction + "\" cx=\"" + ( leftmostCritButton + (buttonRadius * 2 + 1 ) * 4 +30 )  + "\" cy=\"" + ( critLineStart - 27 + buttonRadius + 2 )  + "\" r=\"" + (buttonRadius -3 ) + "\" fill=\"" + colorWhite + "\" />\n";
				}



			} else {
				critClass = "";
				critFunction = "";
				svgCode += "<circle class=\"" + critClass + "\" onclick=\"" + critFunction + "\" cx=\"" + ( leftmostCritButton + (buttonRadius * 2 + 1 ) * 0 )  + "\" cy=\"" + ( critLineStart - 27 + buttonRadius + 2 )  + "\" r=\"" + buttonRadius + "\" fill=\"" + colorBlack + "\" />\n";
				svgCode += "<circle class=\"" + critClass + "\" onclick=\"" + critFunction + "\" cx=\"" + ( leftmostCritButton + (buttonRadius * 2 + 1 ) * 0 )  + "\" cy=\"" + ( critLineStart - 27 + buttonRadius + 2 )  + "\" r=\"" + (buttonRadius -3 ) + "\" fill=\"" + colorWhite + "\" />\n";


				svgCode += "<circle class=\"" + critClass + "\" onclick=\"" + critFunction + "\" cx=\"" + ( leftmostCritButton + (buttonRadius * 2 + 1 ) * 1 )  + "\" cy=\"" + ( critLineStart - 27 + buttonRadius + 2 )  + "\" r=\"" + buttonRadius + "\" fill=\"" + colorBlack + "\" />\n";
				svgCode += "<circle class=\"" + critClass + "\" onclick=\"" + critFunction + "\" cx=\"" + ( leftmostCritButton + (buttonRadius * 2 + 1 ) * 1 )  + "\" cy=\"" + ( critLineStart - 27 + buttonRadius + 2 )  + "\" r=\"" + (buttonRadius -3 ) + "\" fill=\"" + colorWhite + "\" />\n";


				svgCode += "<circle class=\"" + critClass + "\" onclick=\"" + critFunction + "\" cx=\"" + ( leftmostCritButton + (buttonRadius * 2 + 1 ) * 2 +15 )  + "\" cy=\"" + ( critLineStart - 27 + buttonRadius + 2 )  + "\" r=\"" + buttonRadius + "\" fill=\"" + colorBlack + "\" />\n";
				svgCode += "<circle class=\"" + critClass + "\" onclick=\"" + critFunction + "\" cx=\"" + ( leftmostCritButton + (buttonRadius * 2 + 1 ) * 2 +15 )  + "\" cy=\"" + ( critLineStart - 27 + buttonRadius + 2 )  + "\" r=\"" + (buttonRadius -3 ) + "\" fill=\"" + colorWhite + "\" />\n";


				svgCode += "<circle class=\"" + critClass + "\" onclick=\"" + critFunction + "\" cx=\"" + ( leftmostCritButton + (buttonRadius * 2 + 1 ) * 3  +15)  + "\" cy=\"" + ( critLineStart - 27 + buttonRadius + 2 )  + "\" r=\"" + buttonRadius + "\" fill=\"" + colorBlack + "\" />\n";
				svgCode += "<circle class=\"" + critClass + "\" onclick=\"" + critFunction + "\" cx=\"" + ( leftmostCritButton + (buttonRadius * 2 + 1 ) * 3  +15)  + "\" cy=\"" + ( critLineStart - 27 + buttonRadius + 2 )  + "\" r=\"" + (buttonRadius -3 ) + "\" fill=\"" + colorWhite + "\" />\n";


				svgCode += "<circle class=\"" + critClass + "\" onclick=\"" + critFunction + "\" cx=\"" + ( leftmostCritButton + (buttonRadius * 2 + 1 ) * 4 +30 )  + "\" cy=\"" + ( critLineStart - 27 + buttonRadius + 2 )  + "\" r=\"" + buttonRadius + "\" fill=\"" + colorBlack + "\" />\n";
				svgCode += "<circle class=\"" + critClass + "\" onclick=\"" + critFunction + "\" cx=\"" + ( leftmostCritButton + (buttonRadius * 2 + 1 ) * 4 +30 )  + "\" cy=\"" + ( critLineStart - 27 + buttonRadius + 2 )  + "\" r=\"" + (buttonRadius -3 ) + "\" fill=\"" + colorWhite + "\" />\n";


			}
			svgCode += "<text x=\"" + ( leftmostCritButton + (buttonRadius * 2 + 1 ) * 0 - buttonRadius + 20 )  + "\" y=\"" + ( critLineStart + buttonRadius + 3 ) + "\" text-anchor=\"start\" font-family=\"sans-serif\" font-size=\"12\">-2 MV</text>\n";
			svgCode += "<text x=\"" + ( leftmostCritButton + (buttonRadius * 2 + 1 ) * 2 - buttonRadius +10)  + "\" y=\"" + ( critLineStart + buttonRadius + 3 ) + "\" text-anchor=\"start\" font-family=\"sans-serif\" font-size=\"12\">&frac12; Move Each</text>\n";
			svgCode += "<text x=\"" + ( leftmostCritButton + (buttonRadius * 2 + 1 ) * 4 - buttonRadius +30)  + "\" y=\"" + ( critLineStart + buttonRadius + 3 ) + "\" text-anchor=\"start\" font-family=\"sans-serif\" font-size=\"12\">0 MV</text>\n";
			critLineStart += critLineHeight;
		}

	}

	if( !asData.active && inPlay) {
		svgCode += "<text x=\"50\" y=\"100\" font-family=\"sans-serif\" transform=\"rotate( 30, 50, 100)\" font-size=\"150\" stroke=\"" + colorWhite + "\" stroke-width=\"4\" fill=\"" + colorRed + "\">WRECKED</text>\n";
	}


	/*
	 * Battletech and Alpha Strike at bottom...
	 */
		svgCode += "<rect x=\"10\" y=\"610\" width=\"960\" height=\"35\" fill=\"" + colorBlack + "\" />\n";

		svgCode += "<text x=\"20\" y=\"625\" text-anchor=\"start\" font-family=\"sans-serif\" fill=\"" + colorTan + "\" style=\"font-weight: 700;\" font-size=\"30\">ALPHA STRIKE</text>\n";

		svgCode += battleTechLogoSVG ( false, colorTan, colorGold, 750, 600, 250 );

	svgCode += "</g>\n";

	svgCode += "</svg>\n";

	while( svgCode.indexOf( "class=\"undefined\"" ) > 0 ) {

		svgCode = svgCode.replace( "class=\"undefined\"", "" );
	}

	while( svgCode.indexOf( "onclick=\"undefined\"" ) > 0 ) {

		svgCode = svgCode.replace( "onclick=\"undefined\"", "" );
	}

	while( svgCode.indexOf( "  " ) > 0 ) {

		svgCode = svgCode.replace( "  ", " " );
	}

	return svgCode;
}
